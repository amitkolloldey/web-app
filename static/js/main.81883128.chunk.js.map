{"version":3,"sources":["includes/jquery.js","includes/pooper.js","components/header.component.js","components/footer.component.js","components/spinner/spinner.component.js","redux/constants.js","redux/actions/authActions.js","components/sidebar.component.js","redux/actions/orgAction.js","pages/trainerregistrationpage.component.js","components/notfound.component.js","components/orgs.component.js","pages/orgspage.component.js","pages/dashboard.component.js","components/reset.component.js","pages/resetpage.component.js","components/enterreset.component.js","pages/enterresetemailpage.component.js","components/otp.component.js","pages/otppage.component.js","components/register.component.js","pages/registerpage.component.js","components/login.component.js","pages/loginpage.component.js","components/courses.component.js","pages/orgsinglepage.component.js","redux/actions/requestAction.js","history.js","components/requests.component.js","pages/requestspage.component.js","pages/profilepage.component.js","redux/actions/courseAction.js","pages/coursepage.component.js","pages/traineeregistrationpage.component.js","components/reviews.component.js","pages/coursesinglepage.component.js","redux/actions/userAction.js","pages/createtraineeinvitepage.component.js","pages/createtrainerinvitepage.component.js","pages/createorgpage.component.js","pages/course/create_coursepage.component.js","redux/actions/categoryAction.js","pages/createcategory.component.js","pages/course/update/assign_categorypage.component.js","redux/actions/chapterAction.js","components/editchapter.component.js","pages/course/update/create_chapterspage.component.js","pages/notfoundpage.js","components/editfile.component.js","pages/course/update/create_filespage.component.js","components/editexam.component.js","pages/course/update/create_exampage.js","components/editevaluation.component.js","pages/course/update/create_evaluationpage.js","pages/course/update/coursetraineespage.component.js","pages/course/update/coursetrainerspage.component.js","pages/course/update/update_coursepage.component.js","pages/categoriespage.js","pages/profileviewpage.js","pages/singlechapterpage.js","pages/exam_submissionpage.js","redux/actions/examAction.js","pages/myaccountpage.js","components/viewsubmission.component.js","pages/submissionspage.js","components/searchform.js","pages/mycoursespage.component.js","pages/myorgspage.component.js","pages/editorgpage.component.js","Routes.js","App.js","redux/reducers/authReducers.js","redux/reducers/index.js","redux/reducers/orgReducer.js","redux/reducers/loadingReducer.js","redux/reducers/requestReducer.js","redux/reducers/courseReducer.js","redux/reducers/userReducer.js","redux/reducers/categoryReducer.js","redux/reducers/chapterReducer.js","redux/middleware.js","index.js","redux/configureStore.js"],"names":["window","jQuery","$","Popper","Header","className","to","src","alt","Footer","connect","state","isLoading","loading","id","role","API","SET_USER_INFO","TOGGLE_LOADER","RESET_USER_INFO","UPDATE_USER_INFO","SET_ALL_ORGS","ADD_ORG","REMOVE_ORG","UPDATE_ORG","SET_SINGLE_ORG","SET_ALL_CATEGORIES","ADD_CATEGORY","REMOVE_CATEGORY","UPDATE_CATEGORY","REMOVE_COURSE","SET_ALL_CHAPTERS","SET_SINGLE_CHAPTER","UPDATE_CHAPTER","SET_ALL_COURSES","SET_SINGLE_COURSE","SET_ALL_USERS","SET_SINGLE_USER","SET_CURRENT_USER","ADD_COURSE","UPDATE_COURSE","SET_ALL_REQUESTS","REMOVE_REQUEST","logOut","data","onSuccess","onError","localStorage","removeItem","type","constants","setUserInfo","setCurrentUser","userInfo","userId","name","pic","cv","token","Roles","isloggedin","verifiedAt","blocked","phone","email","bio","address","setItem","JSON","stringify","payload","getUserById","method","url","success","response","setSingleUser","postProcessSuccess","getCurrentUser","parseInt","accountCreated","Sidebar","user","dispatchLogoutAction","placeholder","onClick","addOrg","org","fetchAllOrgs","setAllOrgs","postProcessError","getOrgById","orgId","setSingleOrg","dispatch","dispatchTrainerRequestAction","content","trainerRequest","dispatchGetOrgByIdAction","match","useState","setName","params","useEffect","useForm","register","handleSubmit","errors","noValidate","onSubmit","setTimeout","location","replace","toast","message","error","htmlFor","ref","required","cover","value","NotFound","Orgs","orgs","searchTerm","setSearchTerm","filteredData","filter","val","toLowerCase","includes","onChange","event","target","length","map","item","logo","description","fromNow","ago","createdAt","all","dispatchFetchAllOrgsAction","console","log","dispatchResetAction","otp","password","resetPass","ResetPage","dispatchEnterResetAction","enterResetEmail","EnterResetPage","dispatchOtpAction","otpUser","request","courseId","OtpPage","dispatchRegisterAction","formData","FormData","Object","keys","key","append","registerUser","history","useHistory","push","encType","defaultValue","RegisterPage","dispatchLoginAction","loginUser","reload","LoginPage","Courses","courses","title","banner","shortDesc","OrgsList","key_people","setKeyPeople","users","setUsers","setLogo","setDescription","setAddress","setCourses","Users","values","designation","href","showOnlyView","setAllRequests","removeReq","reqId","createBrowserHistory","dispatchHandleAction","status","handleReq","dispatchDeleteAction","deleteReqById","requests","sentByUser","sentToUser","handleSubmitDeny","e","preventDefault","handleSubmitApprove","fromId","handleSubmitDelete","dispatchFetchUserRequestsAction","dispatchUpdateCurrentUserAction","updateCurrentUser","disabled","setAllCourses","getCourseById","addCourse","course","dispatchFetchAllCoursesAction","fetchAllCourses","dispatchTraineeRequestAction","traineeRequest","dispatchGetCourseByIdAction","setTitle","Reviews","TrainerCoursesList","TraineeCoursesList","dispatchFetchCurrentUserAction","exams","setExams","setBanner","setShortDesc","objectives","setObjectives","setPassingMark","visitor_count","setVisitorCount","setCategories","chapters","setChapters","trainers","setTrainer","setComments","setOrg","setTrainee","Exams","Trainers","trainees","passing_mark","categories","Chapters","Comments","Org","objective","dangerouslySetInnerHTML","__html","instructions","fetchAllOrgAdmins","dispatchFetchAllTraineesAction","fetchAllTrainees","dispatchTraineeInviteAction","traineeInvite","setPhone","setEmail","addnew","setAddNew","options","setOptions","res","user_values","label","dispatchFetchAllTrainersAction","fetchAllTrainers","dispatchTrainerInviteAction","trainerInvite","orgname","setOrgName","dispatchFetchAllOrgAdminsAction","dispatchCreateOrgAction","otpGenerator","upperCase","specialChars","createOrg","handleAdd","handleRemove","i","splice","handleChangeKPName","handleChangeKPDesignation","field","idx","dispatchCreateCourseAction","published","createCourse","props","setObjective","rows","theme","addCategory","category","fetchAllCategories","setAllCategories","dispatchFetchAllCategoriesAction","dispatchCreateCategoryAction","createCategory","cat_values","cols","dispatchCategoryAssociate","categoryAssociate","cat","setCat","parentId","Categories","fetchAllChapters","setAllChapters","setSingleChapter","updateExam","examId","updateChapterSet","chapterId","removeChapter","deleteExamById","dispatchEditChapterAction","course_weight","course_id","updateChapter","selectedChapter","tabIndex","data-dismiss","document","getElementById","reset","modal","dispatchCreateChapterAction","chapterCreate","dispatchDeleteChapterAction","deleteChapterById","setFields","setSelectedChapter","selectedChapterId","setSelectedChapterId","handleChangeTitle","handleChangeInstructions","handleChangeCourseWeight","Files","file","exam","a","backdrop","keyboard","show","handleOnDelete","Modal","NotFoundPage","dispatchEditFileAction","fileId","filesId","chapterFileUpdate","selectedFile","rel","dispatchFetchAllChaptersAction","dispatchCreateFileAction","chapter","chapterFileCreate","dispatchDeleteFileAction","deleteFileById","setChapter","setSelectedFile","selectedFileId","setSelectedFileId","chapter_values","ModalFileDelete","dispatchUpdateExamAction","questions","selectedExam","cancelEdit","question","handleChangeQuestion","answerType","handleAnswerType","answers","join","split","handleChangeQuestions","elem","correctAnswer","handleChangeCorrectAnswers","number","dispatchCreateExamAction","creatorId","chapterExamCreate","dispatchDeleteExamAction","selectedExamId","setSelectedExamId","setSelectedExam","ModalExamDelete","selectedEvaluation","dispatchCreateEvaluationAction","qelm","aelm","trim","caelm","courseEvaluationCreate","dispatchDeleteEvaluationAction","ModalEvaluationDelete","CourseTrainees","Trainees","height","width","CourseTrainers","dispatchUpdateCourseAction","updateCourse","setPublished","activeTab","defaultIndex","selectedOptions","dispatchGetSingleUserAction","single_user","dispatchGetSingleUserByIdAction","TrainerCourses","dispatchGetChapterByIdAction","getChapterById","myCourses","concat","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","controls","pluginRenderers","DocViewerRenderers","documents","uri","dispatchGetExamByIdAction","getExamById","dispatchExamSubmissionAction","elm","answer","exam_submission","setExam","preview","qidx","option","aidx","dispatchGetUserByIdAction","selectedSubmission","Exam","User","score","submission","dispatchGetExamSubmissionsAction","getExamSubmissions","submissions","setSubmission","setSelectedSubmission","SearchForm","current_user","dispatchDeleteCourseAction","deleteCourseById","selectedCourse","setSelectedCourse","showConfirmationModal","TraineeCourses","dispatchUpdateOrgAction","updateOrg","Routes","exact","path","component","DashboardPage","OrgsPage","MyOrgsPage","CoursePage","MyCoursesPage","OrgSinglePage","CreateOrgPage","EditOrgPage","CourseSinglePage","RequestsPage","TrainerRegistrationPage","TraineeRegistrationPage","ChapterSinglePage","UpdateCoursePage","CreateTraineeInvitePage","AssignCategoryPage","CreateTrainerInvitePage","CreateCoursePage","ExamSubmission","ProfilePage","CreateCategoryPage","CategoriesPage","ExamAllSubmissions","MyAccountPage","ProfileViewPage","user_id","local_user","parse","getItem","position","autoClose","transition","Slide","defaultState","verified_at","INITIAL_STATE","rootReducer","combineReducers","action","_id","__id","emp","authMiddleware","getState","next","AUTH_TOKEN","axios","headers","post","common","then","catch","err","warn","store","initialState","composeEnhencers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","configureStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.81883128.chunk.js","sourcesContent":["import * as $ from 'jquery'\r\n\r\nwindow.jQuery = window.$ = $","import Popper from 'popper.js'\r\n\r\nwindow.Popper = Popper","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12 text-right\">\r\n                <div className=\"logo\">\r\n                    <Link to='/'><img src={process.env.PUBLIC_URL + '/logo.svg'}  alt='Stitch'/></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Footer = () => (\r\n    <footer>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <p className='copyright'>Developed By Redorange</p>\r\n            </div>\r\n            <div className=\"col-md-6 text-right\">\r\n                <div className=\"partners\">\r\n                    <img src={process.env.PUBLIC_URL + '/partners.png'}  alt='Partners Logo'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n)\r\n\r\nexport default Footer","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './spinner.css'\r\n\r\nconst Spinner = ({isLoading}) => (\r\n            <div>\r\n                {\r\n                    isLoading ? (<div id='spinner-fade'>\r\n                        <div className='default-spinner spinner-border' role='status'>\r\n                        </div>\r\n                    </div>) : null\r\n                }\r\n            </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoading: state.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(Spinner);","export const API = 'API';\r\nexport const SET_USER_INFO = 'SET_USER_INFO';\r\nexport const TOGGLE_LOADER = 'TOGGLE_LOADER';\r\nexport const ACCOUNT_CREATED = 'ACCOUNT_CREATED';\r\nexport const RESET_USER_INFO = 'RESET_USER_INFO';\r\nexport const UPDATE_USER_INFO = 'UPDATE_USER_INFO';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\n\r\nexport const SET_ALL_ORGS = 'SET_ALL_ORGS';\r\nexport const ADD_ORG = 'ADD_ORG';\r\nexport const REMOVE_ORG = 'REMOVE_ORG';\r\nexport const UPDATE_ORG = 'UPDATE_ORG';\r\nexport const SET_SINGLE_ORG = 'SET_SINGLE_ORG';\r\n\r\nexport const SET_ALL_CATEGORIES = 'SET_ALL_CATEGORIES';\r\nexport const ADD_CATEGORY = 'ADD_CATEGORY';\r\nexport const REMOVE_CATEGORY = 'REMOVE_CATEGORY';\r\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nexport const REMOVE_COURSE = 'REMOVE_COURSE';\r\n\r\nexport const SET_ALL_CHAPTERS = 'SET_ALL_CHAPTERS';\r\nexport const SET_SINGLE_CHAPTER = 'SET_SINGLE_CHAPTER';\r\nexport const UPDATE_CHAPTER = 'UPDATE_CHAPTER';\r\nexport const REMOVE_CHAPTER = 'REMOVE_CHAPTER';\r\n\r\nexport const SET_ALL_COURSES = 'SET_ALL_COURSES';\r\nexport const SET_SINGLE_COURSE = 'SET_SINGLE_COURSES';\r\n\r\nexport const SET_ALL_USERS = 'SET_ALL_USERS';\r\nexport const SET_SINGLE_USER = 'GET_SINGLE_USER';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const ADD_COURSE = 'ADD_COURSE';\r\nexport const UPDATE_COURSE = 'UPDATE_COURSE';\r\n\r\nexport const SET_ALL_REQUESTS = 'SET_ALL_REQUESTS';\r\nexport const REMOVE_REQUEST = 'REMOVE_REQUEST';\r\nexport const UPDATE_REQUEST = 'UPDATE_REQUEST';\r\n\r\n","import * as constants from '../constants'\r\n\r\nexport const registerUser = (data, onSuccess, onError) => {\r\n    let formData = new FormData();\r\n\r\n    if (data.pic) {\r\n        data.pic = data.pic[0]\r\n    }\r\n\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'auth/register',\r\n            data: formData,\r\n            success: (response) => (accountCreated(response)),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nexport const loginUser = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'POST',\r\n        url: 'auth/login',\r\n        data,\r\n        success: (response) => (setUserInfo(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nexport const otpUser = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'POST',\r\n        url: 'requests/process',\r\n        data,\r\n        success: (response) => (setUserInfo(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nexport const resetPass = (data, onSuccess, onError) => (\r\n    {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'requests/process',\r\n            data,\r\n            success: (response) => (setUserInfo(response.data) ),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    })\r\n\r\nexport const enterResetEmail = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'POST',\r\n        url: 'auth/forgot',\r\n        data,\r\n        success: (response) => (accountCreated(response)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nexport const logOut = (data, onSuccess, onError) => {\r\n    localStorage.removeItem('CURRENT_USER');\r\n    return {\r\n        type: constants.RESET_USER_INFO\r\n    }\r\n}\r\n\r\nconst setUserInfo = (data) => {\r\n    setCurrentUser(data.id, data)\r\n\r\n    const userInfo = {\r\n        userId: data.id,\r\n        name: data.name,\r\n        pic: data.pic,\r\n        cv: data.cv,\r\n        token: data.token,\r\n        role: data.Roles[0].name,\r\n        isloggedin: true,\r\n        verifiedAt: data.verifiedAt,\r\n        blocked: data.blocked,\r\n        phone: data.phone,\r\n        email: data.email,\r\n        bio: data.bio,\r\n        address: data.address\r\n    }\r\n\r\n    localStorage.setItem('CURRENT_USER', JSON.stringify(userInfo))\r\n\r\n    return {\r\n        type: constants.SET_USER_INFO,\r\n        payload: userInfo\r\n    }\r\n}\r\n\r\nexport const getUserById = (userId, onSuccess) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'GET',\r\n            url: `users/${userId}`,\r\n            success: (response) => (setSingleUser(userId, response.data)),\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCurrentUser = (userId, onSuccess) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'GET',\r\n            url: `users/${parseInt(userId)}`,\r\n            success: (response) => (setCurrentUser(userId, response.data)),\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n\r\nconst setCurrentUser = (userId, data) => {\r\n    return {\r\n        type: constants.SET_CURRENT_USER,\r\n        payload: {userId, data}\r\n    }\r\n}\r\n\r\nconst setSingleUser = (userId, data) => {\r\n    return {\r\n        type: constants.SET_SINGLE_USER,\r\n        payload: {userId, data}\r\n    }\r\n}\r\n\r\nconst accountCreated = (data) => {\r\n    const message = {\r\n        success: 'Success!'\r\n    }\r\n\r\n    return {\r\n        type: constants.ACCOUNT_CREATED,\r\n        payload: message\r\n    }\r\n}\r\n\r\nexport const updateCurrentUser = (data, onSuccess, onError) => {\r\n    let formData = new FormData();\r\n\r\n    if (data.pic) {\r\n        data.pic = data.pic[0]\r\n    }\r\n\r\n    if (data.cv) {\r\n        data.cv = data.cv[0]\r\n    }\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'PUT',\r\n            url: `users/${data.userId}`,\r\n            data: formData,\r\n            success: (response) => (setUserInfo(response.data)),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};","import React from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nfunction Sidebar({user, dispatchLogoutAction}) {\r\n\r\n    return (\r\n        <div className='left_sidebar'>\r\n            <div className=\"user_image\">\r\n                <Link to={'/profilepage/' + user.userId}>\r\n                    {user.pic ? (<img src={user.pic} alt={user.name}/>) : (<i className='fas fa-user'/>)}\r\n                    <p className='user_role'>{user.role}</p>\r\n                    <h4 className='user_name'>{user.name}</h4>\r\n                </Link>\r\n            </div>\r\n            <ul className='main_side_menu'>\r\n                <li className='search_field_all'>\r\n                    <input type=\"search\" placeholder='Search'/>\r\n                    <i className=\"fas fa-search\"/>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/orgs\"><i className=\"fas fa-university\"/> <span> All Organizations</span></NavLink>\r\n                </li>\r\n                {\r\n                    user.role === 'Organization Admin' || user.role === 'Trainer' ? (\r\n                        <li>\r\n                            <NavLink to={\"/myorgs/\" + user.userId}><i className=\"fas fa-building\"/> <span> My Organizations</span></NavLink>\r\n                        </li>) : ''\r\n                }\r\n                {\r\n                    user.role === 'Super Admin' ? (<li>\r\n                        <NavLink to=\"/create_org\">\r\n                            <i className=\"fas fa-plus-circle\"/>\r\n                            <span> Create Organization</span>\r\n                        </NavLink>\r\n                    </li>) : ''\r\n                }\r\n                <li>\r\n                    <NavLink to=\"/courses\"><i className=\"fas fa-book\"/> <span> All Courses</span></NavLink>\r\n                </li>\r\n\r\n                {\r\n                    user.role === 'Super Admin' ? (<li>\r\n                        <li>\r\n                            <NavLink to=\"/categories\"><i className=\"fas fa-cubes\"/> <span> Categories</span></NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/create_category\"><i className=\"fas fa-plus-circle\"/>\r\n                                <span> Create Categories</span></NavLink>\r\n                        </li>\r\n                    </li>) : ''\r\n                }\r\n                {\r\n                    user.role !== 'Super Admin' ? (\r\n                        <>\r\n                            <li>\r\n                                <NavLink to=\"/requests\"><i className=\"fas fa-plus-circle\"/>\r\n                                    <span> Requests</span></NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to={\"/mycourses/\" + user.userId}><i className=\"fas fa-book-open\"/> <span> My Courses</span></NavLink>\r\n                            </li>\r\n                        </>\r\n                    ) : ''\r\n                }\r\n                {/*{*/}\r\n                {/*    user.role === 'Super Admin' ? (<li>*/}\r\n                {/*        <NavLink to=\"/users\"><i className=\"fas fa-users\"/> <span> Users</span></NavLink>*/}\r\n                {/*    </li>) : ''*/}\r\n                {/*}*/}\r\n                {\r\n                    user.role !== 'Super Admin' ? (\r\n                        <>\r\n                            <li>\r\n                                <Link to='/'><i className=\"fas fa-envelope\"/> <span> Messages</span></Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/'><i className=\"fas fa-globe\"/> <span> Notifications</span></Link>\r\n                            </li>\r\n                        </>\r\n                    ) : ''\r\n                }\r\n            </ul>\r\n            <ul className='bottom_sidemenu'>\r\n                <li>\r\n                    <Link to=\"/\"><i className=\"fab fa-facebook\"/></Link>\r\n                    <Link to=\"/\"><i className=\"fab fa-twitter\"/></Link>\r\n                    <Link to=\"/\"><i className=\"fab fa-linkedin\"/></Link>\r\n                </li>\r\n                <li className='bottom_btn'>\r\n                    <button className='btn logout_btn' onClick={dispatchLogoutAction}><i\r\n                        className=\"fas fa-sign-out-alt\"/> Logout\r\n                    </button>\r\n                    {/*<Link className='btn logout_btn' to={'my_account'}><i*/}\r\n                    {/*    className=\"fas fa-user\"/> My Account*/}\r\n                    {/*</Link>*/}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import * as constants from '../constants'\r\nimport * as otpGenerator from \"otp-generator\";\r\n\r\nexport const createOrg = (data, onSuccess, onError) => {\r\n    console.log(data)\r\n    data['user']['password'] = otpGenerator.generate(6, {upperCase: false, specialChars: false});\r\n\r\n    let formData = new FormData();\r\n\r\n    if (data.key_people) {\r\n        data.key_people = JSON.stringify(data.key_people)\r\n    }\r\n\r\n    if (data.user) {\r\n        data.user = JSON.stringify(data.user)\r\n    }\r\n\r\n    if (data.logo) {\r\n        data.logo = data.logo[0]\r\n    }\r\n\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'orgs',\r\n            data: formData,\r\n            success: (org) => (addOrg(org.data)),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateOrg = (orgId, data, onSuccess, onError) => {\r\n\r\n    let formData = new FormData();\r\n\r\n    if (data.key_people) {\r\n        data.key_people = JSON.stringify(data.key_people)\r\n    }\r\n\r\n    if (data.user) {\r\n        data.user = JSON.stringify(data.user)\r\n    }\r\n\r\n    if (data.logo) {\r\n        data.logo = data.logo[0]\r\n    }\r\n\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'PUT',\r\n            url: 'orgs/'+parseInt(orgId),\r\n            data: formData,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nconst addOrg = (org) => (\r\n    {\r\n        type: constants.ADD_ORG,\r\n        payload: org\r\n    }\r\n);\r\n\r\nexport const fetchAllOrgs = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: 'orgs',\r\n        data,\r\n        success: (response) => (setAllOrgs(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nconst setAllOrgs = (data) => {\r\n    return {\r\n        type: constants.SET_ALL_ORGS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const getOrgById = (orgId, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: `orgs/${orgId}`,\r\n        success: (response) => (setSingleOrg(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n});\r\n\r\nconst setSingleOrg = (data) => {\r\n    return {\r\n        type: constants.SET_SINGLE_ORG,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const trainerRequest = (data, onSuccess) => {\r\n    data['content']['title'] = 'Trainer Request By ' + data['content']['user_name'] + ' to the organization named '+ data['content']['entity_name'];\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `requests`,\r\n            data,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n\r\nexport const trainerInvite = (data, onSuccess) => {\r\n    data['content']['title'] = 'Invite to Join ' + data['content']['name'];\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `requests`,\r\n            data,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n\r\n// export const updateOrgById = (orgId, data, onSuccess, onError) => ({\r\n//     type: constants.API,\r\n//     payload: {\r\n//         method: 'PUT',\r\n//         url: `orgs/${orgId}`,\r\n//         data,\r\n//         success: (orgId, data) => (updateOrg(orgId, data)),\r\n//         postProcessSuccess: onSuccess,\r\n//         postProcessError: onError\r\n//     }\r\n// });","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getOrgById, trainerRequest} from '../redux/actions/orgAction';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst TrainerRegistrationPage = ({user,loading, match, dispatchTrainerRequestAction, dispatchGetOrgByIdAction}) => {\r\n    const [name, setName] = useState('');\r\n    const {orgId} = match.params;\r\n    useEffect(() => {\r\n        if (orgId) {\r\n            dispatchGetOrgByIdAction(orgId, (response) => {\r\n                setName(response.data.name);\r\n            });\r\n        }\r\n    }, [dispatchGetOrgByIdAction, match.params]);\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchTrainerRequestAction(data.content, data.type, data.orgId, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/requests'), 300)\r\n            }\r\n            toast.success('Request Sent Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Request To {name} Became A Trainer </h2>\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    <p className='some_info alert alert-info'>The Organization Admin Will Get Your Request and Process\r\n                        It After Seeing Your Profile Information. Please Make Sure Your Profile Is Complete along With a\r\n                        CV Before Sending any Join Request. </p>\r\n                    <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"cover\" className=\"form-label\">Cover Letter</label>\r\n                            <textarea name=\"content[message]\" id=\"cover\" className='form-control'\r\n                                      placeholder='Cover Letter'\r\n                                      ref={register({required: true})}/>\r\n                            {errors.cover && (<p className='error'>Cover Letter is required*</p>)}\r\n                            <input type=\"hidden\" name='type' value='trainer_registration'\r\n                                   ref={register({required: true})}/>\r\n                            <input type=\"hidden\" name='content[entity_name]' value={name}\r\n                                   ref={register({required: true})}/>\r\n                            <input type=\"hidden\" name='content[user_name]' value={user.name}\r\n                                   ref={register({required: true})}/>\r\n                            <input type=\"hidden\" name='orgId' value={orgId} ref={register({required: true})}/>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Send Request</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchTrainerRequestAction: (content, type, orgId, onSuccess, onError) =>\r\n        dispatch(trainerRequest({content, type, orgId}, onSuccess, onError)),\r\n    dispatchGetOrgByIdAction: (orgId, onSuccess) =>\r\n        dispatch(getOrgById(orgId, onSuccess))\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrainerRegistrationPage)\r\n\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className=\"text-center  not_found\">\r\n            <h2><i className=\"far fa-folder-open fa-3x\"/></h2>\r\n            <h4 className=\"text-center\">No data Found!</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFound from \"./notfound.component\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst Orgs = ({orgs, user}) => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const filteredData = orgs && orgs.filter((val) => {\r\n        if (searchTerm === '') {\r\n            return val\r\n        } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n            return val\r\n        }else{\r\n            return []\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='orgs_list'>\r\n            <div className=\"card-group row\">\r\n                <div className=\"col-12 p-3\">\r\n                    <div className=\"filter_section\">\r\n                        <form>\r\n                            <input type=\"search\" name='search' id='search' placeholder='Enter Keyword To Search...'\r\n                                   className='form-control' onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                            }}/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    filteredData && filteredData.length > 0 ? (\r\n                            filteredData.map(item => (\r\n                                <div className=\"col-4 p-3\" key={item.id}>\r\n                                    <div className=\"card_img org_logo\">\r\n                                        <img className=\"card-img-top\" src={item.logo}\r\n                                             alt={item.name}/>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{item.name}</h5>\r\n                                        <p className=\"card-text\">{item.description}</p>\r\n                                    </div>\r\n                                    <div className=\"card-footer pub_time\">\r\n                                        <small className=\"text-muted\">Created <Moment fromNow\r\n                                                                                      ago>{item.createdAt}</Moment> ago</small>\r\n                                    </div>\r\n                                    <div className=\"card-footer btns\">\r\n                                        <Link to={`/orgs/${item.id}`} className='join_link view_btn'>View Details</Link>\r\n                                        {\r\n                                            user.role === 'Super Admin' ? (<Link to={`/edit_org/${item.id}`}\r\n                                                                                 className='join_link '>Edit</Link>) : ''\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))) :\r\n                        (\r\n                            <NotFound/>\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Orgs;","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Orgs from \"../components/orgs.component\";\r\nimport {fetchAllOrgs} from '../redux/actions/orgAction';\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst OrgsPage = ({orgs, dispatchFetchAllOrgsAction, user}) => {\r\n\r\n    useEffect(() => dispatchFetchAllOrgsAction((response) => {\r\n        console.log('Organizations Loaded')\r\n    }, (message) => toast.error(message)), [dispatchFetchAllOrgsAction]);\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n\r\n            <h2 className='page_title'>All Organizations</h2>\r\n            <div className='main_content'>\r\n                <Orgs orgs={orgs} user={user}/>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        orgs: state.orgs.all,\r\n        loading: state.loading,\r\n        user: state.user\r\n    });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllOrgsAction: () => dispatch(fetchAllOrgs())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgsPage)\r\n\r\n","import React from 'react'\r\nimport {logOut} from \"../redux/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst DashboardPage = ({user}) => (\r\n    <div className='right_wrapper'>\r\n        <h2 className='page_title'>Welcome To Stitch {user.name}</h2>\r\n\r\n    </div>\r\n)\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchLogoutAction: () => {\r\n        dispatch(logOut());\r\n        toast.success('You are logged out!');\r\n    }\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage)\r\n","import React from 'react'\r\nimport {resetPass} from \"../redux/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst Reset = ({dispatchResetAction}) => {\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const onSubmit = (data) => {\r\n        dispatchResetAction(data.otp, data.password, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/'), 300)\r\n            }\r\n            toast.success('Your Password Was Reset!');\r\n        }, (message) => toast.error(message))\r\n        return false\r\n    }\r\n    return (\r\n        <div className='login_form'>\r\n            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"otp\" className=\"form-label\">Otp</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"otp\"\r\n                           placeholder=\"123456\" ref={register({required: true})} name='otp'/>\r\n                    {errors.otp && (<p className='error'>6 digit OTP code is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Enter New Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" ref={register({required: true})}\r\n                           name='password'/>\r\n                    {errors.password && (<p className='error'>New Password is required*</p>)}\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Reset</button>\r\n            </form>\r\n            <div className=\"form_bottom_link\">\r\n                <Link to='/login'>Login</Link>\r\n                <Link to='/register'>Register</Link>\r\n                <Link to='/otp'>Enter Otp</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchResetAction: (otp, password, onSuccess, onError) => dispatch(resetPass({\r\n        otp, password\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Reset)","import React from 'react'\r\nimport Reset from \"../components/reset.component\";\r\n\r\nconst ResetPage = () => (\r\n\r\n    <div className=\"row auth_wrapper\">\r\n        <div className=\"col-md-12\">\r\n            <Reset/>\r\n        </div>\r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default ResetPage\r\n","import React from 'react'\r\nimport {enterResetEmail} from \"../redux/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst Reset = ({dispatchEnterResetAction}) => {\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const onSubmit = (data) => {\r\n        dispatchEnterResetAction(data.email, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/reset'), 300)\r\n            }\r\n            toast.success('Otp Sent to Your Email!');\r\n        }, (message) => toast.error(message))\r\n        return false\r\n    }\r\n    return (\r\n        <div className='login_form'>\r\n            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\"\r\n                           placeholder=\"Your Email\" ref={register({required: true})} name='email'/>\r\n                    {errors.email && (<p className='error'>Email is required*</p>)}\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Reset</button>\r\n            </form>\r\n            <div className=\"form_bottom_link\">\r\n                <Link to='/login'>Login</Link>\r\n                <Link to='/register'>Register</Link>\r\n                <Link to='/otp'>Enter Otp</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchEnterResetAction: (email, onSuccess, onError) => dispatch(enterResetEmail({\r\n        email\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Reset)","import React from 'react'\r\nimport EnterReset from \"../components/enterreset.component\";\r\n\r\nconst EnterResetPage = () => (\r\n\r\n    <div className=\"row auth_wrapper\">\r\n        <div className=\"col-md-12\">\r\n            <EnterReset/>\r\n        </div>\r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default EnterResetPage\r\n","import React from 'react'\r\nimport {otpUser} from \"../redux/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst Otp = ({dispatchOtpAction}) => {\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const onSubmit = (data) => {\r\n        dispatchOtpAction(data.otp, (response) => {\r\n            console.log(response)\r\n            if (response.data && response.data.request && response.data.request.courseId) {\r\n                setTimeout(() => window.location.replace('/courses/' + response.data.request.courseId), 300)\r\n            } else if (response.data && response.data.request && response.data.request.orgId) {\r\n                setTimeout(() => window.location.replace('/orgs/'+ response.data.request.orgId), 300)\r\n            } else {\r\n                setTimeout(() => window.location.replace('/'), 300)\r\n            }\r\n            toast.success('Successfully Validated!');\r\n        }, (message) => toast.error(message))\r\n        return false\r\n    }\r\n    return (\r\n        <div className='login_form'>\r\n            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"otp\" className=\"form-label\">Otp</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"otp\"\r\n                           placeholder=\"123456\" ref={register({required: true})} name='otp'/>\r\n                    {errors.otp && (<p className='error'>6 digit OTP code is required*</p>)}\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Validate</button>\r\n            </form>\r\n            <div className=\"form_bottom_link\">\r\n                <Link to='/register'>Register</Link>\r\n                <Link to='/login'>Login</Link>\r\n                <Link to='/enteremail'>Reset Password</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchOtpAction: (otp, onSuccess, onError) => dispatch(otpUser({\r\n        otp\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Otp)","import React from 'react'\r\nimport Otp from \"../components/otp.component\";\r\n\r\nconst OtpPage = () => (\r\n\r\n    <div className=\"row auth_wrapper\">\r\n        <div className=\"col-md-12\">\r\n            <Otp/>\r\n        </div>\r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default OtpPage\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {registerUser} from \"../redux/actions/authActions\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {toast} from 'react-toastify';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst Register = ({dispatchRegisterAction}) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        dispatchRegisterAction(data.name, data.email, data.password, data.phone, data.bio, data.address, data.pic, data.role, () => {\r\n            toast.success('Account Created Successfully!');\r\n            history.push('/otp')\r\n        }, (message) => toast.error(message))\r\n        return false\r\n    }\r\n\r\n    return (\r\n        <div className='login_form'>\r\n            <form noValidate className=\" p-4\" onSubmit={handleSubmit(onSubmit)} encType='multipart/form-data'>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"name\" className=\"form-label\">Full Name</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"name\"\r\n                           placeholder=\"Full Name\" name='name' ref={register({required: true})}/>\r\n                    {errors.name && (<p className='error'>Name is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"phone\" className=\"form-label\">Phone</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"phone\" name=\"phone\"\r\n                           placeholder=\"0173....\" ref={register({required: true})}/>\r\n                    {errors.phone && (<p className='error'>Phone is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" name='email'\r\n                           placeholder=\"Your email\" ref={register({required: true})}/>\r\n                    {errors.email && (<p className='error'>Email is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" name='password'\r\n                           placeholder=\"Password\" ref={register({required: true})}/>\r\n                    {errors.password && (<p className='error'>Password is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"bio\" className=\"form-label\">Short Bio</label>\r\n                    <textarea name=\"bio\" id=\"bio\" className='form-control' placeholder='Short Bio'\r\n                              ref={register({required: true})}/>\r\n                    {errors.bio && (<p className='error'>Bio is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                    <textarea name=\"address\" id=\"address\" className='form-control' placeholder='Address'\r\n                              ref={register({required: true})}/>\r\n                    {errors.address && (<p className='error'>Address is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"role\" className=\"form-label\">Registering As</label>\r\n                    <select className=\"form-control\" id=\"role\" name='role' defaultValue='Trainee'\r\n                            ref={register({required: true})}>\r\n                        <option value='Trainee'>Trainee</option>\r\n                        <option value='Trainer'>Trainer</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"pic\" className=\"form-label\">Your Image</label>\r\n                    <input className=\"form-control\" type=\"file\" id=\"pic\" name='pic' ref={register}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n            </form>\r\n            <div className=\"form_bottom_link\">\r\n                <Link to='/login'>Login</Link>\r\n                <Link to='/otp'>Enter Otp</Link>\r\n                <Link to='/enteremail'>Reset Password</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchRegisterAction: (name, email, password, phone, bio, address, pic, role, onSuccess, onError) => dispatch(registerUser({\r\n        name, email, password, phone, bio, address, pic, role\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Register)","import React from 'react'\r\nimport Register from \"../components/register.component\";\r\n\r\nconst RegisterPage = () => (\r\n    <div className=\"row auth_wrapper\">\r\n        <div className=\"col-md-12\">\r\n            <Register/>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default RegisterPage\r\n","import React from 'react'\r\nimport {loginUser} from \"../redux/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst Login = ({dispatchLoginAction}) => {\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchLoginAction(data.phone, data.password, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.reload(), 300)\r\n            }\r\n            toast.success('You are logged in');\r\n        }, (message) => toast.error(message))\r\n\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className='login_form'>\r\n            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"phone\" className=\"form-label\">Phone</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"phone\" name='phone'\r\n                           placeholder=\"0173....\" ref={register({required: true})}/>\r\n                    {errors.phone && (<p className='error'>Phone is required*</p>)}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" name='password'\r\n                           placeholder=\"Password\" ref={register({required: true})}/>\r\n                    {errors.password && (<p className='error'>Password is required*</p>)}\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\r\n            </form>\r\n            <div className=\"form_bottom_link\">\r\n                <Link to='/register'>Register</Link>\r\n                <Link to='/otp'>Enter Otp</Link>\r\n                <Link to='/enteremail'>Reset Password</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchLoginAction: (phone, password, onSuccess, onError) => dispatch(loginUser({\r\n        phone, password\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react'\r\nimport Login from \"../components/login.component\";\r\n\r\nconst LoginPage = () => (\r\n\r\n    <div className=\"row auth_wrapper\">\r\n        <div className=\"col-md-12\">\r\n            <Login/>\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default LoginPage\r\n","import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFound from \"./notfound.component\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst Courses = ({courses}) => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const filteredData = courses.filter((val) => {\r\n        if (searchTerm === '') {\r\n            return val\r\n        } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n            return val\r\n        }else{\r\n            return []\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='orgs_list'>\r\n            <div className=\"card-group row \">\r\n                <div className=\"col-12 p-3\">\r\n                    <div className=\"filter_section\">\r\n                        <form>\r\n                            <input type=\"search\" name='search' id='search' placeholder='Enter Keyword To Search...'\r\n                                   className='form-control' onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                            }}/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    filteredData.length > 0 ? (\r\n                            filteredData.map(item => (\r\n                                <div className=\"col-4 p-3\" key={item.id}>\r\n                                    <div className=\"card_img\">\r\n                                        <img className=\"card-img-top\"\r\n                                             src={item.banner ? item.banner : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'}\r\n                                             alt={item.title}/>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{item.title}</h5>\r\n                                        <p className=\"card-text\">{item.shortDesc}</p>\r\n                                    </div>\r\n                                    <div className=\"card-footer pub_time\">\r\n                                        <small className=\"text-muted\">Published <Moment fromNow\r\n                                                                                        ago>{item.createdAt}</Moment> ago</small>\r\n                                    </div>\r\n                                    <div className=\"card-footer btns\">\r\n\r\n\r\n                                        <Link to={`/courses/${item.id}`} className='join_link view_btn'>View</Link>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        ) :\r\n                        (\r\n                            <NotFound/>\r\n                        )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Courses;","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {fetchAllOrgs, getOrgById} from '../redux/actions/orgAction';\r\nimport Courses from \"../components/courses.component\";\r\nimport NotFound from \"../components/notfound.component\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst OrgSinglePage = ({match, dispatchGetOrgByIdAction, user, OrgsList}) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [key_people, setKeyPeople] = useState('');\r\n    const [users, setUsers] = useState('');\r\n    const [logo, setLogo] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [courses, setCourses] = useState('');\r\n\r\n    let {orgId} = match.params;\r\n\r\n    orgId = parseInt(orgId)\r\n\r\n    useEffect(() => {\r\n        if (orgId) {\r\n            dispatchGetOrgByIdAction(orgId, (response) => {\r\n                setName(response.data.name);\r\n                setLogo(response.data.logo);\r\n                setAddress(response.data.address);\r\n                setKeyPeople(response.data.key_people);\r\n                setDescription(response.data.description);\r\n                setCourses(response.data.Courses);\r\n                setUsers(response.data.Users);\r\n            });\r\n        }\r\n    }, [dispatchGetOrgByIdAction, match.params]);\r\n\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <div className='main_content'>\r\n                <div className=\"single_page\">\r\n                    <div className=\"text-right mb-3 \">\r\n                        {\r\n                            user.role === 'Trainer' && !OrgsList.includes(orgId) ? (\r\n                                <Link to={`/trainer_registration/${orgId}`}\r\n                                      className='join_link'>Join</Link>) : ''\r\n                        }\r\n                        {\r\n                            OrgsList && user.role === 'Trainer' && OrgsList.includes(orgId) ? (\r\n                                <Link to={`/course_builder/${orgId}`} className='join_link'>Create\r\n                                    Course</Link>) : ''\r\n                        }\r\n                        {\r\n                            OrgsList && user.role === 'Organization Admin' && OrgsList.includes(orgId) ? (\r\n                                <Link to={`/trainer_invite/${orgId}`} className='join_link invite_btn'>Invite\r\n                                    Trainer</Link>) : ''\r\n                        }\r\n                    </div>\r\n                    <div className=\"page_header\">\r\n\r\n                        <h2 className='page_title'>{name}</h2>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4 p-3\">\r\n                                <div className=\"card_img org_logo\">\r\n                                    <img className=\"card-img-top\" src={logo}\r\n                                         alt={name}/>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {description}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4 p-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"single_card_elem\">\r\n                                        <h4>Address</h4>\r\n                                        {address}\r\n                                    </div>\r\n                                    <div className=\"single_card_elem\">\r\n                                        <h4>Key People</h4>\r\n                                        {\r\n                                            key_people && Object.values(key_people).length > 0 ? (\r\n                                                    Object.values(key_people).map(item => {\r\n                                                            return (\r\n                                                                <div className='mb-2'>\r\n                                                                    <div className=\"name\">\r\n                                                                        {item.name}\r\n                                                                    </div>\r\n                                                                    <div className=\"designation\">\r\n                                                                        {item.designation}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                    )) :\r\n                                                (\r\n                                                    <NotFound/>\r\n                                                )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4 p-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"single_card_elem\">\r\n                                        <h4>Trainers Of This Organization</h4>\r\n                                        {\r\n                                            users && users.length > 0 ? (\r\n                                                    users.map(item => (\r\n                                                        <div className='mb-2'>\r\n                                                            <div className=\"single_person\">\r\n                                                                <div className=\"image\">\r\n                                                                    <img\r\n                                                                        src={item.pic ? item.pic : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'}\r\n                                                                        alt={item.name}/>\r\n                                                                </div>\r\n                                                                <div className=\"person_meta\">\r\n                                                                    <div className=\"name\">\r\n                                                                        {item.name}\r\n                                                                    </div>\r\n                                                                    <div className=\"designation\">\r\n                                                                        <a href={'/profile_view/' + item.id}>View\r\n                                                                            Profile</a>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))) :\r\n                                                (\r\n                                                    <NotFound/>\r\n                                                )\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"page_cards mt-5\">\r\n                        <h4 className='page_title'>Courses Provided By This Organization</h4>\r\n                        {\r\n                            courses ? (<Courses courses={courses} user={user} showOnlyView={true}/>) : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetOrgByIdAction: (orgId, onSuccess) =>\r\n        dispatch(getOrgById(orgId, onSuccess)),\r\n    dispatchFetchAllOrgsAction: () => dispatch(fetchAllOrgs())\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgSinglePage)\r\n\r\n","import * as constants from '../constants'\r\n\r\nexport const fetchUserRequests = () => (\r\n\r\n    {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'GET',\r\n            url: 'requests/user',\r\n            success: (response) => (setAllRequests(response.data)),\r\n        }\r\n    })\r\n\r\nconst setAllRequests = (data) => {\r\n    return {\r\n        type: constants.SET_ALL_REQUESTS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const getRequestById = (reqId, onSuccess) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: `requests/${reqId}`,\r\n        postProcessSuccess: onSuccess\r\n    }\r\n});\r\n\r\nexport const deleteReqById = (reqId, data, onSuccess, onError) => (\r\n    {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'DELETE',\r\n            url: `requests/${reqId}`,\r\n            success: (response) => (removeReq(reqId, data)),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n\r\n        }\r\n    });\r\n\r\nexport const handleReq = (data, onSuccess, onError) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `requests/handle/${data.reqId}`,\r\n            data,\r\n            success: (response) => (response.data),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nconst removeReq = (reqId, data) => (\r\n    {\r\n        type: constants.REMOVE_REQUEST,\r\n        payload: {reqId, data}\r\n    }\r\n);\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory( );","import React from 'react'\r\nimport NotFound from \"./notfound.component\";\r\nimport {toast} from \"react-toastify\";\r\nimport {deleteReqById, handleReq} from \"../redux/actions/requestAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport history from '../history';\r\n// Status = [ 'pending', 'approved', 'denied']\r\n\r\nconst Requests = ({requests, user, dispatchHandleAction, dispatchDeleteAction}) => {\r\n\r\n    let sentByUser = requests && requests.sentByUser && requests.sentByUser.length ? requests.sentByUser.filter(function (item) {\r\n        return item.status === 'pending'\r\n    }) : null\r\n\r\n    let sentToUser = requests && requests.sentToUser && requests.sentToUser.length ? requests.sentToUser.filter(function (item) {\r\n        return item.status === 'pending'\r\n    }) : null\r\n\r\n    const handleSubmitDeny = (e, data) => {\r\n        e.preventDefault()\r\n        dispatchHandleAction('denied', e.target.reqId.value, (response) => {\r\n            if (response) {\r\n                history.push('/requests')\r\n            }\r\n            toast.success('Updated Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    const handleSubmitDelete = (e, data, reqId) => {\r\n        e.preventDefault()\r\n        reqId = parseInt(reqId)\r\n        dispatchDeleteAction(reqId, data, (response) => {\r\n            if (response) {\r\n                history.replace('/requests')\r\n            }\r\n            toast.success('Deleted Successfully!');\r\n        }, (message) => toast.error(message))\r\n    }\r\n\r\n    const handleSubmitApprove = (e) => {\r\n        e.preventDefault()\r\n        dispatchHandleAction('approved', e.target.reqId.value, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/requests'), 300)\r\n            }\r\n            toast.success('Updated Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n    return (\r\n        <div className='orgs_list'>\r\n            {\r\n                <div className=\"card-group row request_list\">\r\n                    <h4 className='page_title'>\r\n                        Requests To Me\r\n                    </h4>\r\n                    {\r\n                        sentToUser && sentToUser.length ? (\r\n                            sentToUser.map(item => (\r\n                                <>\r\n                                    {\r\n                                        <div className=\"col-md-6\" key={item.id}>\r\n                                            <div className=\"card-body\">\r\n                                                <p className=\"card-text status\">{item.status}</p>\r\n                                                <h5 className=\"card-title\">{item.content.title}</h5>\r\n                                                <p className=\"card-text\">{item.content.message}</p>\r\n                                                <div className=\"card-footer pub_time\">\r\n                                                    <small className=\"text-muted\">Published <Moment fromNow\r\n                                                                                                    ago>{item.createdAt}</Moment> ago</small>\r\n                                                </div>\r\n                                                <div className=\"card-footer btns req_btns\">\r\n                                                    <form noValidate className=\"p-4\" onSubmit={handleSubmitDeny}>\r\n                                                        <input type=\"hidden\" name='reqId' defaultValue={item.id}/>\r\n                                                        <input type=\"hidden\" name='denied' defaultValue='denied'/>\r\n                                                        <button type='submit'\r\n                                                                className=\"btn join_link btn_remove\">Deny\r\n                                                        </button>\r\n                                                    </form>\r\n                                                    <form noValidate className=\"p-4\" onSubmit={handleSubmitApprove}>\r\n                                                        <input type=\"hidden\" name='reqId' defaultValue={item.id}/>\r\n                                                        <input type=\"hidden\" name='approved' defaultValue='approved'/>\r\n                                                        <button type='submit' className=\"btn join_link\">Accept</button>\r\n                                                    </form>\r\n                                                    {\r\n                                                        item.type === 'trainer_invite' ? (\r\n                                                            <NavLink to={'/orgs/' + item.orgId}\r\n                                                                     className=\"btn join_link view_btn \">View\r\n                                                                Organization</NavLink>) : ''\r\n                                                    }\r\n                                                    {\r\n                                                        item.type === 'trainee_invite' ? (\r\n                                                            <a href={'/courses/' + item.courseId}\r\n                                                               className=\"btn join_link view_btn \">View Course</a>) : ''\r\n                                                    }\r\n                                                    {\r\n                                                        item.type === 'trainee_enrollment' ? (\r\n                                                            <a href={'/profile_view/' + item.fromId}\r\n                                                               className=\"btn join_link view_btn \">View\r\n                                                                Profile</a>) : ''\r\n                                                    }\r\n                                                    {\r\n                                                        item.type === 'trainer_registration' ? (\r\n                                                            <a href={'/profile_view/' + item.fromId}\r\n                                                               className=\"btn join_link view_btn \">View\r\n                                                                Profile</a>) : ''\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            ))\r\n                        ) : (\r\n                            <NotFound/>\r\n                        )\r\n                    }\r\n                </div>\r\n            }\r\n            {\r\n                <div className=\"card-group row request_list\">\r\n                    <h4 className='page_title'>\r\n                        Requests From Me\r\n                    </h4>\r\n                    {\r\n                        sentByUser && sentByUser.length ? (\r\n                            sentByUser.map(item => (\r\n                                <>\r\n                                    {\r\n                                        <div className=\"col-md-6\" key={item.id}>\r\n                                            <div className=\"card-body\">\r\n                                                <p className=\"card-text status\">{item.status}</p>\r\n                                                <h5 className=\"card-title\">{item.content.title}</h5>\r\n                                                <p className=\"card-text\">{item.content.message}</p>\r\n                                                <div className=\"card-footer pub_time\">\r\n                                                    <small className=\"text-muted\">Requested <Moment fromNow ago>{item.createdAt}</Moment> ago</small>\r\n                                                </div>\r\n                                                <div className=\"card-footer btns req_btns\">\r\n                                                    <form noValidate className=\"p-4\"\r\n                                                          onSubmit={(e, data, reqId) => handleSubmitDelete(e, 'sentByUser', item.id)}>\r\n                                                        <button type='submit'\r\n                                                                className=\"btn join_link btn_remove\">Delete\r\n                                                        </button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            ))\r\n                        ) : (\r\n                            <NotFound/>\r\n                        )\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchHandleAction: (status, reqId, onSuccess, onError) =>\r\n        dispatch(handleReq({status, reqId}, onSuccess, onError)),\r\n    dispatchDeleteAction: (reqId, data, onSuccess, onError) =>\r\n        dispatch(deleteReqById(reqId, {data}, onSuccess, onError)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Requests);","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Requests from \"../components/requests.component\";\r\nimport {fetchUserRequests} from '../redux/actions/requestAction';\r\n\r\nconst RequestsPage = ({loading, requests, dispatchFetchUserRequestsAction, user}) => {\r\n    useEffect(() => dispatchFetchUserRequestsAction(), []);\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <div className='main_content'>\r\n                {\r\n                    <Requests requests={requests} user={user}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        requests: state.requests,\r\n        loading: state.loading,\r\n        user: state.user\r\n    });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchUserRequestsAction: () => dispatch(fetchUserRequests())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestsPage)\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {updateCurrentUser} from '../redux/actions/authActions';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ProfilePage = ({loading, user, dispatchUpdateCurrentUserAction}) => {\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchUpdateCurrentUserAction(data.userId, data.name, data.bio, data.address, data.pic, data.cv,(response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/profilepage/'+user.id), 300)\r\n            }\r\n            toast.success('Profile Updated Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>{user.name}'s Profile</h2>\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)} encType='multipart/form-data'>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"name\" className=\"form-label\">Full Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\"\r\n                                   placeholder=\"Full Name\" name='name' ref={register({required: true})}\r\n                                   defaultValue={user.name}/>\r\n                            <input type=\"hidden\" className=\"form-control\" id=\"userId\" name='userId'\r\n                                   ref={register({required: true})}\r\n                                   defaultValue={user.userId}/>\r\n                            {errors.name && (<p className='error'>Name is required*</p>)}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"phone\" className=\"form-label\">Phone</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"phone\" disabled\r\n                                   placeholder=\"0173....\" defaultValue={user.phone}/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                            <input type=\"email\" disabled className=\"form-control\" id=\"email\" name='email'\r\n                                   placeholder=\"Your email\" defaultValue={user.email}/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"bio\" className=\"form-label\">Short Bio</label>\r\n                            <textarea name=\"bio\" id=\"bio\" className='form-control' placeholder='Short Bio'\r\n                                      ref={register({required: true})} defaultValue={user.bio}/>\r\n                            {errors.bio && (<p className='error'>Bio is required*</p>)}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                            <textarea name=\"address\" id=\"address\" className='form-control' placeholder='Address'\r\n                                      ref={register({required: true})} defaultValue={user.address}/>\r\n                            {errors.address && (<p className='error'>Address is required*</p>)}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"pic\" className=\"form-label\">Your Image</label>\r\n                            <input className=\"form-control\" type=\"file\" id=\"pic\" name='pic' ref={register}/>\r\n                            <div className=\"preview\">\r\n                                {\r\n                                    user.pic ? (<div className=\"preview\"><img src={user.pic}/></div>) : ''\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            user.role === 'Trainer' ? (<div className=\"mb-3\">\r\n                                <label htmlFor=\"cv\" className=\"form-label\">Your CV</label>\r\n                                <input className=\"form-control\" type=\"file\" id=\"cv\" name='cv' ref={register}/>\r\n                                {\r\n                                    user.cv ? (<div className=\"preview\"><a href={user.cv} className='btn btn-primary' target=\"_blank\"><i className=\"fas fa-eye\"/> View CV</a></div>) : ''\r\n                                }\r\n                            </div>) : ''\r\n                        }\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchUpdateCurrentUserAction: (userId, name, bio, address, pic, cv, onSuccess, onError) =>\r\n        dispatch(updateCurrentUser({userId, name, bio, address, pic, cv}, onSuccess, onError))\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    loading: state.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage)\r\n\r\n","import * as constants from '../constants'\r\n\r\nexport const fetchAllCourses = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: 'courses',\r\n        data,\r\n        success: (response) => (setAllCourses(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nconst setAllCourses = (data) => {\r\n    return {\r\n        type: constants.SET_ALL_COURSES,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst setSingleCourse = (data) => {\r\n    return {\r\n        type: constants.SET_SINGLE_COURSE,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const getCourseById = (courseId, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: `courses/${courseId}`,\r\n        success: (response) => (setSingleCourse(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n});\r\n\r\nexport const traineeRequest = (data, onSuccess) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `requests`,\r\n            data,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n\r\nexport const traineeInvite = (data, onSuccess) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `requests`,\r\n            data,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n\r\nexport const createCourse = (data, onSuccess, onError) => {\r\n    let formData = new FormData();\r\n    data.published = (data.published === '1')\r\n    if (data.banner) {\r\n        data.banner = data.banner[0]\r\n    }\r\n\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'courses',\r\n            data: formData,\r\n            success: (course) => (addCourse(course.data)),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nexport const categoryAssociate = (data, onSuccess, onError) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'categories/associate',\r\n            data: data.category,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nconst addCourse = (course) => (\r\n    {\r\n        type: constants.ADD_COURSE,\r\n        payload: course\r\n    }\r\n);\r\n\r\nexport const updateCourse = (courseId, data, onSuccess, onError) => {\r\n    let formData = new FormData();\r\n    if (data.banner) {\r\n        data.banner = data.banner[0]\r\n    }\r\n\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'PUT',\r\n            url: `courses/${courseId}`,\r\n            data: formData,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nconst updateCourseSet = (courseId, data) => (\r\n    {\r\n        type: constants.UPDATE_COURSE,\r\n        payload: {courseId, data}\r\n    });\r\n\r\nexport const deleteCourseById = (courseId, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'DELETE',\r\n        url: `courses/${courseId}`,\r\n        // success: () => (removeCourse(courseId)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n});\r\n\r\nconst removeCourse = (courseId) => ({\r\n    type: constants.REMOVE_COURSE,\r\n    payload: courseId\r\n});\r\n\r\nexport const courseEvaluationCreate = (data, onSuccess) => {\r\n    data.questions = data.questions.map(qelm => {\r\n        let answers = qelm.answers.map(aelm => {\r\n            return aelm.trim()\r\n        })\r\n        let correctAnswer = qelm.correctAnswer.map(caelm => {\r\n            return caelm.trim()\r\n        })\r\n        let answerType = qelm.answerType\r\n        let question = qelm.question\r\n        let number = qelm.number\r\n        return {\r\n            answers,\r\n            correctAnswer,\r\n            answerType,\r\n            question,\r\n            number\r\n        }\r\n    })\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `exams`,\r\n            data,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Courses from \"../components/courses.component\";\r\nimport {fetchAllCourses} from '../redux/actions/courseAction';\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst CoursePage = ({ courses, dispatchFetchAllCoursesAction }) => {\r\n\r\n    useEffect(() => {\r\n        dispatchFetchAllCoursesAction( (response) => {\r\n            console.log('Courses Loaded')\r\n        }, (message) => toast.error(message))\r\n    }, [dispatchFetchAllCoursesAction]);\r\n\r\n    return courses ? (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>All Courses</h2>\r\n            <div className='main_content'>\r\n                <Courses courses={courses}/>\r\n            </div>\r\n        </div>\r\n    ) : 'Loading'\r\n}\r\n\r\nconst mapStateToProps = (state) => (console.log(state),{\r\n    courses: state.courses.all,\r\n    loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllCoursesAction: (onSuccess, onError) => dispatch(fetchAllCourses(onSuccess, onError))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursePage)\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getCourseById, traineeRequest} from \"../redux/actions/courseAction\";\r\n\r\nconst TraineeRegistrationPage = ({loading, match, dispatchTraineeRequestAction, dispatchGetCourseByIdAction, user}) => {\r\n    const [title, setTitle] = useState('');\r\n    const {courseId} = match.params;\r\n    useEffect(() => {\r\n        if (courseId) {\r\n            dispatchGetCourseByIdAction(courseId, (response) => {\r\n                setTitle(response.data.title);\r\n            });\r\n        }\r\n    }, [ ]);\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchTraineeRequestAction(data.content, data.type, data.courseId, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/requests'), 300)\r\n            }\r\n            toast.success('Request Sent Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Request To Join {title} </h2>\r\n\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    <p className='some_info alert alert-info'>Trainer will receive your request to join this course.</p>\r\n                    <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"cover\" className=\"form-label\">Cover Letter</label>\r\n                            <textarea name=\"content[message]\" id=\"cover\" className='form-control'\r\n                                      placeholder='Cover Letter'\r\n                                      ref={register({required: true})}/>\r\n                            <input type=\"hidden\" name='content[entity_name]' value={title}\r\n                                   ref={register({required: true})}/>\r\n                            <input type=\"hidden\" name='content[user_name]' value={user.name}\r\n                                   ref={register({required: true})}/>\r\n                            {errors.cover && (<p className='error'>Cover Letter is required*</p>)}\r\n                            <input type=\"hidden\" name='type' defaultValue='trainee_enrollment'\r\n                                   ref={register({required: true})}/>\r\n                            <input type=\"hidden\" name='courseId' defaultValue={courseId}\r\n                                   ref={register({required: true})}/>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Send Request</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchTraineeRequestAction: (content, type, courseId, onSuccess, onError) =>\r\n        dispatch(traineeRequest({content, type, courseId}, onSuccess, onError)),\r\n    dispatchGetCourseByIdAction: (courseId, onSuccess) =>\r\n        dispatch(getCourseById(courseId, onSuccess))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TraineeRegistrationPage)\r\n\r\n","import React from 'react';\r\n\r\nconst Reviews = () => {\r\n\r\n    return (\r\n        <div className=\"col-12 p-3 description_single_course\">\r\n            <div className=\"card-body\">\r\n                <h3 className=\"media-heading\">Reviews</h3>\r\n                <div className=\"single_card_elem\">\r\n                    <div className=\"comments\">\r\n                        <div className=\"single_person comment_single\">\r\n                            <div className=\"parent_comment\">\r\n\r\n                                <div className=\"person_meta\">\r\n                                    <div className=\"image\">\r\n                                        <img src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                            alt='ghgh'/>\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        John Doe\r\n                                        <span>\r\n                                           2 days ago\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"designation\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                        <a href={'/profile_view/'}>Reply</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"single_person comment_single\">\r\n\r\n                                <div className=\"person_meta\">\r\n                                    <div className=\"image\">\r\n                                        <img\r\n                                            src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                            alt='ghgh'/>\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        John Doe\r\n                                        <span>\r\n                                                        2 days ago\r\n                                                    </span>\r\n                                    </div>\r\n                                    <div className=\"designation\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                        <a href={'/profile_view/'}>Reply</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"single_person comment_single\">\r\n                            <div className=\"parent_comment\">\r\n                                <div className=\"person_meta\">\r\n                                    <div className=\"image\">\r\n                                        <img\r\n                                            src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                            alt='ghgh'/>\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        John Doe\r\n                                        <span>\r\n                                                        2 days ago\r\n                                                    </span>\r\n                                    </div>\r\n                                    <div className=\"designation\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                        <a href={'/profile_view/'}>Reply</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"single_person comment_single\">\r\n\r\n                                <div className=\"person_meta\">\r\n                                    <div className=\"image\">\r\n                                        <img\r\n                                            src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                            alt='ghgh'/>\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        John Doe\r\n                                        <span>\r\n                                                        2 days ago\r\n                                                    </span>\r\n                                    </div>\r\n                                    <div className=\"designation\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                        <a href={'/profile_view/'}>Reply</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Reviews","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFound from \"../components/notfound.component\";\r\nimport {deleteCourseById, fetchAllCourses, getCourseById} from \"../redux/actions/courseAction\";\r\nimport Reviews from \"../components/reviews.component\";\r\nimport {getCurrentUser} from \"../redux/actions/authActions\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst CourseSinglePage = ({loading, match, dispatchGetCourseByIdAction, courses, user, OrgsList, TraineeCoursesList, TrainerCoursesList, dispatchFetchCurrentUserAction}) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [exams, setExams] = useState('');\r\n    const [banner, setBanner] = useState('');\r\n    const [shortDesc, setShortDesc] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [objectives, setObjectives] = useState('');\r\n    const [passing_mark, setPassingMark] = useState('');\r\n    const [visitor_count, setVisitorCount] = useState('');\r\n    const [categories, setCategories] = useState('');\r\n    const [chapters, setChapters] = useState('');\r\n    const [trainers, setTrainer] = useState('');\r\n    const [comments, setComments] = useState('');\r\n    const [org, setOrg] = useState('');\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [trainees, setTrainee] = useState('');\r\n\r\n    const {courseId} = match.params;\r\n\r\n    useEffect(() => {\r\n        if (courseId) {\r\n            dispatchGetCourseByIdAction(courseId, (response) => {\r\n                setTitle(response.data.title);\r\n                setExams(response.data.Exams);\r\n                setTrainer(response.data.Trainers);\r\n                setTrainee(response.data.trainees);\r\n                setBanner(response.data.banner);\r\n                setShortDesc(response.data.shortDesc);\r\n                setDescription(response.data.description);\r\n                setDescription(response.data.description);\r\n                setPassingMark(response.data.passing_mark);\r\n                setVisitorCount(response.data.visitor_count);\r\n                setCategories(response.data.categories);\r\n                setChapters(response.data.Chapters);\r\n                setComments(response.data.Comments);\r\n                setOrg(response.data.Org);\r\n                setObjectives(response.data.objective);\r\n            }, (message) => toast.error(message));\r\n        }\r\n    }, [dispatchGetCourseByIdAction, match.params]);\r\n\r\n    useEffect(() => {\r\n        dispatchFetchCurrentUserAction(user.userId, (response) => {\r\n            console.log('Courses Loaded')\r\n        }, (message) => toast.error(message))\r\n    }, [dispatchFetchCurrentUserAction, user.userId]);\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <div className='main_content'>\r\n                <div className=\"single_page\">\r\n                    <div className=\"page_header course_header\">\r\n                        <center>\r\n                            <img\r\n                                src={banner ? banner : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'} className=\"org_logo\"/>\r\n                        </center>\r\n                        <div className=\"row d-flex align-items-center\">\r\n                            <div className=\"col-6 text-left\">\r\n                                <h3 className=\"media-heading course_title single_course_title\">{title}</h3>\r\n                            </div>\r\n                            <div className=\"col-6 text-right\">\r\n                                {\r\n                                    user.role === 'Trainer' && TrainerCoursesList && TrainerCoursesList.length && TrainerCoursesList.includes(parseInt(courseId)) ? (\r\n                                        <Link to={'/trainee_invite/' + courseId} className='btn btn-primary'> Invite\r\n                                            Trainee</Link>) : ''\r\n                                }\r\n                                {\r\n                                    user.role === 'Trainee' && TraineeCoursesList && TraineeCoursesList.length && TraineeCoursesList.includes(parseInt(courseId)) ?\r\n                                                (\r\n                                                    exams.length ?\r\n                                                        (\r\n                                                            <a className='back_to_main_course btn  join_link'\r\n                                                               href={'/exam_submission/' + exams[0].id}>\r\n                                                                Evaluate\r\n                                                            </a>\r\n                                                        ) : ''\r\n                                                ) : ''\r\n                                }\r\n                                <button className='visitor_count mr-2'>Total Visits: {visitor_count}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row single_course_body\">\r\n                        <div className=\"col-6 p-3\">\r\n                            <div className=\"card-body\">\r\n                                {shortDesc}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6 p-3\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"single_card_elem\">\r\n                                    <h4>Trainers Of This Course</h4>\r\n                                    {\r\n                                        trainers && trainers.length > 0 ? (\r\n                                                trainers.map(item => (\r\n                                                    <>\r\n                                                        {\r\n                                                            <div className='mb-2'>\r\n                                                                <div className=\"single_person\">\r\n                                                                    <div className=\"image single_person_img\">\r\n                                                                        <img\r\n                                                                            src={item.pic ? item.pic : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'}\r\n                                                                            alt={item.name}/>\r\n                                                                    </div>\r\n                                                                    <div className=\"person_meta\">\r\n                                                                        <div className=\"name\">\r\n                                                                            {item.name}\r\n                                                                        </div>\r\n                                                                        <div className=\"designation\">\r\n                                                                            <a href={'/profile_view/' + item.id}>View\r\n                                                                                Profile</a>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        }\r\n                                                    </>\r\n                                                ))) :\r\n                                            (\r\n                                                <NotFound/>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 p-3 description_single_course\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"media-heading\">Description</h3>\r\n                                <div className=\"single_card_elem\">\r\n                                    <div className=\"desc_block\">\r\n                                        <div dangerouslySetInnerHTML={{__html: description}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 p-3 description_single_course\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"media-heading\">Objectives</h3>\r\n                                <div className=\"single_card_elem\">\r\n                                    <div className=\"desc_block\">\r\n                                        <div dangerouslySetInnerHTML={{__html: objectives}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 p-3 description_single_course\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"media-heading\">Chapters</h3>\r\n                                {\r\n                                    chapters && chapters.length > 0 ? (\r\n                                        chapters.map(item => (\r\n                                            <div className=\"single_card_elem\">\r\n                                                <div className=\"desc_block\">\r\n                                                    <div className=\"chap_title\">\r\n                                                        {item.title}\r\n                                                    </div>\r\n                                                    <div className=\"chap_desc\">\r\n                                                        <div dangerouslySetInnerHTML={{__html: item.instructions}}/>\r\n                                                    </div>\r\n                                                    {\r\n                                                        TraineeCoursesList && TraineeCoursesList.length && TraineeCoursesList.includes(parseInt(courseId)) ?\r\n                                                            (\r\n                                                                <div className=\"link\">\r\n                                                                    <a href={'/chapters/' + courseId + '/' + item.id}\r\n                                                                       className='view_btn join_link'>View\r\n                                                                        Chapter</a>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                TrainerCoursesList && TrainerCoursesList.length && TrainerCoursesList.includes(parseInt(courseId)) ?\r\n                                                                    (\r\n                                                                        <div className=\"link\">\r\n                                                                            <a href={'/chapters/' + courseId + '/' + item.id}\r\n                                                                               className='view_btn join_link'>View\r\n                                                                                Chapter</a>\r\n                                                                        </div>\r\n                                                                    ) : ''\r\n                                                            )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))) : (<NotFound/>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <Reviews/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetCourseByIdAction: (courseId, onSuccess, onError) =>\r\n        dispatch(getCourseById(courseId, onSuccess, onError)),\r\n    dispatchFetchCurrentUserAction: (userId, onSuccess) => dispatch(getCurrentUser(userId, onSuccess)),\r\n})\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        courses: state.courses,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        TrainerCoursesList: state.users.TrainerCoursesList,\r\n        TraineeCoursesList: state.users.TraineeCoursesList\r\n    });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseSinglePage)","import * as constants from '../constants'\r\n\r\nexport const fetchAllUsers = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: 'users',\r\n        data,\r\n        success: (response) => (setAllUsers(response.data)),\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nexport const fetchAllTrainees = (onSuccess) => {\r\n    const data = {\r\n        \"role\": {\r\n            \"name\": \"Trainee\"\r\n        }\r\n    }\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'users/filtered',\r\n            data,\r\n            postProcessSuccess: onSuccess,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchAllTrainers = (onSuccess) => {\r\n    const data = {\r\n        \"role\": {\r\n            \"name\": \"Trainer\"\r\n        }\r\n    }\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'users/filtered',\r\n            data,\r\n            postProcessSuccess: onSuccess,\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllOrgAdmins = (onSuccess) => {\r\n    const data = {\r\n        \"role\": {\r\n            \"name\": \"Organization Admin\"\r\n        }\r\n    }\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'users/filtered',\r\n            data,\r\n            postProcessSuccess: onSuccess,\r\n        }\r\n    }\r\n}\r\n\r\nconst setAllUsers = (data) => {\r\n    return {\r\n        type: constants.SET_ALL_USERS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n// export const updateOrgById = (orgId, data, onSuccess, onError) => ({\r\n//     type: constants.API,\r\n//     payload: {\r\n//         method: 'PUT',\r\n//         url: `orgs/${orgId}`,\r\n//         data,\r\n//         success: (orgId, data) => (updateOrg(orgId, data)),\r\n//         postProcessSuccess: onSuccess,\r\n//         postProcessError: onError\r\n//     }\r\n// });","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport Select from 'react-select'\r\nimport {getCourseById, traineeInvite} from \"../redux/actions/courseAction\";\r\nimport {fetchAllTrainees} from \"../redux/actions/userAction\";\r\n\r\nconst CreateTraineeInvitePage = ({user,  match, dispatchTraineeInviteAction, dispatchGetCourseByIdAction, dispatchFetchAllTraineesAction}) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [addnew, setAddNew] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [users, setUsers] = useState();\r\n    const {courseId} = match.params;\r\n\r\n        useEffect(() => {\r\n            dispatchGetCourseByIdAction(courseId, (response) => {\r\n                dispatchFetchAllTraineesAction((res ) => {\r\n                    setUsers(res.data)\r\n                })\r\n                setTitle(response.data.title);\r\n            });\r\n\r\n        }, []);\r\n\r\n    if (users && users.length > 0) {\r\n        const user_values = users.map(item => {\r\n            return {\r\n                label: item.name,\r\n                value: item.id\r\n            };\r\n        })\r\n\r\n        if (!options.length > 0) {\r\n            setOptions(user_values);\r\n        }\r\n    }\r\n\r\n    const handleChange = (user) => {\r\n        users.filter(e => (e.id === user.value)).map((item) => {\r\n            setName(item.name);\r\n            setPhone(item.phone);\r\n            setEmail(item.email);\r\n        })\r\n    };\r\n\r\n    const handleAddNew = (e) => {\r\n        setAddNew(!addnew)\r\n    };\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchTraineeInviteAction(data.content, data.type, data.courseId, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/requests'), 300)\r\n            }\r\n            toast.success('Request Sent Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Invite Trainee To {title} </h2>\r\n\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    <p className='some_info alert alert-info'>Select and existing Trainee from the select field or fill\r\n                        the name, email and phone no to invite non existing user. Trainee Will Receive An OTP. After\r\n                        Validating the OTP they will join this course.</p>\r\n\r\n                    <button onClick={handleAddNew} className='btn btn-success mb-3 pull-right'>{ !addnew  ? ('Add New') : 'Send To Existing' }</button>\r\n                    {\r\n                        addnew  ? (\r\n                            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[name]\" className=\"form-label\">Name</label>\r\n                                        <input type=\"text\" className='form-control' name=\"content[name]\"\r\n                                               ref={register({required: true})} placeholder='Name'/>\r\n                                        {errors.content && (<p className='error'>Name is required*</p>)}\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[phone]\" className=\"form-label\">Phone</label>\r\n                                        <input type=\"text\" name=\"content[phone]\" className='form-control'\r\n                                               ref={register({required: true})} placeholder='Phone'/>\r\n                                        {errors.content && (<p className='error'>Phone is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[email]\" className=\"form-label\">Email</label>\r\n                                        <input type=\"text\" name=\"content[email]\" className='form-control'\r\n                                               ref={register({required: true})} placeholder='Email'/>\r\n                                        {errors.content && (<p className='error'>Email is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"cover\" className=\"form-label\">Message</label>\r\n                                        <textarea name=\"content[message]\" id=\"cover\" className='form-control'\r\n                                                  placeholder='Invitation message'\r\n                                                  ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Invitation message is required*</p>)}\r\n                                    </div>\r\n                                    <input type=\"hidden\" name='type' defaultValue='trainee_invite'\r\n                                           ref={register({required: true})}/>\r\n\r\n                                    <input type=\"hidden\" name='courseId' defaultValue={courseId}\r\n                                           ref={register({required: true})}/>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Create & Send Invitation</button>\r\n                            </form>\r\n                        ) : (\r\n                            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user\" className=\"form-label\">Select Trainee</label>\r\n                                        {\r\n                                            options.length > 0 ? (\r\n                                                <Select options={options} onChange={handleChange}/>) : ''\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[name]\" className=\"form-label\">Name</label>\r\n                                        <input type=\"text\" className='form-control' name=\"content[name]\"\r\n                                               defaultValue={name ? name : ''}\r\n                                               ref={register({required: true})} placeholder='Name'/>\r\n                                        {errors.content && (<p className='error'>Name is required*</p>)}\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[phone]\" className=\"form-label\">Phone</label>\r\n                                        <input type=\"text\" name=\"content[phone]\" className='form-control'\r\n                                               defaultValue={phone ? phone : ''}\r\n                                               ref={register({required: true})} placeholder='Phone'/>\r\n                                        {errors.content && (<p className='error'>Phone is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[email]\" className=\"form-label\">Email</label>\r\n                                        <input type=\"text\" name=\"content[email]\" className='form-control disabledTextInput'\r\n                                               defaultValue={email ? email : ''}\r\n                                               ref={register({required: true})} placeholder='Email'/>\r\n                                        {errors.content && (<p className='error'>Email is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"cover\" className=\"form-label\">Message</label>\r\n                                        <textarea name=\"content[message]\" id=\"cover\" className='form-control'\r\n                                                  placeholder='Invitation message'\r\n                                                  ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Invitation message is required*</p>)}\r\n                                    </div>\r\n                                    <input type=\"hidden\" name='type' defaultValue='trainee_invite'\r\n                                           ref={register({required: true})}/>\r\n\r\n                                    <input type=\"hidden\" name='courseId' defaultValue={courseId}\r\n                                           ref={register({required: true})}/>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Send Invitation</button>\r\n                            </form>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllTraineesAction: (onSuccess) => dispatch(fetchAllTrainees(onSuccess)),\r\n    dispatchGetCourseByIdAction: (courseId, onSuccess) =>\r\n        dispatch(getCourseById(courseId, onSuccess)),\r\n    dispatchTraineeInviteAction: (content, type, courseId, onSuccess, onError) =>\r\n        dispatch(traineeInvite({content, type, courseId}, onSuccess, onError)),\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTraineeInvitePage)\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport Select from 'react-select'\r\nimport {fetchAllTrainers} from \"../redux/actions/userAction\";\r\nimport {getOrgById, trainerInvite} from \"../redux/actions/orgAction\";\r\n\r\nconst CreateTrainerInvitePage = ({user, match, dispatchTrainerInviteAction, dispatchGetOrgByIdAction, dispatchFetchAllTrainersAction}) => {\r\n\r\n    const [orgname, setOrgName] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [addnew, setAddNew] = useState(false);\r\n    const [users, setUsers] = useState();\r\n    const {orgId} = match.params;\r\n\r\n    useEffect(() => {\r\n        if (orgId) {\r\n            dispatchGetOrgByIdAction(orgId, (response) => {\r\n                dispatchFetchAllTrainersAction((res) => {\r\n                    setUsers(res.data)\r\n                })\r\n                setOrgName(response.data.name);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    if (users && users.length > 0) {\r\n        const user_values = users.map(item => {\r\n            return {\r\n                label: item.name,\r\n                value: item.id\r\n            };\r\n        })\r\n        if (!options.length > 0) {\r\n            console.log(user_values)\r\n            setOptions(user_values);\r\n        }\r\n    }\r\n\r\n    const handleChange = (user) => {\r\n        if (user) {\r\n            users.filter(e => (e.id === user.value)).map((item) => {\r\n                setName(item.name);\r\n                setPhone(item.phone);\r\n                setEmail(item.email);\r\n            })\r\n        } else {\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n        }\r\n    };\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchTrainerInviteAction(data.content, data.type, data.orgId, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/requests'), 300)\r\n            }\r\n            toast.success('Request Sent Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    const handleAddNew = (e) => {\r\n        setAddNew(!addnew)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Invite Trainer To {orgname} </h2>\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    <p className='some_info alert alert-info'>Select and existing Trainer from the select field or fill\r\n                        the name, email and phone no to invite non existing user. Trainer Will Receive An OTP. After\r\n                        Validating the OTP they will join this organization.</p>\r\n\r\n                    <button onClick={handleAddNew}\r\n                            className='btn btn-success mb-3 pull-right'>{!addnew ? ('Add New') : 'Send To Existing'}</button>\r\n                    {\r\n                        addnew ? (\r\n                            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[name]\" className=\"form-label\">Name</label>\r\n                                        <input type=\"text\" className='form-control' name=\"content[name]\"\r\n                                               defaultValue={name ? name : ''}\r\n                                               ref={register({required: true})} placeholder='Name'/>\r\n                                        {errors.content && (<p className='error'>Name is required*</p>)}\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[phone]\" className=\"form-label\">Phone</label>\r\n                                        <input type=\"text\" name=\"content[phone]\" className='form-control'\r\n                                               defaultValue={phone ? phone : ''}\r\n                                               ref={register({required: true})} placeholder='Phone'/>\r\n                                        {errors.content && (<p className='error'>Phone is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[email]\" className=\"form-label\">Email</label>\r\n                                        <input type=\"text\" name=\"content[email]\" className='form-control'\r\n                                               defaultValue={email ? email : ''}\r\n                                               ref={register({required: true})} placeholder='Email'/>\r\n                                        {errors.content && (<p className='error'>Email is required*</p>)}\r\n                                        <input type=\"hidden\" name='content[entity_name]' value={name}\r\n                                               ref={register({required: true})}/>\r\n                                        <input type=\"hidden\" name='content[user_name]' value={user.name}\r\n                                               ref={register({required: true})}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"cover\" className=\"form-label\">Message</label>\r\n                                        <textarea name=\"content[message]\" id=\"cover\" className='form-control'\r\n                                                  placeholder='Invitation message'\r\n                                                  ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Invitation message is required*</p>)}\r\n                                    </div>\r\n                                    <input type=\"hidden\" name='type' defaultValue='trainee_invite'\r\n                                           ref={register({required: true})}/>\r\n\r\n                                    <input type=\"hidden\" name='orgId' defaultValue={orgId}\r\n                                           ref={register({required: true})}/>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Create & Send Invitation</button>\r\n                            </form>\r\n                        ) : (\r\n                            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user\" className=\"form-label\">Select Trainer</label>\r\n                                        {\r\n                                            options.length > 0 ? (\r\n                                                <Select options={options} onChange={handleChange}/>) : ''\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[name]\" className=\"form-label\">Name</label>\r\n                                        <input type=\"text\" className='form-control' name=\"content[name]\"\r\n                                               defaultValue={name ? name : ''}\r\n                                               ref={register({required: true})} placeholder='Name'/>\r\n                                        {errors.content && (<p className='error'>Name is required*</p>)}\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[phone]\" className=\"form-label\">Phone</label>\r\n                                        <input type=\"text\" name=\"content[phone]\" className='form-control'\r\n                                               defaultValue={phone ? phone : ''}\r\n                                               ref={register({required: true})} placeholder='Phone'/>\r\n                                        {errors.content && (<p className='error'>Phone is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"content[email]\" className=\"form-label\">Email</label>\r\n                                        <input type=\"text\" name=\"content[email]\"\r\n                                               className='form-control disabledTextInput'\r\n                                               defaultValue={email ? email : ''}\r\n                                               ref={register({required: true})} placeholder='Email'/>\r\n                                        {errors.content && (<p className='error'>Email is required*</p>)}\r\n                                        <input type=\"hidden\" name='content[entity_name]' value={name}\r\n                                               ref={register({required: true})}/>\r\n                                        <input type=\"hidden\" name='content[user_name]' value={user.name}\r\n                                               ref={register({required: true})}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"cover\" className=\"form-label\">Message</label>\r\n                                        <textarea name=\"content[message]\" id=\"cover\" className='form-control'\r\n                                                  placeholder='Invitation message'\r\n                                                  ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Invitation message is required*</p>)}\r\n                                    </div>\r\n                                    <input type=\"hidden\" name='type' defaultValue='trainer_invite'\r\n                                           ref={register({required: true})}/>\r\n\r\n                                    <input type=\"hidden\" name='orgId' defaultValue={orgId}\r\n                                           ref={register({required: true})}/>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Send Invitation</button>\r\n                            </form>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllTrainersAction: (onSuccess) => dispatch(fetchAllTrainers(onSuccess)),\r\n    dispatchGetOrgByIdAction: (orgId, onSuccess) =>\r\n        dispatch(getOrgById(orgId, onSuccess)),\r\n    dispatchTrainerInviteAction: (content, type, orgId, onSuccess, onError) =>\r\n        dispatch(trainerInvite({content, type, orgId}, onSuccess, onError)),\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    loading: state.loading,\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTrainerInvitePage)\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport Select from 'react-select'\r\nimport {fetchAllOrgAdmins} from \"../redux/actions/userAction\";\r\nimport {createOrg } from \"../redux/actions/orgAction\";\r\n\r\nconst CreateOrgPage = ({ dispatchCreateOrgAction, dispatchFetchAllOrgAdminsAction}) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [addnew, setAddNew] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [users, setUsers] = useState();\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    useEffect(() => {\r\n        if (!options.length > 0) {\r\n            dispatchFetchAllOrgAdminsAction((res) => {\r\n                setUsers(res.data)\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    if (users && users.length > 0) {\r\n        const user_values = users.map(item => {\r\n            return {\r\n                label: item.name,\r\n                value: item.id\r\n            };\r\n        })\r\n        if (!options.length > 0) {\r\n            console.log(user_values)\r\n            setOptions(user_values);\r\n        }\r\n    }\r\n\r\n    const handleChange = (user) => {\r\n        if (user) {\r\n            users.filter(e => (e.id === user.value)).map((item) => {\r\n                setName(item.name);\r\n                setPhone(item.phone);\r\n                setEmail(item.email);\r\n            })\r\n        } else {\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n        }\r\n    };\r\n\r\n    const handleAddNew = (e) => {\r\n        setAddNew(!addnew)\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        dispatchCreateOrgAction(data.name, data.logo, data.shortDesc, data.description, data.user, data.address, key_people, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/orgs'), 300)\r\n            }\r\n            toast.success('Organization Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n\r\n    const [key_people, setKeyPeople] = useState([{\r\n        name: null,\r\n        designation: null\r\n    }]);\r\n\r\n    function handleAdd() {\r\n        const values = [...key_people];\r\n        values.push({\r\n            name: null,\r\n            designation: null\r\n        });\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...key_people];\r\n        values.splice(i, 1);\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    function handleChangeKPName(i, event) {\r\n        const values = [...key_people];\r\n        values[i].name = event.target.value;\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    function handleChangeKPDesignation(i, event) {\r\n        const values = [...key_people];\r\n        values[i].designation = event.target.value;\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Create Organization</h2>\r\n\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    {/*<p className='some_info alert alert-info'>Select and existing Trainer from the select field or fill*/}\r\n                    {/*    the name, email and phone no to invite non existing user. Trainer Will Receive An OTP. After*/}\r\n                    {/*    Validating the OTP they will join this organization.</p>*/}\r\n\r\n                    <button onClick={handleAddNew}\r\n                            className='btn btn-success mb-3 pull-right'>{!addnew ? ('Add With New Org Admin') : 'Send Request To Existing Org Admin'}</button>\r\n\r\n                    {\r\n                        addnew ? (\r\n                            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}\r\n                                  encType='multipart/form-data'>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                                    <input type=\"text\" className='form-control' name=\"name\"\r\n                                           placeholder='Organization name'\r\n                                           ref={register({required: true})}/>\r\n                                    {errors.name && (<p className='error'>Name is required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"logo\" className=\"form-label\">Logo</label>\r\n                                    <input className=\"form-control\" type=\"file\" id=\"logo\" name='logo' ref={register}/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"shortDesc\" className=\"form-label\">Short Description</label>\r\n                                    <textarea name=\"shortDesc\" id=\"shortDesc\" className='form-control'\r\n                                              placeholder='Short Description'\r\n                                              ref={register({required: true})}/>\r\n                                    {errors.shortDesc && (<p className='error'>Short Desc is required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                                    <textarea name=\"description\" id=\"description\" className='form-control'\r\n                                              placeholder='Description'\r\n                                              ref={register({required: true})}/>\r\n                                    {errors.description && (<p className='error'>Description is required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                                    <textarea name=\"address\" id=\"address\" className='form-control'\r\n                                              placeholder='Organization Address'\r\n                                              ref={register({required: true})}/>\r\n                                    {errors.address && (<p className='error'>Address is required*</p>)}\r\n                                </div>\r\n\r\n                                {\r\n                                    key_people.map((field, idx) => {\r\n                                            return (\r\n                                                <div  key={`${field}-${idx}`} className='single_field_wrap'>\r\n\r\n                                                    <div className=\"form-group question_heading text-center\">\r\n                                                        <strong>\r\n                                                            <h6>Key Person #{idx + 1}</h6>\r\n                                                        </strong>\r\n                                                    </div>\r\n                                                    {\r\n                                                        idx !== 0 ? (<div className=\"text-right\">\r\n                                                            <button type=\"button\" onClick={() => handleRemove(idx)}\r\n                                                                    className='btn btn-danger'>\r\n                                                                <i className=\"fas fa-times\"/>\r\n                                                            </button>\r\n                                                        </div>) : ''\r\n                                                    }\r\n                                                    <div className=\"mb-3\">\r\n                                                        <label className=\"form-label\">Key Person's Name</label>\r\n                                                        <input type=\"text\" className='form-control' value={field.name || \"\"}\r\n                                                               onChange={e => handleChangeKPName(idx, e)} placeholder='Key Person Name'/>\r\n                                                    </div>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <label className=\"form-label\">Key Person's Designation</label>\r\n                                                        <input type=\"text\" className='form-control' value={field.designation || \"\"}\r\n                                                               onChange={e => handleChangeKPDesignation(idx, e)} placeholder='Key Person Designation'/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n\r\n                                <div className=\"mt-2 mb-5 text-right\">\r\n                                    <button type=\"button\" onClick={() => handleAdd()} className='btn btn-primary'>\r\n                                        <i className=\"fas fa-plus\"/> Add Another Key Person\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"org_admin_wrapper p-3\">\r\n                                    <strong className='m-2'>Add Organization Admin</strong>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user[name]\" className=\"form-label\">Name</label>\r\n                                        <input type=\"text\" className='form-control' name=\"user[name]\"\r\n                                               defaultValue={name ? name : ''}\r\n                                               ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Name is required*</p>)}\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user[phone]\" className=\"form-label\">Phone</label>\r\n                                        <input type=\"text\" name=\"user[phone]\" className='form-control'\r\n                                               defaultValue={phone ? phone : ''}\r\n                                               ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Phone is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user[email]\" className=\"form-label\">Email</label>\r\n                                        <input type=\"text\" name=\"user[email]\" className='form-control'\r\n                                               defaultValue={email ? email : ''}\r\n                                               ref={register({required: true})}/>\r\n                                        {errors.user && (<p className='error'>Email is required*</p>)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                            </form>\r\n                        ) : (\r\n                            <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}\r\n                                  encType='multipart/form-data'>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                                    <input type=\"text\" className='form-control' name=\"name\"\r\n                                           placeholder='Organization name'\r\n                                           ref={register({required: true})}/>\r\n                                    {errors.name && (<p className='error'>Name is required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"logo\" className=\"form-label\">Logo</label>\r\n                                    <input className=\"form-control\" type=\"file\" id=\"logo\" name='logo' ref={register}/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"shortDesc\" className=\"form-label\">Short Description</label>\r\n                                    <textarea name=\"shortDesc\" id=\"shortDesc\" className='form-control'\r\n                                              placeholder='Short Description'\r\n                                              ref={register({required: true})}/>\r\n                                    {errors.shortDesc && (<p className='error'>Short Desc is required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                                    <textarea name=\"description\" id=\"description\" className='form-control'\r\n                                              placeholder='Description'\r\n                                              ref={register({required: true})}/>\r\n                                    {errors.description && (<p className='error'>Description is required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                                    <textarea name=\"address\" id=\"address\" className='form-control'\r\n                                              placeholder='Organization Address'\r\n                                              ref={register({required: true})}/>\r\n                                    {errors.address && (<p className='error'>Address is required*</p>)}\r\n                                </div>\r\n                                {\r\n                                    key_people.map((field, idx) => {\r\n                                            return (\r\n                                                <div  key={`${field}-${idx}`} className='single_field_wrap'>\r\n\r\n                                                    <div className=\"form-group question_heading text-center\">\r\n                                                        <strong>\r\n                                                            <h6>Key Person #{idx + 1}</h6>\r\n                                                        </strong>\r\n                                                    </div>\r\n                                                    {\r\n                                                        idx !== 0 ? (<div className=\"text-right\">\r\n                                                            <button type=\"button\" onClick={() => handleRemove(idx)}\r\n                                                                    className='btn btn-danger'>\r\n                                                                <i className=\"fas fa-times\"/>\r\n                                                            </button>\r\n                                                        </div>) : ''\r\n                                                    }\r\n                                                    <div className=\"mb-3\">\r\n                                                        <label className=\"form-label\">Key Person's Name</label>\r\n                                                        <input type=\"text\" className='form-control' value={field.name || \"\"}\r\n                                                               onChange={e => handleChangeKPName(idx, e)} placeholder='Key Person Name'/>\r\n                                                    </div>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <label className=\"form-label\">Key Person's Designation</label>\r\n                                                        <input type=\"text\" className='form-control' value={field.designation || \"\"}\r\n                                                               onChange={e => handleChangeKPDesignation(idx, e)} placeholder='Key Person Designation'/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                                <div className=\"mt-2 mb-5 text-right\">\r\n                                    <button type=\"button\" onClick={() => handleAdd()} className='btn btn-primary'>\r\n                                        <i className=\"fas fa-plus\"/> Add Another Key Person\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"user\" className=\"form-label\">Select Admin</label>\r\n                                    {\r\n                                        options.length > 0 ? (\r\n                                            <Select options={options} onChange={handleChange}/>) : ''\r\n                                    }\r\n                                </div>\r\n                                <div className=\"org_admin_wrapper p-3\">\r\n                                    <strong className='m-2'>Add Organization Admin</strong>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user[name]\" className=\"form-label\">Name</label>\r\n                                        <input type=\"text\" className='form-control' name=\"user[name]\"\r\n                                               defaultValue={name ? name : ''}\r\n                                               ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Name is required*</p>)}\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user[phone]\" className=\"form-label\">Phone</label>\r\n                                        <input type=\"text\" name=\"user[phone]\" className='form-control'\r\n                                               defaultValue={phone ? phone : ''}\r\n                                               ref={register({required: true})}/>\r\n                                        {errors.content && (<p className='error'>Phone is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"user[email]\" className=\"form-label\">Email</label>\r\n                                        <input type=\"text\" name=\"user[email]\" className='form-control'\r\n                                               defaultValue={email ? email : ''}\r\n                                               ref={register({required: true})}/>\r\n                                        {errors.user && (<p className='error'>Email is required*</p>)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                            </form>\r\n                        )\r\n\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllOrgAdminsAction: (onSuccess) => dispatch(fetchAllOrgAdmins(onSuccess)),\r\n    dispatchCreateOrgAction: (name, logo, shortDesc, description, user, address,key_people, onSuccess, onError) =>\r\n        dispatch(createOrg({name, logo, shortDesc, description, user, address, key_people }, onSuccess, onError)),\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrgPage)\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {connect} from \"react-redux\";\r\nimport {createCourse} from \"../../redux/actions/courseAction\";\r\nimport {getOrgById} from \"../../redux/actions/orgAction\";\r\n\r\nfunction CreateCoursePage({props, dispatchCreateCourseAction, match, dispatchGetOrgByIdAction}) {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [description, setDescription] = useState('');\r\n    const [objective, setObjective] = useState('');\r\n    const {orgId} = match.params;\r\n    const [name, setName] = useState('');\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchCreateCourseAction(orgId, data.title, data.banner, data.shortDesc, description, objective, data.passing_mark, data.published, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/course_builder/edit/'+response.data.id), 300)\r\n            }\r\n            toast.success('Course Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (orgId) {\r\n            dispatchGetOrgByIdAction(orgId, (response) => {\r\n                console.log(response)\r\n                if (!name){\r\n                    setName(response.data.name);\r\n                }\r\n            });\r\n        }\r\n    }, [dispatchGetOrgByIdAction, match.params]);\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Course Builder For The Organization {name ? name : ''}</h2>\r\n            <div className=\"multi_step_wrapper\">\r\n\r\n                <div className='main_content'>\r\n                    <div className=\"request_form\">\r\n                        <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}\r\n                              encType='multipart/form-data'>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">Course Title</label>\r\n                                <input type=\"text\" className=\"form-control\" name='title' id=\"title\" placeholder=\"Enter Course Title\"\r\n                                       ref={register({required: true})}/>\r\n                                {errors.title && (<p className='error'>Title is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"banner\">Course Banner</label>\r\n                                <input type=\"file\" className=\"form-control\" id=\"banner\" name='banner'\r\n                                       ref={register({required: true})}/>\r\n                                {errors.banner && (<p className='error'>Banner is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"shortDesc\">Short Description</label>\r\n                                <textarea className=\"form-control\" id=\"shortDesc\" name='shortDesc' rows=\"3\"\r\n                                          ref={register({required: true})}/>\r\n                                {errors.shortDesc && (<p className='error'>Short Description is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"description\">Course Description</label>\r\n                                <ReactQuill theme=\"snow\" name='description' onChange={setDescription}/>\r\n                                {!description ? 'Please Enter Some Description' : ''}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"objective\">Course Objective</label>\r\n                                <ReactQuill theme=\"snow\" name='objective' ref={register({required: true})} onChange={setObjective}/>\r\n                                {!objective ? 'Please Enter Some Objective' : ''}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"passing_mark\">Passing Mark</label>\r\n                                <input type=\"number\" className=\"form-control\" id=\"passing_mark\" name='passing_mark'\r\n                                       ref={register({required: true})}/>\r\n                                {errors.passing_mark && (<p className='error'>Passing Mark is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"published\">Status</label>\r\n                                <select className=\"form-control \" name='published' ref={register({required: true})}>\r\n                                    <option value='1'>Published</option>\r\n                                    <option value='0'>Draft</option>\r\n                                </select>\r\n                                {errors.published && (<p className='error'>Status is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type='submit' className='btn btn-primary'>Create</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchCreateCourseAction: (orgId, title, banner, shortDesc, description, objective, passing_mark, published, onSuccess, onError) => dispatch(createCourse({orgId, title, banner, shortDesc, description, objective, passing_mark, published\r\n    }, onSuccess, onError)),\r\n    dispatchGetOrgByIdAction: (orgId, onSuccess) =>\r\n        dispatch(getOrgById(orgId, onSuccess)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateCoursePage)","import * as constants from '../constants'\r\n\r\nexport const createCategory = (data, onSuccess, onError) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'categories',\r\n            data,\r\n            success: (category) => (addCategory(category.data)),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nconst addCategory = (category) => (\r\n    {\r\n        type: constants.ADD_CATEGORY,\r\n        payload: category\r\n    }\r\n);\r\n\r\nexport const fetchAllCategories = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: 'categories',\r\n        data,\r\n        success: (response) => (setAllCategories(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nconst setAllCategories = (data) => {\r\n    return {\r\n        type: constants.SET_ALL_CATEGORIES,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const getCategoryById = (categoryId, onSuccess) => (\r\n    {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'GET',\r\n            url: `categoris/${categoryId}`,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    });\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getCourseById, traineeRequest} from \"../redux/actions/courseAction\";\r\nimport Select from \"react-select\";\r\nimport {fetchAllUsers} from \"../redux/actions/userAction\";\r\nimport {createCategory, fetchAllCategories} from \"../redux/actions/categoryAction\";\r\nimport {createOrg} from \"../redux/actions/orgAction\";\r\n\r\nconst CreateCategoryPage = ({loading, categories, dispatchFetchAllCategoriesAction, dispatchCreateCategoryAction}) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [parent, setParent] = useState('');\r\n\r\n    if (categories.length > 0) {\r\n        const cat_values = categories.map(item => {\r\n            return {\r\n                label: item.name,\r\n                value: item.id\r\n            };\r\n        })\r\n        if (!options.length > 0) {\r\n            setOptions(cat_values);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatchFetchAllCategoriesAction()\r\n    }, []);\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchCreateCategoryAction(data.name, data.description, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/categories'), 300)\r\n            }\r\n            toast.success('Category Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    // const handleChange = (parent) => {\r\n    //     if (parent){\r\n    //         setParent(parent.value)\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Create Category </h2>\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                        {/*<div className=\"mb-3\">*/}\r\n                        {/*    <label htmlFor=\"parentId\" className=\"form-label\">Select Parent Category</label>*/}\r\n                        {/*    {*/}\r\n                        {/*        options.length > 0 ? (*/}\r\n                        {/*            <Select options={options} onChange={handleChange} />) : ''*/}\r\n                        {/*    }*/}\r\n                        {/*</div>*/}\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"name\">Category name</label>\r\n                            <input type=\"text\" className=\"form-control\" name='name' id=\"name\" placeholder=\"Enter Category name\"\r\n                                   ref={register({required: true})}/>\r\n                            {errors.name && (<p className='error'>Category name is required*</p>)}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"description\">Short Description</label>\r\n                            <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"3\" ref={register({required: true})} className='form-control'/>\r\n                            {errors.description && (<p className='error'>Description is required*</p>)}\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Create Category</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllCategoriesAction: () => dispatch(fetchAllCategories()),\r\n    dispatchCreateCategoryAction: (name, description, onSuccess, onError) =>\r\n        dispatch(createCategory({name, description}, onSuccess, onError)),\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.categories,\r\n    loading: state.loading\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCategoryPage)\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Select from \"react-select\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchAllCategories} from \"../../../redux/actions/categoryAction\";\r\nimport {categoryAssociate} from \"../../../redux/actions/courseAction\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nfunction AssignCategory({course, categories, dispatchFetchAllCategoriesAction, dispatchCategoryAssociate}) {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [cat, setCat] = useState([]);\r\n\r\n    if (categories.length > 0) {\r\n        const cat_values = categories.filter(function (item) {\r\n            return item.parentId === null;\r\n        }).map(item => {\r\n            return {\r\n                label: item.name,\r\n                value: item.id\r\n            };\r\n        })\r\n        if (!options.length > 0) {\r\n            setOptions(cat_values);\r\n        }\r\n    }\r\n    const handleChange = (cat) => {\r\n        if (cat) {\r\n            setCat(cat.value)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatchFetchAllCategoriesAction( (response) => {\r\n            console.log('Categories Loaded')\r\n        }, (message) => toast.error(message))\r\n    }, [dispatchFetchAllCategoriesAction]);\r\n\r\n    const onSubmit = (e, category) => {\r\n        const data = {\r\n            'entityType': 'Course',\r\n            'entityId': parseInt(course.id),\r\n            'categoryId': cat\r\n        }\r\n        e.preventDefault()\r\n        dispatchCategoryAssociate(data, () => {\r\n            toast.success('Category Associated To Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    return  (\r\n        <>\r\n            <h2 className='form_heading'>\r\n                Assign Category To {course.title}\r\n            </h2>\r\n            <form noValidate className=\"p-4\"\r\n                  encType='multipart/form-data' onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"parentId\" className=\"form-label\">Select Category</label>\r\n                    {\r\n                        options.length > 0 ? (\r\n                                <Select options={options} onChange={handleChange}\r\n                                        defaultValue={course.Categories.length ? {\r\n                                            label: course.Categories[0].name,\r\n                                            value: course.Categories[0].id\r\n                                        } : null}/>) : ''\r\n                    }\r\n                </div>\r\n                <input\r\n                    type=\"hidden\"\r\n                    value={course.id} name='entityId'\r\n                />\r\n                <input\r\n                    type=\"hidden\"\r\n                    value={'Course'} name='entityType'\r\n                />\r\n                <div className=\"form-group\">\r\n                    <button type='submit' className='btn btn-primary'>Assign</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    categories: state.categories\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllCategoriesAction: (onSuccess, onError) => dispatch(fetchAllCategories(onSuccess, onError)),\r\n    dispatchCategoryAssociate: (category, onSuccess, onError) => dispatch(categoryAssociate({\r\n        category\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignCategory)","import * as constants from '../constants'\r\n\r\nexport const getChapterById = (chapterId, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: `chapters/${chapterId}`,\r\n        success: (response) => (setSingleChapter(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n});\r\n\r\nexport const fetchAllChapters = (data, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'GET',\r\n        url: 'chapters',\r\n        data,\r\n        success: (response) => (setAllChapters(response.data)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n})\r\n\r\nconst setSingleChapter = (data) => {\r\n    return {\r\n        type: constants.SET_SINGLE_CHAPTER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst setAllChapters = (data) => {\r\n    return {\r\n        type: constants.SET_ALL_CHAPTERS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const updateChapter = (chapterId, data, onSuccess, onError) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'PUT',\r\n            url: `chapters/${chapterId}`,\r\n            data,\r\n            success: (response) => (updateChapterSet(chapterId, response.data)),\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateExam = (examId, data, onSuccess, onError) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'PUT',\r\n            url: `exams/${examId}`,\r\n            data,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nconst updateChapterSet = (chapterId, data) => (\r\n    {\r\n        type: constants.UPDATE_CHAPTER,\r\n        payload: {chapterId, data}\r\n    }\r\n);\r\n\r\nexport const deleteChapterById = (chapterId, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'DELETE',\r\n        url: `chapters/${chapterId}`,\r\n        success: () => (removeChapter(chapterId)),\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n});\r\n\r\nconst removeChapter = (chapterId) => ({\r\n    type: constants.REMOVE_CHAPTER,\r\n    payload: chapterId\r\n});\r\n\r\nexport const deleteFileById = (fileId, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'DELETE',\r\n        url: `files/${fileId}`,\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n});\r\n\r\nexport const deleteExamById = (examId, onSuccess, onError) => ({\r\n    type: constants.API,\r\n    payload: {\r\n        method: 'DELETE',\r\n        url: `exams/${examId}`,\r\n        postProcessSuccess: onSuccess,\r\n        postProcessError: onError\r\n    }\r\n});\r\n\r\nexport const chapterCreate = (data, onSuccess, onError) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: 'chapters/create',\r\n            data,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nexport const chapterFileCreate = (data, onSuccess, onError) => {\r\n    let formData = new FormData();\r\n\r\n    if (data.file) {\r\n        data.file = data.file[0]\r\n    }\r\n\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `chapters/${data.chapter}/upload`,\r\n            data: formData,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nexport const chapterExamCreate = (data, onSuccess, onError) => {\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `exams`,\r\n            data,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};\r\n\r\nexport const chapterFileUpdate = (filesId, data, onSuccess, onError) => {\r\n    let formData = new FormData();\r\n\r\n    if (data.file) {\r\n        data.file = data.file[0]\r\n    }\r\n\r\n    Object.keys(data).map(key => {\r\n        formData.append(key, data[key]);\r\n    });\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'PUT',\r\n            url: `files/${filesId}`,\r\n            data: formData,\r\n            postProcessSuccess: onSuccess,\r\n            postProcessError: onError\r\n        }\r\n    }\r\n};","import {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {updateChapter} from \"../redux/actions/chapterAction\";\r\n\r\nfunction EditModal({selectedChapter, dispatchEditChapterAction, course}) {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = ( data) => {\r\n\r\n        dispatchEditChapterAction(selectedChapter.id, data.title, data.instructions, data.course_weight, course.id, (res) => {\r\n            // console.log(res)\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/2'), 300)\r\n            window.$('#editModal').modal('hide');\r\n            toast.success('Chapters Updated Successfully!');\r\n        },(message) => {\r\n            window.$('#editModal').modal('hide');\r\n            toast.error(`Error: ${message}`);\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        document.getElementById(\"editform\").reset();\r\n    }\r\n\r\n    return   (\r\n        <>\r\n            <div className=\"modal\" id=\"editModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                <div role=\"document\" className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={cancelEdit}><i className=\"fas fa-times\"/></button>\r\n                        </div>\r\n                        <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}\r\n                              encType='multipart/form-data' id='editform'>\r\n                            <div className='single_field_wrap'>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Title</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Title\" className='form-control' name='title'\r\n                                        defaultValue={selectedChapter.title} ref={register({required: true})}\r\n                                    />\r\n                                    {errors.title && (<p className='error'>Title is required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Instructions</label>\r\n                                    <textarea cols=\"30\" rows=\"10\" name='instructions' className=\"form-control\" ref={register({required: true})}  defaultValue={selectedChapter.instructions} placeholder='Enter Instruction'/>\r\n                                    {errors.instructions && (<p className='error'>Instructions are required*</p>)}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Course Weight</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"2\" className='form-control' name='course_weight'\r\n                                        defaultValue={selectedChapter.course_weight} ref={register({required: true})}\r\n                                    />\r\n                                    {errors.course_weight && (<p className='error'>Course Weight is required*</p>)}\r\n                                    <small>\r\n                                        Course Weight Will Be Use to calculate the percentage of course completion from\r\n                                        this chapter. Put value from 1 - 10\r\n                                    </small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type='submit' className='btn btn-primary'>Update</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchEditChapterAction: (chapterId, title, instructions, course_weight, course_id, onSuccess, onError) => dispatch(updateChapter(chapterId, {\r\n        title, instructions, course_weight, course_id }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal)","import React, {useState} from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {chapterCreate} from \"../../../redux/actions/chapterAction\";\r\nimport NotFound from \"../../../components/notfound.component\";\r\nimport {Link} from \"react-router-dom\";\r\nimport EditModal from \"../../../components/editchapter.component\";\r\nimport {deleteChapterById} from \"../../../redux/actions/chapterAction\";\r\n\r\nfunction CreateChapter({course, dispatchCreateChapterAction,  dispatchDeleteChapterAction}) {\r\n\r\n    const [chapters, setFields] = useState([{\r\n        title: null,\r\n        instructions: null,\r\n        course_weight: null,\r\n        courseId: course.id\r\n    }]);\r\n\r\n    let [selectedChapter, setSelectedChapter] = useState();\r\n\r\n    let [selectedChapterId, setSelectedChapterId] = useState();\r\n\r\n    function handleChangeTitle(i, event) {\r\n        const values = [...chapters];\r\n        values[i].title = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeInstructions(i, event) {\r\n        const values = [...chapters];\r\n        values[i].instructions = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeCourseWeight(i, event) {\r\n        const values = [...chapters];\r\n        values[i].course_weight = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    const onSubmit = (e, data) => {\r\n        e.preventDefault()\r\n        dispatchCreateChapterAction(chapters, () => {\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/2'), 300)\r\n            toast.success('Chapters Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n\r\n        return false;\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        dispatchDeleteChapterAction(selectedChapterId, () => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/2'), 300)\r\n            toast.success('Chapter deleted Successfully!');\r\n        }, (message) => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            toast.error(`Error: ${message}`);\r\n        });\r\n    };\r\n\r\n    const showConfirmationModal = (event, chapterId) => {\r\n        event.preventDefault();\r\n        setSelectedChapterId(chapterId);\r\n        window.$('#confirmationModal').modal('show');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2 className='form_heading'>\r\n                Create Chapters For {course.title}\r\n            </h2>\r\n            <form noValidate className=\"p-4\" onSubmit={onSubmit}\r\n                  encType='multipart/form-data'>\r\n                {chapters.map((field, idx) => {\r\n                    return (\r\n                        <div key={`${field}-${idx}`} className='single_field_wrap'>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Title\" className='form-control'\r\n                                    value={field.title || \"\"}\r\n                                    onChange={e => handleChangeTitle(idx, e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Instruction</label>\r\n                                <textarea cols=\"30\" rows=\"10\" className=\"form-control\" value={field.instructions || \"\"} placeholder='Enter Instruction' onChange={e => handleChangeInstructions(idx, e)}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Course Weight</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    placeholder=\"2\" className='form-control'\r\n                                    value={field.course_weight || \"\"}\r\n                                    onChange={e => handleChangeCourseWeight(idx, e)}\r\n                                />\r\n                                <small>\r\n                                    Course Weight Will Be Use to calculate the percentage of course completion from this\r\n                                    chapter. Put value from 1 - 10\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n                <div className=\"form-group\">\r\n                    <button type='submit' className='btn btn-primary'>Create</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n            <h2 className='form_heading'>\r\n                {course.title}'s Chapters\r\n            </h2>\r\n\r\n            {\r\n                course.Chapters.length ? (\r\n                        <>\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Chapter Title</th>\r\n                                    <th>Chapter Materials</th>\r\n                                    <th>Chapter Exams</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    course.Chapters.map(function (item) {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td>{item.title}</td>\r\n                                                <td>\r\n                                                    {\r\n                                                        item.Files.length ? item.Files.map(function (file) {\r\n                                                            return (\r\n                                                                <div className=\"badge badge-info m-1\">{file.title}</div>\r\n                                                            )\r\n                                                        }) : \"No File\"\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {\r\n                                                        item.Exams.length ? item.Exams.map(function (exam) {\r\n                                                            return (\r\n                                                                <div className=\"badge badge-info\">{exam.title}</div>\r\n                                                            )\r\n                                                        }) : \"No Exam\"\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"d-flex\">\r\n                                                        <Link to={`#`}\r\n                                                              className='btn btn-danger tbl_btn '\r\n                                                              onClick={(e) => showConfirmationModal(e, item.id)}>Delete</Link>\r\n\r\n                                                        <Link to={`#`} target='_blank' className='btn btn-primary tbl_btn ml-2 mr-2'\r\n                                                              onClick={async function(e) {e.preventDefault(); await setSelectedChapter(item) ;   window.$('#editModal').modal({backdrop: 'static', keyboard: false, show: true})}}>Edit</Link>\r\n                                                        <Link to={`/chapters/${course.id}/${item.id}`} target='_blank'\r\n                                                              className='btn btn-dark tbl_btn'>Preview</Link>\r\n                                                    </div>\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </>\r\n                    )\r\n                    : (<NotFound/>)\r\n            }\r\n            {selectedChapter ? (<EditModal selectedChapter={selectedChapter} course={course}/>) : ''}\r\n            <Modal handleOnDelete={handleOnDelete} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.categories,\r\n    loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchCreateChapterAction: (chapters, onSuccess, onError) => dispatch(chapterCreate({\r\n        chapters\r\n    }, onSuccess, onError)),\r\n    dispatchDeleteChapterAction: (chapterId, onSuccess, onError) =>\r\n        dispatch(deleteChapterById(chapterId, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateChapter)\r\n\r\nconst Modal = ({handleOnDelete}) => (\r\n    <div className=\"modal\" id=\"confirmationModal\" tabIndex=\"-1\" role=\"dialog\">\r\n        <div role=\"document\" className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Confirmation</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Are you sure, you want to delete this Chapter ?</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" className=\"btn btn-secondary\">\r\n                        No\r\n                    </button>\r\n                    <button type=\"button\" data-dismiss=\"modal\" onClick={handleOnDelete} className=\"btn btn-primary\">\r\n                        Yes\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","import React from 'react'\r\nimport NotFound from \"../components/notfound.component\";\r\n\r\nconst NotFoundPage = ({props}) => {\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n\r\n            <div className='main_content'>\r\n                <div className='orgs_list my-5'>\r\n                    <NotFound/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFoundPage\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {chapterFileUpdate} from \"../redux/actions/chapterAction\";\r\n\r\nfunction EditFileModal({selectedFile, dispatchEditFileAction, course}) {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchEditFileAction(selectedFile.id, data.title, data.description, data.file, (res) => {\r\n            // console.log(res)\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/3'), 300)\r\n            window.$('#editFileModal').modal('hide');\r\n            toast.success('File Updated Successfully!');\r\n        }, (message) => {\r\n            window.$('#editFileModal').modal('hide');\r\n            toast.error(`Error: ${message}`);\r\n        })\r\n        return false;\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        document.getElementById(\"editfileform\").reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modal\" id=\"editFileModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                <div role=\"document\" className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={cancelEdit}>\r\n                                <i className=\"fas fa-times\"/></button>\r\n                        </div>\r\n                        <form noValidate className=\"p-4\"\r\n                              encType='multipart/form-data' onSubmit={handleSubmit(onSubmit)} id='editfileform'>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                                <input type=\"text\" className=\"form-control\" name='title' id=\"title\"\r\n                                       placeholder=\"Enter File Title\"\r\n                                       ref={register({required: true})} defaultValue={selectedFile.title}/>\r\n                                {errors.title && (<p className='error'>Title is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                                <textarea className=\"form-control\" name='description' id=\"description\"\r\n                                          placeholder=\"Enter Description\"\r\n                                          ref={register({required: true})} defaultValue={selectedFile.description}/>\r\n                                {errors.description && (<p className='error'>Description is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"file\" className=\"form-label\">File</label>\r\n                                <input type=\"file\" className=\"form-control\" name='file' id=\"file\"\r\n                                       ref={register}/>\r\n                                <strong>\r\n                                    Uploaded File Link: <a href={selectedFile.url} target='_blank' rel=\"noreferrer\">{selectedFile.url}</a>\r\n                                </strong>\r\n                                {errors.file && (<p className='error'>File is required*</p>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type='submit' className='btn btn-primary'>Update</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchEditFileAction: (fileId, title, description, file, onSuccess, onError) => dispatch(chapterFileUpdate(fileId, {\r\n        title, description, file\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditFileModal)","import React, {useEffect, useState} from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Select from \"react-select\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    chapterFileCreate\r\n} from \"../../../redux/actions/chapterAction\";\r\n\r\nimport {toast} from \"react-toastify\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {deleteFileById, fetchAllChapters} from \"../../../redux/actions/chapterAction\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFound from \"../../../components/notfound.component\";\r\nimport NotFoundPage from \"../../notfoundpage\";\r\nimport EditFileModal from \"../../../components/editfile.component\";\r\n\r\nfunction CreateFiles({course, dispatchFetchAllChaptersAction, dispatchCreateFileAction, dispatchDeleteFileAction}) {\r\n    const [options, setOptions] = useState([]);\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [chapter, setChapter] = useState([]);\r\n    let [selectedFile, setSelectedFile] = useState();\r\n    let [selectedFileId, setSelectedFileId] = useState();\r\n\r\n    const handleChange = (chapter) => {\r\n        if (chapter) {\r\n            setChapter(chapter.value)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatchFetchAllChaptersAction([], ({data}) => {\r\n            if (data && data.length > 0) {\r\n                const chapter_values = data.filter(function (item) {\r\n                    return (item.parentId === null && item.courseId === course.id);\r\n                }).map(item => {\r\n                    return {\r\n                        label: item.title,\r\n                        value: item.id\r\n                    };\r\n                })\r\n                if (!options.length > 0) {\r\n                    setOptions(chapter_values);\r\n                }\r\n            }\r\n        }, (message) => toast.error(message));\r\n    }, [dispatchFetchAllChaptersAction, course.id, options.length]);\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchCreateFileAction(chapter, data.title, data.description, data.file, () => {\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/3'), 300)\r\n            toast.success('Files Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        dispatchDeleteFileAction(selectedFileId, () => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/3'), 300)\r\n            toast.success('File deleted Successfully!');\r\n        }, (message) => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            toast.error(`Error: ${message}`);\r\n        });\r\n    };\r\n\r\n    const showConfirmationModal = (event, fileId) => {\r\n        event.preventDefault();\r\n        setSelectedFileId(fileId);\r\n        window.$('#confirmationFileModal').modal('show');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2 className='form_heading'>\r\n                Add Materials / Files For Individual Chapter\r\n            </h2>\r\n            <form noValidate className=\"p-4\"\r\n                  encType='multipart/form-data' onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"parentId\" className=\"form-label\">Select Chapter</label>\r\n                    {\r\n                        options.length > 0 ? (\r\n                            <Select options={options} onChange={handleChange} />) : ''\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                    <input type=\"text\" className=\"form-control\" name='title' id=\"title\" placeholder=\"Enter File Title\"\r\n                           ref={register({required: true})}/>\r\n                    {errors.title && (<p className='error'>Title is required*</p>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                    <textarea className=\"form-control\" name='description' id=\"description\"\r\n                              placeholder=\"Enter Description\"\r\n                              ref={register({required: true})}/>\r\n                    {errors.description && (<p className='error'>Description is required*</p>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"file\" className=\"form-label\">File</label>\r\n                    <input type=\"file\" className=\"form-control\" name='file' id=\"file\"\r\n                           ref={register({required: true})}/>\r\n                    {errors.file && (<p className='error'>File is required*</p>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type='submit' className='btn btn-primary'>Create</button>\r\n                </div>\r\n            </form>\r\n\r\n            <h2 className='form_heading'>\r\n                { course.title}'s Chapter's Materials\r\n            </h2>\r\n            {\r\n                course.Chapters.length ? (\r\n                        course.Chapters.map(function (chapter) {\r\n                            return (\r\n                                <>\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th className='text-center'>{chapter.title}</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                    </table>\r\n                                    {\r\n                                        chapter.Files.length ? (\r\n                                            <>\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                    <tr>\r\n                                                        <th>File Title</th>\r\n                                                        <th>File Url</th>\r\n                                                        <th>File Type</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        chapter.Files.map(function (file) {\r\n                                                            return (\r\n                                                                <tr>\r\n                                                                    <td>{file.title}</td>\r\n                                                                    <td><a href={file.url} target='_blank'>{file.url}</a>\r\n                                                                    </td>\r\n                                                                    <td>{file.type}</td>\r\n                                                                    <td>\r\n                                                                        <div className=\"d-flex\">\r\n                                                                            <Link to={`#`}\r\n                                                                                  className='btn btn-danger tbl_btn '\r\n                                                                                  onClick={(e) => showConfirmationModal(e, file.id)}>Delete</Link>\r\n                                                                            <Link to={`#`} target='_blank'\r\n                                                                                  className='btn btn-primary tbl_btn ml-2 mr-2'\r\n                                                                                  onClick={async function (e) {\r\n                                                                                      e.preventDefault();\r\n                                                                                      await setSelectedFile(file);\r\n                                                                                      window.$('#editFileModal').modal({\r\n                                                                                          backdrop: 'static',\r\n                                                                                          keyboard: false,\r\n                                                                                          show: true\r\n                                                                                      })\r\n                                                                                  }}>Edit</Link>\r\n                                                                            <Link\r\n                                                                                to={`/chapters/${course.id}/${chapter.id}`}\r\n                                                                                target='_blank'\r\n                                                                                className='btn btn-dark tbl_btn'>Preview</Link>\r\n                                                                        </div>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </>\r\n\r\n                                        ) : <NotFoundPage/>\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }))\r\n                    : (<NotFound/>)\r\n            }\r\n            {selectedFile ? (<EditFileModal selectedFile={selectedFile} course={course}/>) : ''}\r\n            <ModalFileDelete handleOnDelete={handleOnDelete}/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllChaptersAction: (data, onSuccess, onError) => dispatch(fetchAllChapters({}, onSuccess, onError)),\r\n    dispatchCreateFileAction: (chapter, title, description, file, onSuccess, onError) => dispatch(chapterFileCreate({\r\n        chapter, title, description, file\r\n    }, onSuccess, onError)),\r\n    dispatchDeleteFileAction: (fileId, onSuccess, onError) =>\r\n        dispatch(deleteFileById(fileId, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFiles)\r\n\r\n\r\nconst ModalFileDelete = ({handleOnDelete}) => (\r\n    <div className=\"modal\" id=\"confirmationFileModal\" tabIndex=\"-1\" role=\"dialog\">\r\n        <div role=\"document\" className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Confirmation</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Are you sure, you want to delete this Chapter Material ?</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" className=\"btn btn-secondary\">\r\n                        No\r\n                    </button>\r\n                    <button type=\"button\" data-dismiss=\"modal\" onClick={handleOnDelete} className=\"btn btn-primary\">\r\n                        Yes\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","import {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useState} from \"react\";\r\nimport {updateExam} from \"../redux/actions/chapterAction\";\r\n\r\nfunction EditExamModal({selectedExam, dispatchUpdateExamAction, course}) {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const [questions, setFields] = useState(\r\n        selectedExam.questions\r\n    );\r\n\r\n    function handleChangeQuestion(i, event) {\r\n        const values = [...questions];\r\n        values[i].question = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeQuestions(i, event) {\r\n        const values = [...questions];\r\n        values[i].answers = event.target.value;\r\n        values[i].answers = values[i].answers.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeCorrectAnswers(i, event) {\r\n        const values = [...questions];\r\n        values[i].correctAnswer = event.target.value;\r\n        values[i].correctAnswer = values[i].correctAnswer.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleAnswerType(i, val) {\r\n        const values = [...questions];\r\n        values[i].answerType = val\r\n        setFields(values);\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchUpdateExamAction(selectedExam.id, data.title, data.type, questions, () => {\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/4'), 300)\r\n            toast.success('Exam Updated Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        document.getElementById(\"editexamform\").reset();\r\n    }\r\n\r\n    function handleAdd() {\r\n        const values = [...questions];\r\n        values.push({question: null, number: null, answerType: 'radio', answers: null, correctAnswer: null});\r\n        setFields(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...questions];\r\n        values.splice(i, 1);\r\n        setFields(values);\r\n    }\r\n\r\n    return selectedExam.questions.length ? (\r\n        <>\r\n            <div className=\"modal\" id=\"editExamModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                <div role=\"document\" className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={cancelEdit}>\r\n                                <i className=\"fas fa-times\"/> Close</button>\r\n                        </div>\r\n                        <form noValidate className=\"p-4\"\r\n                              encType='multipart/form-data' onSubmit={handleSubmit(onSubmit)} id='editexamform'>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                                <input type=\"text\" className=\"form-control\" name='title' id=\"title\"\r\n                                       placeholder=\"Enter File Title\"\r\n                                       ref={register({required: true})} defaultValue={selectedExam.title}/>\r\n                                {errors.title && (<p className='error'>Title is required*</p>)}\r\n\r\n                                <input type=\"hidden\" name='type' ref={register({required: true})} value='chapter_exam'/>\r\n                                {errors.type && (<p className='error'>Exam Type is required*</p>)}\r\n                            </div>\r\n                            {\r\n                                questions && questions.length ? (\r\n                                     questions.map((field, idx) => {\r\n                                            return (\r\n\r\n                                                <div key={`${field}-${idx}`} className='single_field_wrap'>\r\n\r\n                                                    <div className=\"form-group question_heading text-center\">\r\n                                                        <strong>\r\n                                                            <h6>Question #{idx + 1}</h6>\r\n                                                        </strong>\r\n                                                    </div>\r\n\r\n                                                    {\r\n                                                        idx !== 0 ? (<div className=\"text-right\">\r\n                                                            <button type=\"button\" onClick={() => handleRemove(idx)} className='btn btn-danger'>\r\n                                                                <i className=\"fas fa-times\"/>\r\n                                                            </button>\r\n                                                        </div>) : ''\r\n                                                    }\r\n\r\n                                                    <div className=\"mb-3\">\r\n                                                        <label className=\"form-label\">Question</label>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Enter Question\" className='form-control'\r\n                                                            value={field.question || \"\"}\r\n                                                            onChange={e => handleChangeQuestion(idx, e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <label className=\"form-label\">Answer Type</label>\r\n                                                        <select name=\"answerType\" className='form-control'\r\n                                                                defaultValue={questions[idx] && questions[idx].answerType ? (\r\n                                                                    questions[idx].answerType) : field.answerType}\r\n                                                                onClick={e => handleAnswerType(idx, e.target.value)}>\r\n                                                            <option value=\"radio\">Single</option>\r\n                                                            <option value=\"checkbox\">Multiple</option>\r\n                                                        </select>\r\n                                                        <small>Select Whither This Question Has Multiple Answer or Not</small>\r\n                                                    </div>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <div className=\"row opt_wrapper\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"form-label\">Option(s)</label>\r\n\r\n                                                                <textarea\r\n                                                                    placeholder=\"Enter Each option on new line\" className='form-control'\r\n                                                                    value={field.answers ? field.answers.join('\\n') : \"\"}\r\n                                                                    onChange={e => handleChangeQuestions(idx, e)} rows={10}\r\n                                                                />\r\n                                                                <small><i className=\"fas fa-info-circle\"/> Enter Each option on new line</small>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <span>Options Preview </span>\r\n                                                                {\r\n                                                                    field.answers && (\r\n                                                                        <>\r\n                                                                            <div className=\"preview_option\">\r\n                                                                                {field.answers.length ? field.answers.map((elem, idx) => {\r\n                                                                                    return (<p>Option {idx + 1}) {elem}</p>)\r\n                                                                                }) : field.answers}\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    )\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <div className=\"row opt_wrapper\">\r\n                                                            <div className=\"col-md-8\">\r\n                                                                <label className=\"form-label\">Correct Option(s)</label>\r\n                                                                <textarea\r\n                                                                    placeholder=\"Enter correct answer. For Multiple answers, put each answer on new line\"\r\n                                                                    className='form-control'\r\n                                                                    value={field.correctAnswer ? field.correctAnswer.join('\\n') : \"\"}\r\n                                                                    onChange={e => handleChangeCorrectAnswers(idx, e)} rows={10}/>\r\n                                                                <small><i className=\"fas fa-info-circle\"/> Enter correct answer. For Multiple\r\n                                                                    answers, put each answer on new line</small>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <span>Options Preview </span>\r\n                                                                {\r\n                                                                    field.correctAnswer && (\r\n                                                                        <>\r\n                                                                            <div className=\"preview_option\">\r\n                                                                                {field.correctAnswer.length ? field.correctAnswer.map((elem, idx) => {\r\n                                                                                    return (<p>Answer {idx + 1}) {elem}</p>)\r\n                                                                                }) : field.correctAnswer}\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    )\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                ) : 'Waiting To Load'\r\n                            }\r\n                            <div className=\"mt-2 mb-5 text-right\">\r\n                                <button type=\"button\" onClick={() => handleAdd()} className='btn btn-primary'>\r\n                                    <i className=\"fas fa-plus\"/> Add Another Question\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type='submit' className='btn btn-primary'>Update</button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"modal-footer text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={cancelEdit}>\r\n                                <i className=\"fas fa-times\"/> Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    ) : 'Waiting To Load'\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchUpdateExamAction: (examId, title, type, questions, onSuccess, onError) => dispatch(updateExam(examId, {\r\n        examId, title, type, questions\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExamModal)","import React, {useEffect, useState} from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Select from \"react-select\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    chapterExamCreate,\r\n} from \"../../../redux/actions/chapterAction\";\r\n\r\nimport {toast} from \"react-toastify\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {deleteExamById, fetchAllChapters} from \"../../../redux/actions/chapterAction\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFound from \"../../../components/notfound.component\";\r\nimport NotFoundPage from \"../../notfoundpage\";\r\nimport EditExamModal from \"../../../components/editexam.component\";\r\n\r\nfunction CreateExam({course, user, dispatchFetchAllChaptersAction, dispatchCreateExamAction, dispatchDeleteExamAction}) {\r\n    const [options, setOptions] = useState([]);\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [chapter, setChapter] = useState([]);\r\n    let [selectedExamId, setSelectedExamId] = useState();\r\n    const [questions, setFields] = useState([{\r\n        question: null,\r\n        number: null,\r\n        answerType: 'radio',\r\n        answers: null,\r\n        correctAnswer: null\r\n    }]);\r\n\r\n    let [selectedExam, setSelectedExam] = useState();\r\n\r\n    const handleChange = (chapter) => {\r\n        if (chapter) {\r\n            setChapter(chapter.value)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatchFetchAllChaptersAction([], ({data}) => {\r\n            if (data && data.length > 0) {\r\n                const chapter_values = data.filter(function (item) {\r\n                    return (item.parentId === null && item.courseId === course.id);\r\n                }).map(item => {\r\n                    return {\r\n                        label: item.title,\r\n                        value: item.id\r\n                    };\r\n                })\r\n                if (!options.length > 0) {\r\n                    setOptions(chapter_values);\r\n                }\r\n            }\r\n        }, (message) => toast.error(message));\r\n    }, [dispatchFetchAllChaptersAction, course.id, options.length]);\r\n\r\n    function handleChangeQuestion(i, event) {\r\n        const values = [...questions];\r\n        values[i].question = event.target.value;\r\n        values[i].number = i;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeQuestions(i, event) {\r\n        const values = [...questions];\r\n        values[i].answers = event.target.value;\r\n        values[i].answers = values[i].answers.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeCorrectAnswers(i, event) {\r\n        const values = [...questions];\r\n        values[i].correctAnswer = event.target.value;\r\n        values[i].correctAnswer = values[i].correctAnswer.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleAnswerType(i, event) {\r\n        const values = [...questions];\r\n        values[i].answerType = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchCreateExamAction(course.id, chapter, user.userId, data.title, data.type, questions, () => {\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/4'), 300)\r\n            toast.success('Exam Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        dispatchDeleteExamAction(selectedExamId, () => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/4'), 300)\r\n            toast.success('Exam deleted Successfully!');\r\n        }, (message) => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            toast.error(`Error: ${message}`);\r\n        });\r\n    };\r\n\r\n    const showConfirmationModal = (event, examId) => {\r\n        event.preventDefault();\r\n        setSelectedExamId(examId);\r\n        window.$('#confirmationExamModal').modal('show');\r\n    };\r\n\r\n    function handleAdd() {\r\n        const values = [...questions];\r\n        values.push({question: null, number: null, answerType: 'radio', answers: null, correctAnswer: null});\r\n        setFields(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...questions];\r\n        values.splice(i, 1);\r\n        setFields(values);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className='form_heading'>\r\n                Create Exam For Individual Chapter\r\n            </h2>\r\n            <form noValidate className=\"p-4\"\r\n                  encType='multipart/form-data' onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"parentId\" className=\"form-label\">Select Chapter</label>\r\n                    {\r\n                        options.length > 0 ? (\r\n                            <Select options={options} onChange={handleChange}/>) : ''\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                    <input type=\"text\" className=\"form-control\" name='title' id=\"title\" placeholder=\"Enter File Title\"\r\n                           ref={register({required: true})}/>\r\n                    {errors.title && (<p className='error'>Title is required*</p>)}\r\n\r\n                    <input type=\"hidden\" name='type' ref={register({required: true})} value='chapter_exam'/>\r\n                    {errors.type && (<p className='error'>Exam Type is required*</p>)}\r\n                </div>\r\n\r\n                {\r\n                    questions.map((field, idx) => {\r\n                        return (\r\n                            <div key={`${field}-${idx}`} className='single_field_wrap'>\r\n                                <div className=\"form-group question_heading text-center\">\r\n                                    <strong>\r\n                                        <h6>Question #{idx + 1}</h6>\r\n                                    </strong>\r\n                                </div>\r\n                                {\r\n                                    idx !== 0 ? (<div className=\"text-right\">\r\n                                        <button type=\"button\" onClick={() => handleRemove(idx)}\r\n                                                className='btn btn-danger'>\r\n                                            <i className=\"fas fa-times\"/>\r\n                                        </button>\r\n                                    </div>) : ''\r\n                                }\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Question</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Question\" className='form-control'\r\n                                        value={field.question || \"\"}\r\n                                        onChange={e => handleChangeQuestion(idx, e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Answer Type</label>\r\n                                    <select name=\"answerType\" className='form-control'\r\n                                            value={field.answerType || \"radio\"}\r\n                                            onChange={e => handleAnswerType(idx, e)}>\r\n                                        <option value=\"radio\">Single</option>\r\n                                        <option value=\"checkbox\">Multiple</option>\r\n                                    </select>\r\n                                    <small>Select Whither This Question Has Multiple Answer or Not</small>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"row opt_wrapper\">\r\n                                        <div className=\"col-md-8\">\r\n                                            <label className=\"form-label\">Option(s)</label>\r\n\r\n                                            <textarea\r\n                                                placeholder=\"Enter Each option on new line\" className='form-control'\r\n                                                value={field.answers ? field.answers.join('\\n') : \"\"}\r\n                                                onChange={e => handleChangeQuestions(idx, e)} rows={10}\r\n                                            />\r\n                                            <small><i className=\"fas fa-info-circle\"/> Enter Each option on new\r\n                                                line</small>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <span>Options Preview </span>\r\n                                            {\r\n                                                field.answers && (\r\n                                                    <>\r\n                                                        <div className=\"preview_option\">\r\n                                                            {field.answers.length ? field.answers.map((elem, idx) => {\r\n                                                                return (<p>Option {idx + 1}) {elem}</p>)\r\n                                                            }) : field.answers}\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"row opt_wrapper\">\r\n                                        <div className=\"col-md-8\">\r\n                                            <label className=\"form-label\">Correct Option(s)</label>\r\n                                            <textarea\r\n                                                placeholder=\"Enter correct answer. For Multiple answers, put each answer on new line\"\r\n                                                className='form-control'\r\n                                                value={field.correctAnswer ? field.correctAnswer.join('\\n') : \"\"}\r\n                                                onChange={e => handleChangeCorrectAnswers(idx, e)} rows={10}/>\r\n                                            <small><i className=\"fas fa-info-circle\"/> Enter correct answer. For\r\n                                                Multiple\r\n                                                answers, put each answer on new line</small>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <span>Options Preview </span>\r\n                                            {\r\n                                                field.correctAnswer && (\r\n                                                    <>\r\n                                                        <div className=\"preview_option\">\r\n                                                            {field.correctAnswer.length ? field.correctAnswer.map((elem, idx) => {\r\n                                                                return (<p>Answer {idx + 1}) {elem}</p>)\r\n                                                            }) : field.correctAnswer}\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                <div className=\"mt-2 mb-5 text-right\">\r\n                    <button type=\"button\" onClick={() => handleAdd()} className='btn btn-primary'>\r\n                        <i className=\"fas fa-plus\"/> Add Another Question\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <button type='submit' className='btn btn-primary'>Create</button>\r\n                </div>\r\n            </form>\r\n\r\n            <h2 className='form_heading'>\r\n                {course.title}'s Chapter's Exams\r\n            </h2>\r\n            {\r\n                course.Chapters.length ? (\r\n                        course.Chapters.map(function (chapter) {\r\n                            return (\r\n                                <>\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th className='text-center'>{chapter.title}</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                    </table>\r\n                                    {\r\n                                        chapter.Exams.length ? (\r\n                                            <>\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                    <tr>\r\n                                                        <th>Exam Title</th>\r\n                                                        <th>Question(s)</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        chapter.Exams.map(function (exam) {\r\n                                                            return (\r\n                                                                <tr>\r\n                                                                    <td>{exam.title}</td>\r\n                                                                    <td>{exam.questions.length} Question(s)</td>\r\n                                                                    <td>\r\n                                                                        <div className=\"d-flex\">\r\n                                                                            <Link to={`#`}\r\n                                                                                  className='btn btn-danger tbl_btn '\r\n                                                                                  onClick={(e) => showConfirmationModal(e, exam.id)}>Delete</Link>\r\n                                                                            <Link to={`#`} target='_blank'\r\n                                                                                  className='btn btn-primary tbl_btn ml-2 mr-2'\r\n                                                                                  onClick={async function (e) {\r\n                                                                                      e.preventDefault();\r\n                                                                                      await setSelectedExam(exam);\r\n                                                                                      window.$('#editExamModal').modal({\r\n                                                                                          backdrop: 'static',\r\n                                                                                          keyboard: false,\r\n                                                                                          show: true\r\n                                                                                      })\r\n                                                                                  }}>Edit</Link>\r\n                                                                            <Link\r\n                                                                                to={`/exam_submission/${exam.id}/preview`}\r\n                                                                                target='_blank'\r\n                                                                                className='btn btn-dark tbl_btn'>Preview</Link>\r\n                                                                            <Link\r\n                                                                                to={`/submissions/${exam.id}`}\r\n                                                                                target='_blank'\r\n                                                                                className='btn btn-success tbl_btn ml-2'>All\r\n                                                                                Submissions</Link>\r\n                                                                        </div>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </>\r\n\r\n                                        ) : <NotFoundPage/>\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }))\r\n                    : (<NotFound/>)\r\n            }\r\n            {selectedExam ? (<EditExamModal selectedExam={selectedExam} course={course}/>) : ''}\r\n            <ModalExamDelete handleOnDelete={handleOnDelete}/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllChaptersAction: (data, onSuccess, onError) => dispatch(fetchAllChapters({}, onSuccess, onError)),\r\n    dispatchCreateExamAction: (courseId, chapterId, creatorId, title, type, questions, onSuccess, onError) => dispatch(chapterExamCreate({\r\n        courseId, chapterId, creatorId, title, type, questions\r\n    }, onSuccess, onError)),\r\n    dispatchDeleteExamAction: (examId, onSuccess, onError) =>\r\n        dispatch(deleteExamById(examId, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateExam)\r\n\r\n\r\nconst ModalExamDelete = ({handleOnDelete}) => (\r\n    <div className=\"modal\" id=\"confirmationExamModal\" tabIndex=\"-1\" role=\"dialog\">\r\n        <div role=\"document\" className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Confirmation</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Are you sure, you want to delete this Chapter Exam ?</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" className=\"btn btn-secondary\">\r\n                        No\r\n                    </button>\r\n                    <button type=\"button\" data-dismiss=\"modal\" onClick={handleOnDelete} className=\"btn btn-primary\">\r\n                        Yes\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","import {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport React, {useState} from \"react\";\r\nimport {updateExam} from \"../redux/actions/chapterAction\";\r\n\r\nfunction EditEvaluationModal({selectedEvaluation,dispatchUpdateExamAction, course}) {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const [questions, setFields] = useState(\r\n        selectedEvaluation.questions\r\n    );\r\n\r\n    function handleChangeQuestion(i, event) {\r\n        const values = [...questions];\r\n        values[i].question = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeQuestions(i, event) {\r\n        const values = [...questions];\r\n        values[i].answers = event.target.value;\r\n        values[i].answers = values[i].answers.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeCorrectAnswers(i, event) {\r\n        const values = [...questions];\r\n        values[i].correctAnswer = event.target.value;\r\n        values[i].correctAnswer = values[i].correctAnswer.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleAnswerType(i, event) {\r\n        const values = [...questions];\r\n        values[i].answerType = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchUpdateExamAction( selectedEvaluation.id, data.title, data.type, questions, () => {\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/5'), 300)\r\n            toast.success('Evaluation Updated Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        document.getElementById(\"editevaluationform\").reset();\r\n    }\r\n\r\n    function handleAdd() {\r\n        const values = [...questions];\r\n        values.push({question: null, number: null, answerType: 'radio', answers: null, correctAnswer: null});\r\n        setFields(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...questions];\r\n        values.splice(i, 1);\r\n        setFields(values);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modal\" id=\"editEvaluationModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                <div role=\"document\" className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={cancelEdit}>\r\n                                <i className=\"fas fa-times\"/> Close</button>\r\n                        </div>\r\n                        <form noValidate className=\"p-4\"\r\n                              encType='multipart/form-data' onSubmit={handleSubmit(onSubmit)} id='editevaluationform'>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                                <input type=\"text\" className=\"form-control\" name='title' id=\"title\" placeholder=\"Enter File Title\"\r\n                                       ref={register({required: true})} defaultValue={selectedEvaluation.title}/>\r\n                                {errors.title && (<p className='error'>Title is required*</p>)}\r\n\r\n                                <input type=\"hidden\" name='type' ref={register({required: true})} value='chapter_exam'/>\r\n                                {errors.type && (<p className='error'>Exam Type is required*</p>)}\r\n                            </div>\r\n\r\n                            {\r\n                                questions && questions.length ? (\r\n                                    questions.map((field, idx) => {\r\n                                        return (\r\n\r\n                                            <div key={`${field}-${idx}`} className='single_field_wrap'>\r\n\r\n                                                <div className=\"form-group question_heading text-center\">\r\n                                                    <strong>\r\n                                                        <h6>Question #{idx + 1}</h6>\r\n                                                    </strong>\r\n                                                </div>\r\n\r\n                                                {\r\n                                                    idx !== 0 ? (<div className=\"text-right\">\r\n                                                        <button type=\"button\" onClick={() => handleRemove(idx)} className='btn btn-danger'>\r\n                                                            <i className=\"fas fa-times\"/>\r\n                                                        </button>\r\n                                                    </div>) : ''\r\n                                                }\r\n\r\n                                                <div className=\"mb-3\">\r\n                                                    <label className=\"form-label\">Question</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter Question\" className='form-control'\r\n                                                        value={field.question || \"\"}\r\n                                                        onChange={e => handleChangeQuestion(idx, e)}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <label className=\"form-label\">Answer Type</label>\r\n                                                    <select name=\"answerType\" className='form-control'\r\n                                                            defaultValue={questions[idx] && questions[idx].answerType ? (\r\n                                                                questions[idx].answerType) : field.answerType}\r\n                                                            onClick={e => handleAnswerType(idx, e.target.value)}>\r\n                                                        <option value=\"radio\">Single</option>\r\n                                                        <option value=\"checkbox\">Multiple</option>\r\n                                                    </select>\r\n                                                    <small>Select Whither This Question Has Multiple Answer or Not</small>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <div className=\"row opt_wrapper\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <label className=\"form-label\">Option(s)</label>\r\n\r\n                                                            <textarea\r\n                                                                placeholder=\"Enter Each option on new line\" className='form-control'\r\n                                                                value={field.answers ? field.answers.join('\\n') : \"\"}\r\n                                                                onChange={e => handleChangeQuestions(idx, e)} rows={10}\r\n                                                            />\r\n                                                            <small><i className=\"fas fa-info-circle\"/> Enter Each option on new line</small>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <span>Options Preview </span>\r\n                                                            {\r\n                                                                field.answers && (\r\n                                                                    <>\r\n                                                                        <div className=\"preview_option\">\r\n                                                                            {field.answers.length ? field.answers.map((elem, idx) => {\r\n                                                                                return (<p>Option {idx + 1}) {elem}</p>)\r\n                                                                            }) : field.answers}\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                )\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <div className=\"row opt_wrapper\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <label className=\"form-label\">Correct Option(s)</label>\r\n                                                            <textarea\r\n                                                                placeholder=\"Enter correct answer. For Multiple answers, put each answer on new line\"\r\n                                                                className='form-control'\r\n                                                                value={field.correctAnswer ? field.correctAnswer.join('\\n') : \"\"}\r\n                                                                onChange={e => handleChangeCorrectAnswers(idx, e)} rows={10}/>\r\n                                                            <small><i className=\"fas fa-info-circle\"/> Enter correct answer. For Multiple\r\n                                                                answers, put each answer on new line</small>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <span>Options Preview </span>\r\n                                                            {\r\n                                                                field.correctAnswer && (\r\n                                                                    <>\r\n                                                                        <div className=\"preview_option\">\r\n                                                                            {field.correctAnswer.length ? field.correctAnswer.map((elem, idx) => {\r\n                                                                                return (<p>Answer {idx + 1}) {elem}</p>)\r\n                                                                            }) : field.correctAnswer}\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                )\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                ) : 'Waiting To Load'\r\n                            }\r\n\r\n                            <div className=\"mt-2 mb-5 text-right\">\r\n                                <button type=\"button\" onClick={() => handleAdd()} className='btn btn-primary'>\r\n                                    <i className=\"fas fa-plus\"/> Add Another Question\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type='submit' className='btn btn-primary'>Update</button>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"modal-footer text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={cancelEdit}>\r\n                                <i className=\"fas fa-times\"/> Close</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchUpdateExamAction: (examId, title, description, file, onSuccess, onError) => dispatch(updateExam(examId, {\r\n        title, description, file\r\n    }, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEvaluationModal)","import React, { useState} from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {toast} from \"react-toastify\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFoundPage from \"../../notfoundpage\";\r\nimport EditEvaluationModal from \"../../../components/editevaluation.component\";\r\nimport {courseEvaluationCreate} from \"../../../redux/actions/courseAction\";\r\nimport {deleteExamById} from \"../../../redux/actions/chapterAction\";\r\n\r\nfunction CreateEvaluation({course, user, dispatchCreateEvaluationAction, dispatchDeleteEvaluationAction}) {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    let [selectedExamId, setSelectedExamId] = useState();\r\n\r\n    const [questions, setFields] = useState([{\r\n        question: null,\r\n        number: null,\r\n        answerType: 'radio',\r\n        answers: null,\r\n        correctAnswer: null\r\n    }]);\r\n\r\n    let [selectedEvaluation, setSelectedExam] = useState();\r\n\r\n\r\n    function handleChangeQuestion(i, event) {\r\n        const values = [...questions];\r\n        values[i].question = event.target.value;\r\n        values[i].number = i;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeQuestions(i, event) {\r\n        const values = [...questions];\r\n        values[i].answers = event.target.value;\r\n        values[i].answers = values[i].answers.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeCorrectAnswers(i, event) {\r\n        const values = [...questions];\r\n        values[i].correctAnswer = event.target.value;\r\n        values[i].correctAnswer = values[i].correctAnswer.split(\"\\n\")\r\n        setFields(values);\r\n    }\r\n\r\n    function handleAnswerType(i, event) {\r\n        const values = [...questions];\r\n        values[i].answerType = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchCreateEvaluationAction(course.id, user.userId, data.title, data.type, questions, () => {\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/5'), 300)\r\n            toast.success('Evaluation Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        dispatchDeleteEvaluationAction(selectedExamId, () => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            setTimeout(() => window.location.replace('/course_builder/edit/' + course.id + '/5'), 300)\r\n            toast.success('Evaluation deleted Successfully!');\r\n        }, (message) => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            toast.error(`Error: ${message}`);\r\n        });\r\n    };\r\n\r\n    const showConfirmationModal = (event, examId) => {\r\n        event.preventDefault();\r\n        setSelectedExamId(examId);\r\n        window.$('#confirmationEvaluationModal').modal('show');\r\n    };\r\n\r\n    function handleAdd() {\r\n        const values = [...questions];\r\n        values.push({question: null, number: null, answerType: 'radio', answers: null, correctAnswer: null});\r\n        setFields(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...questions];\r\n        values.splice(i, 1);\r\n        setFields(values);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className='form_heading'>\r\n                Create Evaluation For {course.title}\r\n            </h2>\r\n            <form noValidate className=\"p-4\"\r\n                  encType='multipart/form-data' onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                    <input type=\"text\" className=\"form-control\" name='title' id=\"title\" placeholder=\"Enter File Title\"\r\n                           ref={register({required: true})}/>\r\n                    {errors.title && (<p className='error'>Title is required*</p>)}\r\n\r\n                    <input type=\"hidden\" name='type' ref={register({required: true})} value='course_exam'/>\r\n                    {errors.type && (<p className='error'>Exam Type is required*</p>)}\r\n                </div>\r\n\r\n                {questions.map((field, idx) => {\r\n                    return (\r\n\r\n                        <div key={`${field}-${idx}`} className='single_field_wrap'>\r\n\r\n                            <div className=\"form-group question_heading text-center\">\r\n                                <strong>\r\n                                    <h6>Question #{idx + 1}</h6>\r\n                                </strong>\r\n                            </div>\r\n\r\n                            {\r\n                                idx !== 0 ? (<div className=\"text-right\">\r\n                                    <button type=\"button\" onClick={() => handleRemove(idx)} className='btn btn-danger'>\r\n                                        <i className=\"fas fa-times\"/>\r\n                                    </button>\r\n                                </div>) : ''\r\n                            }\r\n\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Question</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Question\" className='form-control'\r\n                                    value={field.question || \"\"}\r\n                                    onChange={e => handleChangeQuestion(idx, e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Answer Type</label>\r\n                                <select name=\"answerType\" className='form-control' value={field.answerType || \"radio\"}\r\n                                        onChange={e => handleAnswerType(idx, e)}>\r\n                                    <option value=\"radio\">Single</option>\r\n                                    <option value=\"checkbox\">Multiple</option>\r\n                                </select>\r\n                                <small>Select Whither This Question Has Multiple Answer or Not</small>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <div className=\"row opt_wrapper\">\r\n                                    <div className=\"col-md-8\">\r\n                                        <label className=\"form-label\">Option(s)</label>\r\n                                        <textarea\r\n                                            placeholder=\"Enter Each option on new line\" className='form-control'\r\n                                            value={field.answers ? field.answers.join('\\n') : \"\"}\r\n                                            onChange={e => handleChangeQuestions(idx, e)} rows={10}\r\n                                        />\r\n                                        <small><i className=\"fas fa-info-circle\"/> Enter Each option on new line</small>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <span>Options Preview </span>\r\n                                        {\r\n                                            field.answers && (\r\n                                                <>\r\n                                                    <div className=\"preview_option\">\r\n                                                        {field.answers.length ? field.answers.map((elem, idx) => {\r\n                                                            return (<p>Option {idx + 1}) {elem}</p>)\r\n                                                        }) : field.answers}\r\n                                                    </div>\r\n                                                </>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <div className=\"row opt_wrapper\">\r\n                                    <div className=\"col-md-8\">\r\n                                        <label className=\"form-label\">Correct Option(s)</label>\r\n                                        <textarea\r\n                                            placeholder=\"Enter correct answer. For Multiple correct answer, put each answer on new line\"\r\n                                            className='form-control'\r\n                                            value={field.correctAnswer ? field.correctAnswer.join('\\n') : \"\"}\r\n                                            onChange={e => handleChangeCorrectAnswers(idx, e)} rows={10}\r\n                                        />\r\n                                        <small><i className=\"fas fa-info-circle\"/> Enter correct answer. For Multiple answers, put each answer on new line</small>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <span>Options Preview </span>\r\n                                        {\r\n                                            field.correctAnswer && (\r\n                                                <>\r\n                                                    <div className=\"preview_option\">\r\n                                                        {field.correctAnswer.length ? field.correctAnswer.map((elem, idx) => {\r\n                                                            return (<p>Answer {idx + 1}) {elem}</p>)\r\n                                                        }) : field.correctAnswer}\r\n                                                    </div>\r\n                                                </>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n                <div className=\"mt-2 mb-5 text-right\">\r\n                    <button type=\"button\" onClick={() => handleAdd()} className='btn btn-primary'>\r\n                        <i className=\"fas fa-plus\"/> Add Another Question\r\n                    </button>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <button type='submit' className='btn btn-primary'>Create</button>\r\n                </div>\r\n            </form>\r\n\r\n            <h2 className='form_heading'>\r\n                {course.title}'s Evaluations\r\n            </h2>\r\n            {\r\n                course.Exams.length ? (\r\n                        <>\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Exam Title</th>\r\n                                    <th>Question(s)</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {course.Exams.map(function (exam) {\r\n                                    return (\r\n\r\n                                        <tr>\r\n                                            <td>{exam.title}</td>\r\n                                            <td>{exam.questions.length} Question(s)</td>\r\n\r\n                                            <td>\r\n                                                <div className=\"d-flex\">\r\n                                                    <Link to={`#`}\r\n                                                          className='btn btn-danger tbl_btn '\r\n                                                          onClick={(e) => showConfirmationModal(e, exam.id)}>Delete</Link>\r\n                                                    <Link to={`#`} target='_blank'\r\n                                                          className='btn btn-primary tbl_btn ml-2 mr-2'\r\n                                                          onClick={async function (e) {\r\n                                                              e.preventDefault();\r\n                                                              await setSelectedExam(exam);\r\n                                                              window.$('#editEvaluationModal').modal({\r\n                                                                  backdrop: 'static',\r\n                                                                  keyboard: false,\r\n                                                                  show: true\r\n                                                              })\r\n                                                          }}>Edit</Link>\r\n                                                    <Link\r\n                                                        to={`/exam_submission/${exam.id}/preview`}\r\n                                                        target='_blank'\r\n                                                        className='btn btn-dark tbl_btn'>Preview</Link>\r\n                                                    <Link\r\n                                                        to={`/submissions/${exam.id}`}\r\n                                                        target='_blank'\r\n                                                        className='btn btn-success tbl_btn ml-2'>All Submissions</Link>\r\n                                                </div>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n\r\n                                })}\r\n                                </tbody>\r\n                            </table>\r\n                        </>\r\n                    )\r\n                    : (<NotFoundPage/>)\r\n            }\r\n            {selectedEvaluation ? (<EditEvaluationModal selectedEvaluation={selectedEvaluation} course={course}/>) : ''}\r\n            <ModalEvaluationDelete handleOnDelete={handleOnDelete}/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchCreateEvaluationAction: (courseId, creatorId, title, type, questions, onSuccess, onError) => dispatch(courseEvaluationCreate({\r\n        courseId, creatorId, title, type, questions\r\n    }, onSuccess, onError)),\r\n    dispatchDeleteEvaluationAction: (examId, onSuccess, onError) =>\r\n        dispatch(deleteExamById(examId, onSuccess, onError))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvaluation)\r\n\r\n\r\nconst ModalEvaluationDelete = ({handleOnDelete}) => (\r\n    <div className=\"modal\" id=\"confirmationEvaluationModal\" tabIndex=\"-1\" role=\"dialog\">\r\n        <div role=\"document\" className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Confirmation</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Are you sure, you want to delete this Course Evaluation?</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" className=\"btn btn-secondary\">\r\n                        No\r\n                    </button>\r\n                    <button type=\"button\" data-dismiss=\"modal\" onClick={handleOnDelete} className=\"btn btn-primary\">\r\n                        Yes\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","import React from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFound from \"../../../components/notfound.component\";\r\n\r\nfunction CourseTrainees({course}) {\r\n\r\n    return (\r\n        <>\r\n            <h2 className='form_heading'>\r\n                All Trainees For {course.title}\r\n            </h2>\r\n            {\r\n                course.Trainees.length ? (\r\n                        <>\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Image</th>\r\n                                    <th>Name</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Email</th>\r\n                                    <th>Address</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    course.Trainees.map(function (item) {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td>\r\n                                                    {\r\n                                                        item.pic ? (<img src={item.pic} height='100px' width='100px' className='img-circle'/>) : ( <i className='fas fa-user'/>)\r\n                                                    }\r\n                                                </td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>{item.phone}</td>\r\n                                                <td>{item.email}</td>\r\n                                                <td>{item.address}</td>\r\n                                                <td>\r\n                                                    <div className=\"d-flex\">\r\n                                                        <Link to={`/profile_view/${item.id}`} target='_blank'\r\n                                                              className='btn btn-dark tbl_btn'>View Profile</Link>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        </>\r\n                    )\r\n                    : (<NotFound/>)\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CourseTrainees","import React from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFound from \"../../../components/notfound.component\";\r\n\r\nfunction CourseTrainers({course}) {\r\n\r\n    return (\r\n        <>\r\n            <h2 className='form_heading'>\r\n                All Trainers For {course.title}\r\n            </h2>\r\n            {\r\n                course.Trainers.length ? (\r\n                        <>\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Image</th>\r\n                                    <th>Name</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Email</th>\r\n                                    <th>Address</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    course.Trainers.map(function (item) {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td>\r\n                                                    {\r\n                                                        item.pic ? (<img src={item.pic} height='100px' width='100px' className='img-circle'/>) : ( <i className='fas fa-user'/>)\r\n                                                    }\r\n                                                </td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>{item.phone}</td>\r\n                                                <td>{item.email}</td>\r\n                                                <td>{item.address}</td>\r\n                                                <td>\r\n                                                    <div className=\"d-flex\">\r\n                                                        <Link to={`/profile_view/${item.id}`} target='_blank'\r\n                                                              className='btn btn-dark tbl_btn'>View Profile</Link>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        </>\r\n                    )\r\n                    : (<NotFound/>)\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CourseTrainers","import React, {useEffect, useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {connect} from \"react-redux\";\r\nimport {getCourseById, updateCourse} from \"../../../redux/actions/courseAction\";\r\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport AssignCategory from \"./assign_categorypage.component\";\r\nimport CreateChapter from \"./create_chapterspage.component\";\r\nimport CreateFiles from \"./create_filespage.component\";\r\nimport CreateExam from \"./create_exampage\";\r\nimport CreateEvaluation from \"./create_evaluationpage\";\r\nimport CourseTrainees from \"./coursetraineespage.component\";\r\nimport history from \"../../../history\";\r\nimport CourseTrainers from \"./coursetrainerspage.component\";\r\n\r\nfunction UpdateCoursePage({match, dispatchUpdateCourseAction, dispatchGetCourseByIdAction, course}) {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [published, setPublished] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [objective, setObjective] = useState('');\r\n    const {courseId, activeTab} = match.params;\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchUpdateCourseAction(courseId, data.title, data.banner, data.shortDesc, description, objective, data.passing_mark, data.published, () => {\r\n            toast.success('Course Updated Successfully!');\r\n            history.replace('/course_builder/edit/'+courseId+'/0')\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatchGetCourseByIdAction(courseId, () => {\r\n                console.log('Course Loaded')\r\n            }, (message) => toast.error(message)\r\n        );\r\n    }, [courseId, dispatchGetCourseByIdAction]);\r\n\r\n    return course ? (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Course Builder For The Course {course && course.title}</h2>\r\n            <div className=\"multi_step_wrapper\">\r\n                <div className='main_content'>\r\n                    <div className=\"request_form course_update_tabs\">\r\n                        <Tabs defaultIndex={parseInt(activeTab)}>\r\n                            <TabList>\r\n                                <Tab>Course Details</Tab>\r\n                                <Tab>Assign Category</Tab>\r\n                                <Tab>Chapters</Tab>\r\n                                <Tab>Chapter Materials</Tab>\r\n                                <Tab>Chapter Exam</Tab>\r\n                                <Tab>Course Evaluation</Tab>\r\n                                <Tab>Trainees</Tab>\r\n                                <Tab>Trainers</Tab>\r\n                            </TabList>\r\n                            <TabPanel>\r\n                                <h2 className='form_heading'>\r\n                                    Course Details Of {course && course.title}\r\n                                </h2>\r\n                                <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}\r\n                                      encType='multipart/form-data'>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"title\">Course Title</label>\r\n                                        <input type=\"text\" className=\"form-control\" name='title' id=\"title\"\r\n                                               placeholder=\"Enter Course Title\" ref={register({required: true})}\r\n                                               defaultValue={course && course.title}/>\r\n                                        {errors.title && (<p className='error'>Title is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"banner\">Course Banner</label>\r\n                                        <input type=\"file\" className=\"form-control\" id=\"banner\" name='banner'\r\n                                               ref={register}/>\r\n                                        <div className=\"preview\">\r\n                                            {\r\n                                                course && course.banner ? (\r\n                                                    <div className=\"preview\"><img src={course.banner} alt={course.name}/>\r\n                                                    </div>) : ''\r\n                                            }\r\n                                        </div>\r\n                                        {errors.banner && (<p className='error'>Banner is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"shortDesc\">Short Description</label>\r\n                                        <textarea className=\"form-control\" id=\"shortDesc\" name='shortDesc' rows=\"3\"\r\n                                                  ref={register({required: true})}\r\n                                                  defaultValue={course && course.shortDesc}/>\r\n                                        {errors.shortDesc && (<p className='error'>Short Description is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"description\">Course Description</label>\r\n                                        <ReactQuill name='description' onChange={setDescription}\r\n                                                    defaultValue={course ? course.description : description} />\r\n                                        {!description ? 'Please Enter Some Description' : ''}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"objective\">Course Objective</label>\r\n                                        <ReactQuill theme=\"snow\" name='objective' ref={register({required: true})}\r\n                                                    onChange={setObjective} defaultValue={course ? course.objective : objective} />\r\n                                        {!objective ? 'Please Enter Some Objective' : ''}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"passing_mark\">Passing Mark</label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"passing_mark\"\r\n                                               name='passing_mark'\r\n                                               ref={register({required: true})}\r\n                                               defaultValue={course && course.passing_mark}/>\r\n                                        {errors.passing_mark && (<p className='error'>Passing Mark is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"published\">Status</label>\r\n                                        <select className=\"form-control \" name='published'\r\n                                                ref={register({required: true})}\r\n                                                defaultValue={course ? course.published : published}\r\n                                                onChange={(e) => setPublished(e.target.selectedOptions[0].value)}>\r\n                                            <option value={true}>Published</option>\r\n                                            <option value={false}>Draft</option>\r\n                                        </select>\r\n                                        {errors.published && (<p className='error'>Status is required*</p>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <button type='submit' className='btn btn-primary'>Update Course Details</button>\r\n                                    </div>\r\n                                </form>\r\n                            </TabPanel>\r\n                            <TabPanel >\r\n                                <AssignCategory course={course}/>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <CreateChapter course={course}/>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <CreateFiles course={course}/>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <CreateExam course={course}/>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <CreateEvaluation course={course}/>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <CourseTrainees course={course}/>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <CourseTrainers course={course}/>\r\n                            </TabPanel>\r\n                        </Tabs>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : 'Loading'\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchUpdateCourseAction: (courseId, title, banner, shortDesc, description, objective, passing_mark, published, onSuccess, onError) => dispatch(updateCourse(courseId, {\r\n        title,\r\n        banner,\r\n        shortDesc,\r\n        description,\r\n        objective,\r\n        passing_mark,\r\n        published\r\n    }, onSuccess, onError)),\r\n    dispatchGetCourseByIdAction: (courseId, onSuccess, onError) =>\r\n        dispatch(getCourseById(courseId, onSuccess, onError))\r\n})\r\n\r\nconst mapStateToProps = (state) => (\r\n        {\r\n            loading: state.loading,\r\n            course: state.courses.course\r\n        });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateCoursePage)\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport NotFound from \"../components/notfound.component\";\r\nimport {fetchAllCategories} from \"../redux/actions/categoryAction\";\r\n\r\nconst CategoriesPage = ({loading, categories, dispatchFetchAllCategoriesAction, user, dispatchGetSingleUserAction}) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => dispatchFetchAllCategoriesAction(), [dispatchFetchAllCategoriesAction]);\r\n \r\n    const filteredData = categories.filter((val) => {\r\n        if (searchTerm === '') {\r\n            return val\r\n        } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n            return val\r\n        }else{\r\n            return []\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title '>All Listed Categories</h2>\r\n            <div className='main_content'>\r\n                <div className='orgs_list'>\r\n                    <div className=\"card-group row \">\r\n                        <div className=\"col-12 p-3\">\r\n                            <div className=\"filter_section\">\r\n                                <form>\r\n                                    <input type=\"search\" name='search' id='search' placeholder='Enter Keyword To Search...'\r\n                                           className='form-control' onChange={(event) => {\r\n                                        setSearchTerm(event.target.value)\r\n                                    }}/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            filteredData.length > 0 ? (\r\n                                    filteredData.map(item => (\r\n                                        <div className=\"col-4 p-3\" key={item.id}>\r\n                                            <div className=\"card-body\">\r\n                                                <h5 className=\"card-title\">{item.name}</h5>\r\n                                                <p className=\"card-text\">{item.description}</p>\r\n                                            </div>\r\n                                            <div className=\"card-footer pub_time\">\r\n                                                <small className=\"text-muted\">Created on {item.createdAt}</small>\r\n                                            </div>\r\n                                            <div className=\"card-footer btns\">\r\n                                                <a className='join_link btn_remove'>Delete</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                ) :\r\n                                (\r\n                                    <NotFound/>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.categories,\r\n    loading: state.loading,\r\n    user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllCategoriesAction: () => dispatch(fetchAllCategories())\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesPage)\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getUserById} from '../redux/actions/authActions';\r\nimport Courses from \"../components/courses.component\";\r\n\r\nconst ProfileViewPage = ({loading,  match, dispatchGetSingleUserByIdAction, single_user}) => {\r\n    let {userId} = match.params;\r\n\r\n    useEffect(() => {\r\n        dispatchGetSingleUserByIdAction(userId, (res) => {\r\n            console.log(res)\r\n        });\r\n    }, []);\r\n\r\n    return single_user ? (\r\n\r\n        <div className='right_wrapper'>\r\n            <div className='main_content'>\r\n                <div className=\"single_page\">\r\n                    <div className=\"page_header\">\r\n                        <center>\r\n                            <img\r\n                                src={single_user.pic ? single_user.pic : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'}\r\n                                className=\"org_logo\"/>\r\n                            <h3 className=\"media-heading\">{single_user.name}</h3>\r\n                            {\r\n                                <a target='_blank' href={single_user.cv} className='btn btn-primary'> Cv\r\n                                    Of {single_user.name}</a>\r\n                            }\r\n                        </center>\r\n                    </div>\r\n                    <div className=\"course_media row\">\r\n\r\n                    </div>\r\n                    <div className=\"page_body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4 p-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"single_card_elem\">\r\n                                        <div className=\"person_meta\">\r\n                                            <div className=\"name\">\r\n                                                {single_user.phone}\r\n                                            </div>\r\n                                            <div className=\"name\">\r\n                                                {single_user.email}\r\n                                            </div>\r\n                                            <div className=\"name\">\r\n                                                {single_user.address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-8 p-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div dangerouslySetInnerHTML={{__html: single_user.bio}}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        single_user.Roles[0].name === 'Trainer' && single_user.TrainerCourses && single_user.TrainerCourses > 0 ? (\r\n                            <div className=\"page_cards\">\r\n                                <div className='orgs_list'>\r\n                                    <div className=\"card-group row \">\r\n                                        <div className=\"page_cards mt-5\">\r\n                                            <h4 className='page_title'>Courses Provided By This User</h4>\r\n                                            {\r\n                                                single_user.TrainerCourses && single_user.TrainerCourses > 0 ? (\r\n                                                    <Courses courses={single_user.TrainerCourses}\r\n                                                             user={single_user}/>) : ''\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>) : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : 'Loading'\r\n}\r\n\r\nconst mapStateToProps = (state ) => (\r\nconsole.log(),\r\n    {\r\n        loading: state.loading,\r\n        single_user:  state.users.single_user\r\n    });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetSingleUserByIdAction: (userId, onSuccess) =>\r\n        dispatch(getUserById(userId, onSuccess))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewPage)\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {fetchAllChapters, getChapterById} from \"../redux/actions/chapterAction\";\r\nimport ReactPlayer from \"react-player\";\r\nimport DocViewer, {DocViewerRenderers} from \"react-doc-viewer\";\r\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs';\r\nimport {toast} from \"react-toastify\";\r\nimport {getCurrentUser} from \"../redux/actions/authActions\";\r\nimport NotFoundPage from \"./notfoundpage\";\r\n\r\nconst ChapterSinglePage = ({match, dispatchGetChapterByIdAction, chapter, chapters, user, dispatchFetchAllChaptersAction, loading, dispatchFetchCurrentUserAction, TrainerCoursesList, TraineeCoursesList}) => {\r\n\r\n    let {chapterId, courseId} = match.params;\r\n\r\n    useEffect(() => {\r\n        dispatchGetChapterByIdAction(chapterId)\r\n    }, [dispatchGetChapterByIdAction])\r\n\r\n    useEffect(() => {\r\n        dispatchFetchAllChaptersAction()\r\n    }, [dispatchFetchAllChaptersAction])\r\n\r\n    useEffect(() => {\r\n        dispatchFetchCurrentUserAction(user.userId, (response) => {\r\n            console.log('Courses Loaded')\r\n        }, (message) => toast.error(message))\r\n    }, [dispatchFetchCurrentUserAction, user.userId]);\r\n    let myCourses = TrainerCoursesList && TrainerCoursesList.concat(TraineeCoursesList)\r\n    return (\r\n        !loading && chapter && myCourses && myCourses.includes(parseInt(courseId)) ? <div className='right_wrapper'>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\r\n                            aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"chapters_list\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\"\r\n                                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Chapters\r\n                                </a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                    {chapters && chapters.filter(item => (\r\n                                        item.courseId == chapter.courseId\r\n                                    )).map(chapter => {\r\n                                        return <a key={chapter.id} className=\"dropdown-item\"\r\n                                                  href={\"/chapters/\" + courseId + \"/\" + chapter.id}>{chapter.title}</a>\r\n                                    })}\r\n                                </div>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <h2 className='chapter_title'>\r\n                            {chapter.title}\r\n                        </h2>\r\n                        <a className='back_to_main_course btn view_btn join_link mr-2' href={'/courses/' + chapter.courseId}>\r\n                            Back to Course Details\r\n                        </a>\r\n                        {\r\n                            chapter.Exams && chapter.Exams.length ? (\r\n                                <a className='back_to_main_course btn  join_link' href={'/exam_submission/' + chapter.Exams[0].id}> Take Exam </a>\r\n                            ) : ''\r\n                        }\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className='main_content'>\r\n                    <div className=\"single_page\">\r\n                        <Tabs className='chapter_file_wrapper'>\r\n                            <div className=\"course_media row\">\r\n                                <div className=\"video_player col-md-9\">\r\n                                    {\r\n                                        chapter.Files && chapter.Files.map(file => {\r\n                                            switch (file.type) {\r\n                                                case 'video':\r\n                                                    return <TabPanel><ReactPlayer url={file ? file.url : ''} controls={true}\r\n                                                                                  width={'100%'}\r\n                                                                                  height={'500px'}/></TabPanel>\r\n                                                case 'audio':\r\n                                                    return <TabPanel>\r\n                                                        <ReactPlayer url={file ? file.url : ''} controls={true}\r\n                                                                     width={'100%'}\r\n                                                                     height={'500px'}/>\r\n                                                    </TabPanel>\r\n                                                case 'document':\r\n                                                    return <TabPanel>\r\n                                                        <DocViewer pluginRenderers={DocViewerRenderers}\r\n                                                                   documents={[{uri: file.url}]}/>\r\n                                                    </TabPanel>\r\n                                                default:\r\n                                                    return <TabPanel><DocViewer pluginRenderers={DocViewerRenderers}\r\n                                                                                documents={[{uri: file.url}]}/>\r\n                                                    </TabPanel>\r\n                                            }\r\n                                        })}\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <TabList>\r\n                                        {\r\n                                            chapter.Files && chapter.Files.map(file => {\r\n                                                switch (file.type) {\r\n                                                    case 'video':\r\n                                                        return <Tab><i className=\"fas fa-play\"/> {file.title}</Tab>\r\n                                                    case 'audio':\r\n                                                        return <Tab><i className=\"fas fa-music\"/> {file.title}</Tab>\r\n                                                    case 'document':\r\n                                                        return <Tab><i className=\"fas fa-file\"/> {file.title}</Tab>\r\n                                                    default:\r\n                                                        return <Tab><i className=\"fas fa-file\"/> {file.title}</Tab>\r\n                                                }\r\n                                            })}\r\n                                    </TabList>\r\n                                </div>\r\n                            </div>\r\n                        </Tabs>\r\n                        <div className=\"col-12 p-3 description_single_course\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"media-heading\">Instructions</h3>\r\n                                <div className=\"single_card_elem\">\r\n                                    <div className=\"desc_block\">\r\n                                        <div dangerouslySetInnerHTML={{__html: chapter.instructions}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 p-3 description_single_course\">\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"media-heading\">Comments</h3>\r\n                                <div className=\"single_card_elem\">\r\n                                    <div className=\"comments\">\r\n                                        <div className=\"single_person comment_single\">\r\n                                            <div className=\"parent_comment\">\r\n                                                <div className=\"person_meta\">\r\n                                                    <div className=\"image\">\r\n                                                        <img\r\n                                                            src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                                            alt='ghgh'/>\r\n                                                    </div>\r\n                                                    <div className=\"name\">\r\n                                                        John Doe\r\n                                                        <span>\r\n                                                        2 days ago\r\n                                                    </span>\r\n                                                    </div>\r\n                                                    <div className=\"designation\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                                        <a href={'/profile_view/'}>Reply</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"single_person comment_single\">\r\n                                                <div className=\"person_meta\">\r\n                                                    <div className=\"image\">\r\n                                                        <img\r\n                                                            src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                                            alt='ghgh'/>\r\n                                                    </div>\r\n                                                    <div className=\"name\">\r\n                                                        John Doe\r\n                                                        <span>\r\n                                                        2 days ago\r\n                                                    </span>\r\n                                                    </div>\r\n                                                    <div className=\"designation\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                                        <a href={'/profile_view/'}>Reply</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"single_person comment_single\">\r\n                                            <div className=\"parent_comment\">\r\n                                                <div className=\"person_meta\">\r\n                                                    <div className=\"image\">\r\n                                                        <img\r\n                                                            src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                                            alt='ghgh'/>\r\n                                                    </div>\r\n                                                    <div className=\"name\">\r\n                                                        John Doe\r\n                                                        <span>\r\n                                                        2 days ago\r\n                                                    </span>\r\n                                                    </div>\r\n                                                    <div className=\"designation\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                                        <a href={'/profile_view/'}>Reply</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"single_person comment_single\">\r\n\r\n                                                <div className=\"person_meta\">\r\n                                                    <div className=\"image\">\r\n                                                        <img\r\n                                                            src='https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'\r\n                                                            alt='ghgh'/>\r\n                                                    </div>\r\n                                                    <div className=\"name\">\r\n                                                        John Doe\r\n                                                        <span>\r\n                                                        2 days ago\r\n                                                    </span>\r\n                                                    </div>\r\n                                                    <div className=\"designation\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                                        Adipisci architecto consequatur consequuntur delectus hic, iste\r\n                                                        labore modi molestias, natus nobis nostrum optio provident qui\r\n                                                        repellat repudiandae rerum saepe velit, voluptate.\r\n                                                        <a href={'/profile_view/'}>Reply</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : <NotFoundPage/>\r\n\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetChapterByIdAction: (chapterId) => dispatch(getChapterById(chapterId)),\r\n    dispatchFetchAllChaptersAction: () => dispatch(fetchAllChapters()),\r\n    dispatchFetchCurrentUserAction: (userId, onSuccess) => dispatch(getCurrentUser(userId, onSuccess)),\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    user: state.user,\r\n    chapters: state.chapters.chapters,\r\n    chapter: state.chapters.chapter,\r\n    TrainerCoursesList: state.users.TrainerCoursesList,\r\n    TraineeCoursesList: state.users.TraineeCoursesList\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChapterSinglePage)","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport {exam_submission, getExamById} from \"../redux/actions/examAction\";\r\nimport {getCurrentUser} from \"../redux/actions/authActions\";\r\nimport NotFoundPage from \"./notfoundpage\";\r\n\r\nconst ExamSubmission = ({loading, match, dispatchGetExamByIdAction, dispatchExamSubmissionAction, dispatchFetchCurrentUserAction, TraineeCoursesList, user}) => {\r\n\r\n    const [exam, setExam] = useState('');\r\n\r\n    const {examId} = match.params;\r\n    const {preview} = match.params;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatchGetExamByIdAction(examId, (response) => {\r\n            setExam(response.data);\r\n        });\r\n\r\n    }, []);\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchExamSubmissionAction(examId, data.answers, () => {\r\n            setTimeout(() => window.location.replace('/exam_submission/' + examId), 300)\r\n            toast.success('Your answers Submitted Successfully!');\r\n        })\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatchFetchCurrentUserAction(user.userId, (response) => {\r\n            console.log('Courses Loaded')\r\n        }, (message) => toast.error(message))\r\n    }, [dispatchFetchCurrentUserAction, user.userId]);\r\n\r\n    let courseId = exam && exam.courseId ? exam.courseId : null\r\n\r\n    return (preview && preview === 'preview') || (TraineeCoursesList && TraineeCoursesList.length && courseId && TraineeCoursesList.includes(courseId)) ? (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Submission Form</h2>\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    <p>\r\n                        <strong>\r\n                            {exam.title}\r\n                        </strong>\r\n                    </p>\r\n\r\n                    <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"mb-3 exam_form_wrapper\">\r\n                            {errors.answers && (<p className='alert alert-danger '>You are required to answer all the questions*</p>)}\r\n\r\n                            {exam.questions && exam.questions.map((question, qidx) => {\r\n                                return (\r\n                                    <div className=\"single_question\">\r\n                                        <span className='question'>\r\n                                            {question.question}\r\n                                        </span>\r\n                                        <input className=\"form-check-input\" type=\"hidden\"\r\n                                               name={'answers[' + question.number + '][number]'} value={question.number}\r\n                                               ref={register({required: true})}/>\r\n                                        {question.answers && question.answers.map((option, aidx) => {\r\n                                            return (\r\n                                                <>\r\n                                                    {\r\n                                                        question.answerType == 'radio' ? (\r\n                                                            <div className=\"form-check\">\r\n                                                                <input className=\"form-check-input\" type=\"radio\"\r\n                                                                       name={'answers[' + question.number + '][answer]'}\r\n                                                                       id={\"option-\" + aidx + \"-\" + qidx} value={option} ref={register({required: true})}/>\r\n                                                                <label className=\"form-check-label\"\r\n                                                                       htmlFor={\"option-\" + aidx + \"-\" + qidx}>\r\n                                                                    {option}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        ) : (\r\n                                                            <div className=\"form-check\">\r\n                                                                <input className=\"form-check-input\" type=\"checkbox\"\r\n                                                                       value={option} id={\"option-\" + aidx + \"-\" + qidx}\r\n                                                                       name={'answers[' + question.number + '][answer]'}\r\n                                                                       ref={register({required: true})} />\r\n                                                                <label className=\"form-check-label\"\r\n                                                                       htmlFor={\"option-\" + aidx + \"-\" + qidx}>\r\n                                                                    {option}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        {\r\n                            preview !== 'preview' ? (<button type=\"submit\" className=\"btn btn-primary\">Submit</button>) : ''\r\n                        }\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : <NotFoundPage/>\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetExamByIdAction: (examId, onSuccess) =>\r\n        dispatch(getExamById(examId, onSuccess)),\r\n    dispatchExamSubmissionAction: (examId, answers, onSuccess) =>\r\n        dispatch(exam_submission({examId, answers}, onSuccess)),\r\n    dispatchFetchCurrentUserAction: (userId, onSuccess) => dispatch(getCurrentUser(userId, onSuccess)),\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    TraineeCoursesList: state.users.TraineeCoursesList,\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamSubmission)\r\n\r\n\r\n\r\n","import * as constants from \"../constants\";\r\n\r\n\r\nexport const getExamById = (examId, onSuccess) => (\r\n    {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'GET',\r\n            url: `exams/${parseInt(examId)}`,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    });\r\n\r\n\r\nexport const getExamSubmissions = (examId, onSuccess) => {\r\n    const data = {\r\n        examId: examId\r\n    }\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `submissions/filtered`,\r\n            data,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};\r\n\r\nexport const exam_submission = (data, onSuccess) => {\r\n\r\n    data.answers = data.answers.length && data.answers.map(elm => {\r\n        return {\r\n            'number': parseInt(elm.number),\r\n            'answer': elm.answer\r\n        }\r\n    })\r\n    return {\r\n        type: constants.API,\r\n        payload: {\r\n            method: 'POST',\r\n            url: `submissions`,\r\n            data,\r\n            postProcessSuccess: onSuccess\r\n        }\r\n    }\r\n};","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getUserById} from '../redux/actions/authActions';\r\nimport Courses from \"../components/courses.component\";\r\nimport NotFoundPage from \"./notfoundpage\";\r\n\r\nconst MyAccountPage = ({loading, single_user, match, dispatchGetUserByIdAction}) => {\r\n\r\n    const {userId} = match.params;\r\n\r\n    useEffect(() => {\r\n        dispatchGetUserByIdAction(userId);\r\n    }, []);\r\n\r\n    return (\r\n        single_user ? (\r\n            <div className='right_wrapper'>\r\n                <div className='main_content'>\r\n                    <div className=\"single_page\">\r\n                        <div className=\"page_header\">\r\n                            <center>\r\n                                <img\r\n                                    src={single_user.pic ? single_user.pic : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'}\r\n                                    className=\"org_logo\"/>\r\n                                <h3 className=\"media-heading\">{single_user.name}</h3>\r\n                                {\r\n                                    <a target='_blank' href={single_user.cv} className='btn btn-primary'> Cv\r\n                                        Of {single_user.name}</a>\r\n                                }\r\n                            </center>\r\n                        </div>\r\n                        <div className=\"course_media row\">\r\n\r\n                        </div>\r\n                        <div className=\"page_body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4 p-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"single_card_elem\">\r\n                                            <div className=\"person_meta\">\r\n                                                <div className=\"name\">\r\n                                                    {single_user.phone}\r\n                                                </div>\r\n                                                <div className=\"name\">\r\n                                                    {single_user.email}\r\n                                                </div>\r\n                                                <div className=\"name\">\r\n                                                    {single_user.address}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-8 p-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div dangerouslySetInnerHTML={{__html: single_user.bio}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {\r\n                            single_user.Roles[0].name === 'Trainer' && single_user.TrainerCourses && single_user.TrainerCourses > 0 ? (\r\n                                <div className=\"page_cards\">\r\n                                    <div className='orgs_list'>\r\n                                        <div className=\"card-group row \">\r\n                                            <div className=\"page_cards mt-5\">\r\n                                                <h4 className='page_title'>Courses Provided By This User</h4>\r\n                                                {\r\n                                                    single_user.TrainerCourses && single_user.TrainerCourses > 0 ? (\r\n                                                        <Courses courses={single_user.TrainerCourses}\r\n                                                                 user={single_user}/>) : ''\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>) : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : (<NotFoundPage/>)\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetUserByIdAction: (userId) =>\r\n        dispatch(getUserById(userId))\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    single_user: state.users.single_user\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountPage)\r\n\r\n","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nfunction ViewSubmissionModal({selectedSubmission}) {\r\n    return selectedSubmission ? (\r\n        <>\r\n            <div className=\"modal\" id=\"viewSubmissionModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                <div role=\"document\" className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\r\n                                <i className=\"fas fa-times\"/> Close\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body submission_details\">\r\n                            <p>\r\n                                <strong>Exam Title:</strong> {selectedSubmission.Exam.title}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Submitter:</strong> {selectedSubmission.User.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Score:</strong> {selectedSubmission.score}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Answers:</strong>\r\n                            </p>\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Question Number</th>\r\n                                    <th>Question</th>\r\n                                    <th>Given Answer(s)</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    selectedSubmission.answers.map(function (submission) {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{submission.number}</td>\r\n                                                    <td>{submission.question}</td>\r\n                                                    <td>{submission.answer.map(function (answer) {\r\n                                                        return <p>\r\n                                                            {answer}\r\n                                                        </p>\r\n                                                    })}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer text-right d-block\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">\r\n                                <i className=\"fas fa-times\"/> Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    ) : 'Waiting To Load'\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(ViewSubmissionModal)","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {  getExamSubmissions} from \"../redux/actions/examAction\";\r\nimport {Link} from \"react-router-dom\";\r\nimport NotFoundPage from \"./notfoundpage\";\r\nimport ViewSubmissionModal from \"../components/viewsubmission.component\";\r\n\r\nconst ExamAllSubmissions = ({loading, match, dispatchGetExamSubmissionsAction}) => {\r\n\r\n    const [submissions, setSubmission] = useState();\r\n\r\n    const {examId} = match.params;\r\n\r\n    let [selectedSubmission, setSelectedSubmission] = useState();\r\n\r\n    useEffect(() => {\r\n        dispatchGetExamSubmissionsAction(examId, (response) => {\r\n            setSubmission(response.data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>All Submissions For {examId}</h2>\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    {\r\n                        submissions && submissions.length ? (\r\n                            <>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Exam Title</th>\r\n                                        <th>Submitter Name</th>\r\n                                        <th>Score</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                        submissions.map(function (submission) {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{submission.Exam.title}</td>\r\n                                                    <td>{submission.User.name}</td>\r\n                                                    <td><span className='badge badge-info'>{submission.score}</span></td>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex\">\r\n                                                            <Link to={`#`} target='_blank'\r\n                                                                  className='btn btn-primary tbl_btn ml-2 mr-2'\r\n                                                                  onClick={async function (e) {\r\n                                                                      e.preventDefault();\r\n                                                                      await setSelectedSubmission(submission);\r\n                                                                      window.$('#viewSubmissionModal').modal({\r\n                                                                          backdrop: 'static',\r\n                                                                          keyboard: false,\r\n                                                                          show: true\r\n                                                                      })\r\n                                                                  }}>View Details</Link>\r\n                                                            <Link\r\n                                                                to={`/exam_submission/${submission.examId}/preview`}\r\n                                                                target='_blank' className='btn btn-dark tbl_btn'>Preview Exam</Link>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            </>\r\n                        ) : <NotFoundPage/>\r\n                    }\r\n                    {selectedSubmission ? (<ViewSubmissionModal selectedSubmission={selectedSubmission}  />) : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchGetExamSubmissionsAction: (examId, onSuccess) =>\r\n        dispatch(getExamSubmissions(examId, onSuccess))\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamAllSubmissions)\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction SearchForm(props) {\r\n    return <div className=\"col-12 p-3\">\r\n        <div className=\"filter_section\">\r\n            <form>\r\n                <input type=\"search\" name='search' id='search' placeholder='Enter Keyword To Search...'\r\n                       className='form-control' onChange={props.onChange}/>\r\n            </form>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default SearchForm","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getCurrentUser} from \"../redux/actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport NotFound from \"../components/notfound.component\";\r\nimport SearchForm from \"../components/searchform\";\r\nimport {deleteCourseById} from \"../redux/actions/courseAction\";\r\n\r\nconst MyCoursesPage = ({dispatchFetchCurrentUserAction, current_user, user, dispatchDeleteCourseAction}) => {\r\n\r\n    const [selectedCourse, setSelectedCourse] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatchFetchCurrentUserAction(user.userId, (response) => {\r\n            console.log('Courses Loaded')\r\n        }, (message) => toast.error(message))\r\n    }, [dispatchFetchCurrentUserAction, user.userId]);\r\n\r\n    const handleOnDelete = () => {\r\n        dispatchDeleteCourseAction(selectedCourse, () => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            setTimeout(() => window.location.replace('/mycourses/'+user.userId), 300)\r\n            toast.success('Course deleted Successfully!');\r\n        }, (message) => {\r\n            window.$('#confirmationModal').modal('hide');\r\n            toast.error(`Error: ${message}`);\r\n        });\r\n    };\r\n\r\n    const showConfirmationModal = (event, courseId) => {\r\n        event.preventDefault();\r\n        setSelectedCourse(courseId);\r\n        window.$('#confirmationModal').modal('show');\r\n    };\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    let filteredData = []\r\n    if (user.role === 'Trainee') {\r\n        filteredData = current_user && current_user.TraineeCourses.length && current_user.TraineeCourses.filter((val) => {\r\n            if (searchTerm === '') {\r\n                return val\r\n            } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return val\r\n            }\r\n        })\r\n    } else {\r\n        filteredData = current_user && current_user.TrainerCourses.length && current_user.TrainerCourses.filter((val) => {\r\n            if (searchTerm === '') {\r\n                return val\r\n            } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return val\r\n            }\r\n        })\r\n    }\r\n\r\n    return current_user ? (\r\n        <div className='right_wrapper'>\r\n            <div>\r\n                {\r\n                    user.role === 'Trainee' ? (\r\n                        <div>\r\n                            <h2 className='page_title'>My Courses</h2>\r\n                            <SearchForm onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                            }}/>\r\n                            <div className='main_content row'>\r\n                                {\r\n                                    filteredData.length > 0 ? (\r\n                                            filteredData.map(item => (\r\n                                                <div className=\"col-4 p-3\" key={item.id}>\r\n                                                    <div className=\"card_img\">\r\n                                                        <img className=\"card-img-top\"\r\n                                                             src={item.banner ? item.banner : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'}\r\n                                                             alt={item.title}/>\r\n                                                    </div>\r\n                                                    <div className=\"card-body\">\r\n                                                        <h5 className=\"card-title\">{item.title}</h5>\r\n                                                        <p className=\"card-text\">{item.shortDesc}</p>\r\n                                                    </div>\r\n                                                    <div className=\"card-footer pub_time\">\r\n                                                        <small className=\"text-muted\">Published <Moment fromNow\r\n                                                                                                        ago>{item.createdAt}</Moment> ago</small>\r\n                                                    </div>\r\n                                                    <div className=\"card-footer btns\">\r\n                                                        <Link to={`/course_builder/edit/${item.id}`}\r\n                                                              className='join_link '>Edit</Link>\r\n                                                        <Link to={`/trainee_invite/${item.id}`}\r\n                                                              className='join_link'>Invite</Link>\r\n                                                        <Link to={`#`}\r\n                                                              className='join_link '\r\n                                                              onClick={(e) => showConfirmationModal(e, item.id)}>Delete</Link>\r\n                                                        <Link to={`/courses/${item.id}`}\r\n                                                              className='join_link view_btn'>View</Link>\r\n                                                    </div>\r\n                                                    <Modal handleOnDelete={handleOnDelete}/>\r\n                                                </div>\r\n                                            ))\r\n                                        ) :\r\n                                        (\r\n                                            <NotFound/>\r\n                                        )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ) : ''\r\n                }\r\n                {\r\n                    user.role === 'Trainer' || user.role === 'Organization Admin' ? (\r\n                        <div>\r\n                            <h2 className='page_title'>My Courses</h2>\r\n                            <SearchForm onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                            }}/>\r\n                            <div className='main_content row'>\r\n                                {\r\n                                    filteredData.length > 0 ? (\r\n                                            filteredData.map(item => (\r\n                                                <div className=\"col-4 p-3\" key={item.id}>\r\n                                                    <div className=\"card_img\">\r\n                                                        <img className=\"card-img-top\"\r\n                                                             src={item.banner ? item.banner : 'https://stitch-api-storage-prod.s3.ap-south-1.amazonaws.com/1616589205883.png'}\r\n                                                             alt={item.title}/>\r\n                                                    </div>\r\n                                                    <div className=\"card-body\">\r\n                                                        <h5 className=\"card-title\">{item.title}</h5>\r\n                                                        <p className=\"card-text\">{item.shortDesc}</p>\r\n                                                    </div>\r\n                                                    <div className=\"card-footer pub_time\">\r\n                                                        <small className=\"text-muted\">Published <Moment fromNow\r\n                                                                                                        ago>{item.createdAt}</Moment> ago</small>\r\n                                                    </div>\r\n                                                    <div className=\"card-footer btns\">\r\n                                                        <Link to={`/course_builder/edit/${item.id}`}\r\n                                                              className='join_link '>Edit</Link>\r\n                                                        <Link to={`/trainee_invite/${item.id}`}\r\n                                                              className='join_link'>Invite</Link>\r\n                                                        <Link to={`#`}\r\n                                                              className='join_link '\r\n                                                              onClick={(e) => showConfirmationModal(e, item.id)}>Delete</Link>\r\n                                                        <Link to={`/courses/${item.id}`}\r\n                                                              className='join_link view_btn'>View</Link>\r\n                                                    </div>\r\n                                                    <Modal handleOnDelete={handleOnDelete}/>\r\n                                                </div>\r\n                                            ))\r\n                                        ) :\r\n                                        (\r\n                                            <NotFound/>\r\n                                        )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ) : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    ) : 'Loading'\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    current_user: state.users.current_user,\r\n    user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchCurrentUserAction: (userId, onSuccess) => dispatch(getCurrentUser(userId, onSuccess)),\r\n    dispatchDeleteCourseAction: (courseId, onSuccess, onError) => dispatch(deleteCourseById(courseId, onSuccess, onError)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCoursesPage)\r\n\r\nconst Modal = ({handleOnDelete}) => (\r\n    <div className=\"modal\" id=\"confirmationModal\" tabIndex=\"-1\" role=\"dialog\">\r\n        <div role=\"document\" className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Confirmation</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Are you sure, you want to delete this Course ?</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" className=\"btn btn-secondary\">\r\n                        No\r\n                    </button>\r\n                    <button type=\"button\" data-dismiss=\"modal\" onClick={handleOnDelete} className=\"btn btn-primary\">\r\n                        Yes\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getCurrentUser} from \"../redux/actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport NotFound from \"../components/notfound.component\";\r\nimport SearchForm from \"../components/searchform\";\r\n\r\nconst MyOrgsPage = ({dispatchFetchCurrentUserAction, current_user, user}) => {\r\n\r\n    useEffect(() => {\r\n        dispatchFetchCurrentUserAction(user.userId, (response) => {\r\n            console.log('Courses Loaded')\r\n        }, (message) => toast.error(message))\r\n    }, [dispatchFetchCurrentUserAction, user.userId]);\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    let filteredData = []\r\n\r\n    if (user.role === 'Trainer' || user.role === 'Organization Admin') {\r\n        filteredData = current_user && current_user.Orgs.length && current_user.Orgs.filter((val) => {\r\n            if (searchTerm === '') {\r\n                return val\r\n            } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return val\r\n            }\r\n        })\r\n    } else {\r\n        filteredData = []\r\n    }\r\n\r\n    return current_user ? (\r\n        <div className='right_wrapper'>\r\n            <div>\r\n                <div>\r\n                    <h2 className='page_title'>My Organizations</h2>\r\n                    <SearchForm onChange={(event) => {\r\n                        setSearchTerm(event.target.value)\r\n                    }}/>\r\n                    <div className='main_content'>\r\n                        {\r\n                            filteredData.length > 0 ? (\r\n                                    filteredData.map(item => (\r\n                                        <div className=\"col-4 p-3\" key={item.id}>\r\n                                            <div className=\"card_img org_logo\">\r\n                                                <img className=\"card-img-top\" src={item.logo}\r\n                                                     alt={item.name}/>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <h5 className=\"card-title\">{item.name}</h5>\r\n                                                <p className=\"card-text\">{item.description}</p>\r\n                                            </div>\r\n                                            <div className=\"card-footer pub_time\">\r\n                                                <small className=\"text-muted\">Created <Moment fromNow\r\n                                                                                              ago>{item.createdAt}</Moment> ago</small>\r\n                                            </div>\r\n                                            <div className=\"card-footer btns\">\r\n                                                {\r\n                                                    user.role === 'Organization Admin' ? (\r\n                                                        <Link to={`/edit_org/${item.id}`}\r\n                                                              className='join_link '>Edit</Link>) : ''\r\n                                                }\r\n                                                <Link to={`/course_builder/${item.id}`} className='join_link'>Create\r\n                                                    Course</Link>\r\n                                                {\r\n                                                    user.role === 'Organization Admin' ? (\r\n                                                        <Link to={`/trainer_invite/${item.id}`}\r\n                                                              className='join_link invite_btn'>Invite Trainer</Link>) : ''\r\n                                                }\r\n                                                <Link to={`/orgs/${item.id}`} className='join_link view_btn'>View</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))) :\r\n                                (\r\n                                    <NotFound/>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : 'Loading'\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.loading,\r\n    current_user: state.users.current_user,\r\n    user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchCurrentUserAction: (userId, onSuccess) => dispatch(getCurrentUser(userId, onSuccess))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyOrgsPage)","import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport {fetchAllOrgAdmins} from \"../redux/actions/userAction\";\r\nimport {getOrgById, updateOrg} from \"../redux/actions/orgAction\";\r\nimport NotFoundPage from \"./notfoundpage\";\r\n\r\nconst EditOrgPage = ({match, dispatchFetchAllOrgAdminsAction, dispatchGetOrgByIdAction, dispatchUpdateOrgAction, org}) => {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [users, setUsers] = useState();\r\n    const [key_people, setKeyPeople] = useState( );\r\n    const {orgId} = match.params;\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n\r\n    useEffect(() => {\r\n        if (!options.length > 0) {\r\n            dispatchFetchAllOrgAdminsAction((res) => {\r\n                setUsers(res.data)\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatchGetOrgByIdAction(orgId, (res) => {\r\n           setKeyPeople(res.data.key_people)\r\n            }, (message) => toast.error(message)\r\n        );\r\n    }, [orgId, dispatchGetOrgByIdAction]);\r\n\r\n    if (users && users.length > 0) {\r\n        const user_values = users.map(item => {\r\n            return {\r\n                label: item.name,\r\n                value: item.id\r\n            };\r\n        })\r\n        if (!options.length > 0) {\r\n            setOptions(user_values);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        dispatchUpdateOrgAction(orgId, data.name, data.logo, data.shortDesc, data.description, data.address, key_people, (response) => {\r\n            if (response) {\r\n                setTimeout(() => window.location.replace('/orgs'), 300)\r\n            }\r\n            toast.success('Organization Created Successfully!');\r\n        }, (message) => toast.error(message))\r\n        return false;\r\n    }\r\n\r\n    function handleAdd() {\r\n        const values = [...Object.values(key_people)];\r\n        values.push({\r\n            name: null,\r\n            designation: null\r\n        });\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...Object.values(key_people)];\r\n        values.splice(i, 1);\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    function handleChangeKPName(i, event) {\r\n        const values = [...Object.values(key_people)];\r\n        values[i].name = event.target.value;\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    function handleChangeKPDesignation(i, event) {\r\n        const values = [...Object.values(key_people)];\r\n        values[i].designation = event.target.value;\r\n        setKeyPeople(values);\r\n    }\r\n\r\n    return org ? (\r\n        <div className='right_wrapper'>\r\n            <h2 className='page_title'>Edit {org.name}</h2>\r\n\r\n            <div className='main_content'>\r\n                <div className=\"request_form\">\r\n                    {/*<p className='some_info alert alert-info'>Select and existing Trainer from the select field or fill*/}\r\n                    {/*    the name, email and phone no to invite non existing user. Trainer Will Receive An OTP. After*/}\r\n                    {/*    Validating the OTP they will join this organization.</p>*/}\r\n\r\n\r\n                    {\r\n                        <form noValidate className=\"p-4\" onSubmit={handleSubmit(onSubmit)}\r\n                              encType='multipart/form-data'>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                                <input type=\"text\" className='form-control' name=\"name\"\r\n                                       placeholder='Organization name'\r\n                                       ref={register({required: true})} defaultValue={org.name}/>\r\n                                {errors.name && (<p className='error'>Name is required*</p>)}\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"logo\" className=\"form-label\">Logo</label>\r\n                                <input className=\"form-control\" type=\"file\" id=\"logo\" name='logo' ref={register}/>\r\n                                <div className=\"preview\">\r\n                                    {\r\n                                        org.logo ? (<div className=\"preview\"><img src={org.logo}/></div>) : ''\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"shortDesc\" className=\"form-label\">Short Description</label>\r\n                                <textarea name=\"shortDesc\" id=\"shortDesc\" className='form-control'\r\n                                          placeholder='Short Description'\r\n                                          ref={register({required: true})} defaultValue={org.shortDesc}/>\r\n                                {errors.shortDesc && (<p className='error'>Short Desc is required*</p>)}\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                                <textarea name=\"description\" id=\"description\" className='form-control'\r\n                                          placeholder='Description' ref={register({required: true})}\r\n                                          defaultValue={org.description}/>\r\n                                {errors.description && (<p className='error'>Description is required*</p>)}\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                                <textarea name=\"address\" id=\"address\" className='form-control'\r\n                                          placeholder='Organization Address'\r\n                                          ref={register({required: true})} defaultValue={org.address}/>\r\n                                {errors.address && (<p className='error'>Address is required*</p>)}\r\n                            </div>\r\n                            {\r\n                                key_people && Object.values(key_people).length > 0 ? Object.values(key_people).map((field, idx) => {\r\n                                        return (\r\n                                            <div key={`${field}-${idx}`} className='single_field_wrap'>\r\n\r\n                                                <div className=\"form-group question_heading text-center\">\r\n                                                    <strong>\r\n                                                        <h6>Key Person #{idx + 1}</h6>\r\n                                                    </strong>\r\n                                                </div>\r\n                                                {\r\n                                                    idx !== 0 ? (<div className=\"text-right\">\r\n                                                        <button type=\"button\" onClick={() => handleRemove(idx)}\r\n                                                                className='btn btn-danger'>\r\n                                                            <i className=\"fas fa-times\"/>\r\n                                                        </button>\r\n                                                    </div>) : ''\r\n                                                }\r\n                                                <div className=\"mb-3\">\r\n                                                    <label className=\"form-label\">Key Person's Name</label>\r\n                                                    <input type=\"text\" className='form-control' value={field.name || \"\"}\r\n                                                           onChange={e => handleChangeKPName(idx, e)}\r\n                                                           placeholder='Key Person Name'/>\r\n                                                </div>\r\n                                                <div className=\"mb-3\">\r\n                                                    <label className=\"form-label\">Key Person's Designation</label>\r\n                                                    <input type=\"text\" className='form-control'\r\n                                                           value={field.designation || \"\"}\r\n                                                           onChange={e => handleChangeKPDesignation(idx, e)}\r\n                                                           placeholder='Key Person Designation'/>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                ) : ''\r\n                            }\r\n                            <div className=\"mt-2 mb-5 text-right\">\r\n                                <button type=\"button\" onClick={() => handleAdd()} className='btn btn-primary'>\r\n                                    <i className=\"fas fa-plus\"/> Add Another Key Person\r\n                                </button>\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                        </form>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : <NotFoundPage/>\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatchFetchAllOrgAdminsAction: (onSuccess) => dispatch(fetchAllOrgAdmins(onSuccess)),\r\n    dispatchUpdateOrgAction: (orgId, name, logo, shortDesc, description, address, key_people, onSuccess, onError) =>\r\n        dispatch(updateOrg(orgId, {name, logo, shortDesc, description, address, key_people}, onSuccess, onError)),\r\n    dispatchGetOrgByIdAction: (orgId, onSuccess, onError) =>\r\n        dispatch(getOrgById(orgId, onSuccess, onError))\r\n})\r\n\r\nconst mapStateToProps = (state) => (\r\n    console.log(state),\r\n    {\r\n    loading: state.loading,\r\n    org: state.orgs.org\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOrgPage)\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport TrainerRegistrationPage from \"./pages/trainerregistrationpage.component\";\r\nimport OrgsPage from \"./pages/orgspage.component\";\r\nimport DashboardPage from \"./pages/dashboard.component\";\r\nimport ResetPage from \"./pages/resetpage.component\";\r\nimport EnterResetPage from \"./pages/enterresetemailpage.component\";\r\nimport OtpPage from \"./pages/otppage.component\";\r\nimport RegisterPage from \"./pages/registerpage.component\";\r\nimport LoginPage from \"./pages/loginpage.component\";\r\nimport OrgSinglePage from \"./pages/orgsinglepage.component\";\r\nimport RequestsPage from \"./pages/requestspage.component\";\r\nimport ProfilePage from \"./pages/profilepage.component\";\r\nimport CoursePage from \"./pages/coursepage.component\";\r\nimport TraineeRegistrationPage from \"./pages/traineeregistrationpage.component\";\r\nimport CourseSinglePage from \"./pages/coursesinglepage.component\";\r\nimport CreateTraineeInvitePage from \"./pages/createtraineeinvitepage.component\";\r\nimport CreateTrainerInvitePage from \"./pages/createtrainerinvitepage.component\";\r\nimport CreateOrgPage from \"./pages/createorgpage.component\";\r\nimport CreateCoursePage from \"./pages/course/create_coursepage.component\";\r\nimport CreateCategoryPage from \"./pages/createcategory.component\";\r\nimport UpdateCoursePage from \"./pages/course/update/update_coursepage.component\";\r\nimport AssignCategoryPage from \"./pages/course/update/assign_categorypage.component\";\r\nimport CategoriesPage from \"./pages/categoriespage\";\r\nimport ProfileViewPage from \"./pages/profileviewpage\";\r\nimport ChapterSinglePage from \"./pages/singlechapterpage\";\r\nimport ExamSubmission from \"./pages/exam_submissionpage\";\r\nimport MyAccountPage from \"./pages/myaccountpage\";\r\nimport ExamAllSubmissions from \"./pages/submissionspage\";\r\nimport MyCoursesPage from \"./pages/mycoursespage.component\";\r\nimport MyOrgsPage from \"./pages/myorgspage.component\";\r\nimport EditOrgPage from \"./pages/editorgpage.component\";\r\n\r\n\r\nconst Routes = ({user }) => {\r\n\r\n    return <>\r\n        {\r\n            !user ? (\r\n                <Switch>\r\n                    <Route exact path='/login' component={LoginPage}/>\r\n                    <Route exact path='/register' component={RegisterPage}/>\r\n                    <Route exact path='/otp' component={OtpPage}/>\r\n                    <Route exact path='/reset' component={ResetPage}/>\r\n                    <Route exact path='/enteremail' component={EnterResetPage}/>\r\n                    <Redirect to='/login'/>\r\n                </Switch>\r\n            ) : (\r\n                <Switch>\r\n\r\n                    <Route exact path='/' component={DashboardPage}/>\r\n\r\n                    <Route exact path='/orgs'\r\n                           component={OrgsPage}/>\r\n\r\n                    <Route exact path={'/myorgs/' + user.userId} component={MyOrgsPage}/>\r\n\r\n                    <Route exact path='/courses' component={CoursePage}/>\r\n\r\n                    <Route exact path={'/mycourses/' + user.userId} component={MyCoursesPage}/>\r\n\r\n                    <Route exact path='/orgs/:orgId' component={OrgSinglePage}  />\r\n\r\n                    <Route exact path='/create_org/' component={CreateOrgPage}/>\r\n                    <Route exact path='/edit_org/:orgId' component={EditOrgPage}/>\r\n\r\n                    <Route exact path='/courses/:courseId' component={CourseSinglePage} />\r\n\r\n                    <Route exact path='/requests' component={RequestsPage}/>\r\n\r\n                    <Route exact path='/trainer_registration/:orgId' component={TrainerRegistrationPage}/>\r\n\r\n                    <Route exact path='/trainee_registration/:courseId' component={TraineeRegistrationPage}/>\r\n\r\n                    <Route exact path={'/chapters/:courseId/:chapterId'} component={ChapterSinglePage}/>\r\n\r\n                    <Route exact path={'/course_builder/edit/:courseId/:activeTab?'} component={UpdateCoursePage}/>\r\n\r\n                    <Route exact path={'/trainee_invite/:courseId'} component={CreateTraineeInvitePage}/>\r\n\r\n                    <Route exact path={'/assign_category/:courseId'} component={AssignCategoryPage}/>\r\n\r\n                    <Route exact path='/trainer_invite/:orgId' component={CreateTrainerInvitePage}/>\r\n\r\n                    <Route exact path='/course_builder/:orgId' component={CreateCoursePage}/>\r\n\r\n                    <Route exact path='/exam_submission/:examId/:preview?' component={ExamSubmission}/>\r\n\r\n                    <Route exact path={'/profilepage/' + user.userId} component={ProfilePage}/>\r\n\r\n                    <Route exact path='/otp' component={OtpPage}/>\r\n\r\n                    <Route exact path='/reset' component={ResetPage}/>\r\n\r\n                    <Route exact path='/enteremail' component={EnterResetPage}/>\r\n\r\n                    <Route exact path='/create_category' component={CreateCategoryPage}/>\r\n\r\n                    <Route exact path='/categories' component={CategoriesPage}/>\r\n\r\n                    <Route exact path='/submissions/:examId' component={ExamAllSubmissions}/>\r\n\r\n                    <Route exact path='/my_account/:activeTab?' component={MyAccountPage}/>\r\n\r\n                    <Route exact path='/profile_view/:userId' component={ProfileViewPage}/>\r\n\r\n                    <Redirect to='/'/>\r\n                </Switch>\r\n            )\r\n\r\n        }\r\n    </>\r\n}\r\n\r\n\r\nexport default Routes;","import React, {useEffect} from 'react'\nimport Header from \"./components/header.component\";\nimport Footer from \"./components/footer.component\";\nimport Spinner from \"./components/spinner/spinner.component\";\nimport {connect} from \"react-redux\";\nimport {ToastContainer, Slide, toast} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport {getCurrentUser, logOut} from \"./redux/actions/authActions\";\nimport Sidebar from \"./components/sidebar.component\";\nimport Routes from \"./Routes\";\n\nconst App = ({current_user, user, dispatchLogoutAction, dispatchGetSingleUserAction }) => {\n    var local_user = JSON.parse(localStorage.getItem(\"CURRENT_USER\"));\n    let userId = local_user ? local_user.userId : null\n    useEffect(() => {\n        dispatchGetSingleUserAction(userId, (res) => {\n            console.log(res)\n        });\n    }, [dispatchGetSingleUserAction, userId]);\n\n    return (\n        <div className={(!local_user ? 'not_logged_in_wrapper' : '')}>\n            <Sidebar user={user} dispatchLogoutAction={dispatchLogoutAction}/>\n            <div className='right_content'>\n                <ToastContainer position=\"top-right\" autoClose={2000} transition={Slide}/>\n                <Spinner/>\n                <Header/>\n                <Routes user={local_user}  />\n                <Footer/>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchLogoutAction: () => {\n        dispatch(logOut());\n        toast.success('You are logged out!');\n    },\n    dispatchGetSingleUserAction: (user_id, onSuccess) => dispatch(getCurrentUser(user_id, onSuccess))\n})\n\nconst mapStateToProps = (state) => (\n    {\n        current_user: state.users.current_user,\n        user: state.user\n    });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import * as constants from '../constants'\r\n\r\nconst defaultState = {\r\n    userId: null,\r\n    phone: null,\r\n    email: null,\r\n    bio: null,\r\n    address: null,\r\n    name: null,\r\n    pic: null,\r\n    cv: null,\r\n    token: null,\r\n    role: null,\r\n    isloggedin: false,\r\n    verified_at: null,\r\n    blocked: false\r\n}\r\n\r\nconst userInfo = localStorage.getItem('CURRENT_USER')\r\nconst INITIAL_STATE = userInfo ? JSON.parse(userInfo) : defaultState\r\n\r\nexport default function authReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case constants.SET_USER_INFO:\r\n            return {\r\n                ...state.payload\r\n            }\r\n        case constants.UPDATE_USER_INFO:\r\n            return { state, ...action.payload }\r\n\r\n        case constants.RESET_USER_INFO:\r\n            return {\r\n                ...defaultState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport user from \"./authReducers\";\r\nimport orgs from \"./orgReducer\";\r\nimport courses from \"./courseReducer\";\r\nimport users from \"./userReducer\";\r\nimport requests from \"./requestReducer\";\r\nimport categories from \"./categoryReducer\";\r\nimport chapters from \"./chapterReducer\";\r\nimport loading from \"./loadingReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    orgs,\r\n    loading,\r\n    requests,\r\n    courses,\r\n    users,\r\n    categories,\r\n    chapters,\r\n})\r\n\r\nexport default rootReducer","import * as constants from '../constants'\r\n\r\nexport default function orgReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case constants.SET_ALL_ORGS:\r\n            return {all: action.payload};\r\n        case constants.SET_SINGLE_ORG:\r\n            return {...state, org: action.payload };\r\n        case constants.ADD_ORG:\r\n            return state.concat(action.payload);\r\n        case constants.REMOVE_ORG:\r\n            return state.filter(item => item._id !== action.payload);\r\n        case constants.UPDATE_ORG:\r\n            return state.map(item => {\r\n                if (item.__id === action.payload.orgId)\r\n                    return {...item, ...action.payload.data}\r\n                else\r\n                    return item\r\n            });\r\n        case constants.RESET_USER_INFO:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as constants from '../constants'\r\n\r\nexport default function loadingReducer(state = false, action) {\r\n    switch (action.type) {\r\n        case constants.TOGGLE_LOADER:\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as constants from '../constants'\r\n\r\nexport default function requestReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case constants.SET_ALL_REQUESTS:\r\n            return action.payload;\r\n        case constants.RESET_USER_INFO:\r\n            return [];\r\n        case constants.REMOVE_REQUEST:\r\n            return action.payload.data.data === 'sentByUser' ? (\r\n                {\r\n                    'sentByUser': state.sentByUser.filter(function (emp) {\r\n                        return emp.id != action.payload.reqId;\r\n                    }),\r\n                    'sentToUser': state.sentToUser\r\n                }\r\n            ) : (\r\n                {\r\n                    'sentToUser': state.sentToUser.filter(function (emp) {\r\n                        return emp.id != action.payload.reqId;\r\n                    }),\r\n                    'sentByUser': state.sentByUser\r\n                }\r\n            )\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as constants from '../constants'\r\n\r\nexport default function courseReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case constants.SET_ALL_COURSES:\r\n            return {all: action.payload};\r\n        case constants.SET_SINGLE_COURSE:\r\n            return {...state, course: action.payload };\r\n        case constants.ADD_COURSE:\r\n            return state.concat(action.payload);\r\n        case constants.UPDATE_COURSE:\r\n            return state.map(item => {\r\n                if (item.id === action.payload.courseId)\r\n                    return { ...action.payload.data };\r\n                else\r\n                    return item;\r\n            });\r\n        case constants.RESET_USER_INFO:\r\n            return [];\r\n        case constants.REMOVE_COURSE:\r\n            return state.filter(item => item.id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as constants from '../constants'\r\n\r\nexport default function userReducer(state = [], action) {\r\n    let OrgsList = []\r\n    let TraineeCoursesList = []\r\n    let TrainerCoursesList = []\r\n    switch (action.type) {\r\n        case constants.SET_ALL_USERS:\r\n            return {...state, users: action.payload};\r\n        // case constants.SET_SINGLE_USER:\r\n        //     return {...state, single_user: action.payload};\r\n        case constants.SET_SINGLE_USER:\r\n            return {...state.users, single_user: action.payload.data};\r\n        case constants.SET_CURRENT_USER:\r\n            if (action.payload.data) {\r\n                OrgsList = action.payload.data.Orgs.map(item => {\r\n                    return item.id;\r\n                })\r\n                TraineeCoursesList = action.payload.data.TraineeCourses.map(item => {\r\n                    return item.id;\r\n                })\r\n                TrainerCoursesList = action.payload.data.TrainerCourses.map(item => {\r\n                    return item.id;\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                current_user: action.payload.data,\r\n                OrgsList: OrgsList,\r\n                TraineeCoursesList: TraineeCoursesList,\r\n                TrainerCoursesList: TrainerCoursesList\r\n            };\r\n        case constants.RESET_USER_INFO:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as constants from '../constants'\r\n\r\nexport default function categoryReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case constants.SET_ALL_CATEGORIES:\r\n            return action.payload;\r\n        case constants.ADD_CATEGORY:\r\n            return state.concat(action.payload);\r\n        case constants.REMOVE_CATEGORY:\r\n            return state.filter(item => item._id !== action.payload);\r\n        case constants.UPDATE_CATEGORY:\r\n            return state.map(item => {\r\n                if (item.__id === action.payload.orgId)\r\n                    return {...item, ...action.payload.data}\r\n                else\r\n                    return item\r\n            });\r\n        case constants.RESET_USER_INFO:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as constants from '../constants'\r\n\r\nexport default function chapterReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case constants.SET_ALL_CHAPTERS:\r\n            return {...state, chapters: action.payload};\r\n        case constants.SET_SINGLE_CHAPTER:\r\n            return {...state, chapter: action.payload};\r\n        case constants.UPDATE_CHAPTER:\r\n            return state.length ? state.map(item => {\r\n                if (item.id === action.payload.chapterId)\r\n                    return { ...action.payload.data };\r\n                else\r\n                    return item;\r\n            }) : action.payload.data;\r\n        case constants.RESET_USER_INFO:\r\n            return state;\r\n        case constants.REMOVE_COURSE:\r\n            return state.filter(item => item.id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as axios from 'axios'\r\n\r\nimport * as constants from './constants'\r\nimport {logOut} from \"./actions/authActions\";\r\n\r\nexport const authMiddleware = ({dispatch, getState}) => next => action => {\r\n    if (action.type !== constants.API) return next(action);\r\n\r\n    dispatch(\r\n        {\r\n            type: constants.TOGGLE_LOADER\r\n        }\r\n    )\r\n\r\n    // axios.defaults.headers['Access-Control-Allow-Origin'] = 'http://localhost:3000/';\r\n\r\n    const AUTH_TOKEN = getState().user.token;\r\n    if (AUTH_TOKEN)\r\n        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${AUTH_TOKEN}`;\r\n\r\n    const BASE_URL = 'http://65.1.29.149/';\r\n    const {url, method, success, data, postProcessSuccess, postProcessError} = action.payload;\r\n    axios({\r\n        method,\r\n        url: BASE_URL + url,\r\n        data: data ? data : null\r\n    }).then((response) => {\r\n        dispatch(\r\n            {\r\n                type: constants.TOGGLE_LOADER\r\n            }\r\n        )\r\n        if (success) dispatch(success(response))\r\n        if (postProcessSuccess) setTimeout(() => postProcessSuccess(response), 300)\r\n    }).catch((err) => {\r\n        console.log(err)\r\n        dispatch(\r\n            {\r\n                type: constants.TOGGLE_LOADER\r\n            }\r\n        )\r\n        if (err.response.data.message) {\r\n            postProcessError(err.response.data.message)\r\n        } else if (err.response.status === 401) {\r\n            dispatch(\r\n                {\r\n                    type: constants.RESET_USER_INFO\r\n                }\r\n            )\r\n        } else {\r\n            if (err.response.data.errors.length > 0) {\r\n                if (!err) console.warn(err.response.data.errors[0]);\r\n                else {\r\n                    if (err) {\r\n                        if (postProcessError) postProcessError(err.response.data.errors[0].message);\r\n                    }\r\n                }\r\n            } else {\r\n                if (err.response && err.response.status === 403)\r\n                    dispatch(logOut());\r\n                else\r\n                    postProcessError(err.response);\r\n            }\r\n        }\r\n    })\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './includes/bootstrap'\nimport './index.css'\nimport App from './App'\nimport {Router } from \"react-router-dom\"\nimport {Provider} from \"react-redux\";\nimport {configureStore} from \"./redux/configureStore\";\nimport '@fortawesome/fontawesome-free/js/all'\nimport history from './history';\n\nconst store = configureStore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router  history={history}>\n                <App/>\n            </Router >\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nimport {authMiddleware} from \"./middleware\";\r\n\r\nexport const configureStore = (initialState) => {\r\n    const composeEnhencers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    return createStore(rootReducer, initialState, composeEnhencers(applyMiddleware(authMiddleware)))\r\n}"],"sourceRoot":""}